<HTML>
<HEAD>
<TITLE>Funktionen f&uuml;r das Einlesen der Konfiguration</TITLE>
</HEAD>
<BODY>
<H1>Funktionen f&uuml;r das Einlesen der Konfiguration</H1>
<P>
<P>
<H2>Bibliothek</H2>
<P>
<TABLE BORDER="1">
<TR><TH>Projekt</TH><TD>libs/config</TD></TR>
<TR><TH>Library</TH><TD>libconfig.a</TD></TR>
<TR><TH>Includedatei</TH><TD>config.h</TD></TR>
</TABLE>
<P>
<H2>Definitionen</H2>
<P>
<H3>Konstanten</H3>
<P>
<H4>Konstanten f&uuml;r den Pfad der Konfigdatei</H4>
<P>
<PRE>#define MRSYSTEM_CONFIG_FILE "/etc/mrsystem"</PRE>
<P>
<H4>Konstanten f&uuml;r Konfigurationswerte</H4>
<P>
<PRE>#define MRSYSTEM_CFG_PROTO_MOTOROLA 0x01
#define MRSYSTEM_CFG_PROTO_MFX      0x02
#define MRSYSTEM_CFG_PROTO_DCC      0x04

#define MRSYSTEM_CFG_SYSTEM_START "start"
#define MRSYSTEM_CFG_SYSTEM_STOP  "stop"
#define MRSYSTEM_CFG_SYSTEM_HIDE   "hide"
#define MRSYSTEM_CFG_SYSTEM_UNHIDE "unhide"

#define MRSYSTEM_CFG_SYNC_PERIODIC 0x01
#define MRSYSTEM_CFG_SYNC_KEYBD    0x02
#define MRSYSTEM_CFG_SYNC_LAYOUT   0x04
#define MRSYSTEM_CFG_SYNC_MEM      0x08
#define MRSYSTEM_CFG_SYNC_CONTR    0x10

#define DISABLE_WAKEUP_S88 "0"</PRE>
<P>
<H3>Datentypen</H3>
<P>
<H4>Datentypen f&uuml;r Konfigurationsvariable</H4>
<P>
<PRE>typedef enum { CfgPortVal, CfgBcVal, CfgForkVal, CfgTraceVal,
                    CfgVerboseVal, CfgUsageVal, CfgZentraleVal,
		    CfgProtokollVal, CfgSyncVal, CfgConnTcpVal,
		    CfgEmuHostCom,  CfgNumLokfkts } CfgIntValues;
typedef enum { CfgIfaceVal, CfgAddrVal, CfgCanIfVal, CfgPathVal,
               CfgUdpBcVal, CfgStartVal, CfgWakeUpS88, CfgGpioS88,
               CfgHideMs2Val, CfgSerialLineVal } CfgStrValues;</PRE>
<P>
<H4>Datentypen f&uuml;r Funktionen der Konfigurationslib</H4>
<P>
<PRE>typedef struct {
   Map *Config;
   IniParsStruct *Parser;
} ConfigStruct;</PRE>
<P>
<H3>Makros</H3>
<P>
<H4>Makros, um Felder im Kommando zu setzen und lesen</H4>
<P>
<PRE>#define ConfigSetConfig(Data, Val) (Data)->Config=Val
#define ConfigSetParser(Data, Val) (Data)->Parser=Val
#define ConfigGetConfig(Data) (Data)->Config
#define ConfigGetParser(Data) (Data)->Parser</PRE>
<P>
<H3>Funktionen</H3>
<P>
<PRE>ConfigStruct *ConfigCreate(void);
void ConfigDestroy(ConfigStruct *Data);
void ConfigInit(ConfigStruct *Data, char *IniFile);
void ConfigExit(ConfigStruct *Data);
void ConfigReadfile(ConfigStruct *Data);
void ConfigCmdLine(ConfigStruct *Data, char *optstr, int argc, char *argv[]);
int ConfigGetIntVal(ConfigStruct *Data, CfgIntValues Value);
char *ConfigGetStrVal(ConfigStruct *Data, CfgStrValues Value);
void ConfigAddIntVal(ConfigStruct *Data, CfgIntValues ValueTyp, int Value);
void ConfigAddStrVal(ConfigStruct *Data, CfgStrValues ValueTyp, char *Value);</PRE>
<P>
<H2>Beschreibung</H2>
<P>
Nach dem Anlegen eines Config Objektes und Initialisierung kann die Konfigdatei
eingelesen bzw. die Kommandozeile an den Damon geparst werden. Danach
k&ouml;nnen die einzelnen Knfigurationswerte abgefragt werden. Es gibt sowohl
f&uuml;r Zahlen als auch f&uuml;r Zeichenketten eine eigene Abfragefunktion.
Es gibt auch Funktionen, um einen Konfigurationswert zu setzen.
<P>
<TABLE BORDER=1">
<TR><TH>Funktion</TH><TD>Beschreibung</TD>
<TR><TD>ConfigCreate()</TD><TD>Die <VAR>ConfigCreate</VAR> Funktion wird
als erste Funktion aufgerufen, um die Struktur anzulegen.</TD></TR>
<TD>ConfigDestroy()</TD><TD>Die <VAR>ConfigDestroy</VAR> Funktion wird als
letzte Funktion aufgerufen und gibt die Struktur wieder frei.</TD></TR>
<TR><TD>ConfigInit()</TD><TD>Die <VAR>ConfigInit</VAR> Funktion initialisiert
die Variablen.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt</TD></TR>
<TR><TD>IniFile</TD><TD>Pfad zu der Konfigurationsdatei</TD></TR>
</TABLE></TD></TR>
<TR><TD>ConfigReadFile()</TD><TD>Die <VAR>ConfigRedaFile</VAR> Funktion liest
die Konfigurationsdatei ein. Der Pfad wurde mit der <VAR>ConfigInit</VAR>
Funktion gesetzt.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt</TD></TR>
</TABLE></TD></TR>
<TR><TD>ConfigCmdLine()</TD><TD>Die <VAR>ConfigCmdLine</VAR> Funktion wertet
die Kommandozeile aus und speichert die Konfigurationswerte.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt</TD></TR>
<TR><TD>optstr</TD><TD>Die erlaubten Parameter, wie sie auch die Funktion
<VAR>optarg()</VAR> akzeptiert. Ein Superset der Parameter f&uuml;r alle
Parameter, die s&auml;tliche Daemons des mrsystem akzeptieren, sind:
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>-2</TD><TD>sync: bitmask for sync with ms2</TH></TR>
<TR><TD>-8</TD><TD>wakeup_s88: start s88 modules</TH></TR>
<TR><TD>-b</TD><TD>broadcast: send udpa as broadcast</TH></TR>
<TR><TD>-c</TD><TD>can_interface: name of can interface</TH></TR>
<TR><TD>-e</TD><TD>emu_host_com: port for virtual com driver on host</TH></TR>
<TR><TD>-f</TD><TD>dont fork to go in background</TH></TR>
<TR><TD>-g</TD><TD>gleissignal: system start, start power on track</TH></TR>
<TR><TD>-h</TD><TD>hide_ms2: hide ms2</TH></TR>
<TR><TD>-i</TD><TD>address: network adress of drehscheibe</TH></TR>
<TR><TD>-k</TD><TD>number of lokfKts</TH></TR>
<TR><TD>-l</TD><TD>cs2_path: path where write lokomotive.cs2</TH></TR>
<TR><TD>-m</TD><TD>serial_line: name of seriela interface</TH></TR>
<TR><TD>-p</TD><TD>port: port of drehscheibe</TH></TR>
<TR><TD>-s</TD><TD>protokoll: bitmask for track protocolls</TH></TR>
<TR><TD>-t</TD><TD>trace can messages from udp</TH></TR>
<TR><TD>-v</TD><TD>verbose</TH></TR>
<TR><TD>-z</TD><TD>zentrale: 0=proxy mode, 1=ehtenret adddon for ms2</TH></TR>
<TR><TD>-x</TD><TD>conn_tcp: use tcp connection</TH></TR>
<TR><TD>-?</TD><TD>Hilfe &uuml;er die Kommandozeilenparameter</TH></TR>
</TABLE>
</TD></TR>
<TR><TD>argc</TD><TD>Anzahl der Parameter an main()</TD></TR>
<TR><TD>argv</TD><TD>Parameter an main()</TD></TR>
</TABLE></TD></TR>
<TR><TD>int ConfigGetIntVal()</TD><TD>Diese Funktion fragt einen
Konfigurationswert f&uuml;r eine Zahl ab. Der m&ouml;gliche Wertebereich ist
durch den enum <VAR>CfgIntValues</VAR> vorgegeben. Eine Beschreibung der
Konfigurationswerte ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.html">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt<VAR>Value</VAR>.
<TR><TD>ValueTyp</TD><TD>Der Wert gibt an, welcher Konfigurationswert abgefragt
werden soll. Der m&ouml;gliche Wertebereich ist durch den enum
<VAR>CfgIntValues</VAR> vorgegeben. Eine Beschreibung der Konfigurationswerte
ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.htm">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>CfgPortVal</TD><TD>port to drehscheibe</TD></TR>
<TR><TD>CfgBcVal</TD><TD>send udp as broadcast</TD></TR>
<TR><TD>CfgForkVal</TD><TD>dont fork to go in background</TD></TR>
<TR><TD>CfgTraceVal</TD><TD>trace can messages from udp</TD></TR>
<TR><TD>CfgVerboseVal</TD><TD>verbose</TD></TR>
<TR><TD>CfgUsageVal</TD><TD>Hilfe &uuml;er die Kommandozeilenparameter</TD></TR>
<TR><TD>CfgZentraleVal</TD><TD>0:proxy mode, 1=ehternet addon for ms2</TD></TR>
<TR><TD>CfgProtokollVal</TD><TD>bitmask for track protocolls<</TD></TR>
<TR><TD>CfgSyncVal</TD><TD>bitmask for sync with ms2</TD></TR>
<TR><TD>CfgConnTcpVal</TD><TD>Benutze tcp conection</TD></TR>
<TR><TD>CfgEmuHostCom</TD><TD>Port f&uuml;r virtual com driver</TD></TR>
<TR><TD>CfgNumLokfkts</TD><TD>Anzahl Lokfunktionen in lokomotive.cs2</TD></TR>
</TABLE>
</TD></TR>
<TR><TH>Returnwert:</TH><TD>Der abgefragte Konfigurationswert</TD></TR>
</TABLE></TD></TR>
<TR><TD>char *ConfigGetStrVal()</TD><TD>Diese Funktion fragt einen
Konfigurationswert f&uuml;r eine Zeichenkette ab. Eine Beschreibung der
Konfigurationswerte ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.html">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt<VAR>Value</VAR>.
<TR><TD>Value</TD><TD>Der Wert gibt an, welcher Konfigurationswert abgefragt
werden soll. Der m&ouml;gliche Wertebereich ist durch den enum
<VAR>CfgStrValues</VAR> vorgegeben. Eine Beschreibung der Konfigurationswerte
ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.htm">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>CfgIfaceVal</TD><TD>interface to drehscheibe</TD></TR>
<TR><TD>CfgAddrVal</TD><TD>network adress of drehscheibe</TD></TR>
<TR><TD>CfgCanIfVal</TD><TD>name of can interface</TD></TR>
<TR><TD>CfgPathVal</TD><TD>path where write lokomotive.cs2</TD></TR>
<TR><TD>CfgUdpBcVal</TD><TD>send udp as broadcast</TD></TR>
<TR><TD>CfgStartVal</TD><TD>system start, start power on track</TD></TR>
<TR><TD>CfgWakeUpS88</TD><TD>start s88 modules</TD></TR>
<TR><TD>CfgGpioS88</TD><TD>parameter for client_gpios88</TD></TR>
<TR><TD>CfgHideMs2Val</TD><TD>hide ms2</TD></TR>
<TR><TD>CfgSerialLineVal</TD><TD>name of serial interface</TD></TR>
</TABLE></TD></TR>
<TR><TH>Returnwert:</TH><TD>Zeiger auf den abgefragte
Konfigurationswert</TD></TR>
</TABLE></TD></TR>
<TR><TD>ConfigAddIntVal()</TD><TD>Diese Funktion setzt einen
Konfigurationswert f&uuml;r eine Zahl.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt<VAR>Value</VAR>.
<TR><TD>ValueTyp</TD><TD>Der Wert gibt an, welcher Konfigurationswert gesetzt
werden soll. Der m&ouml;gliche Wertebereich ist durch den enum
<VAR>CfgIntValues</VAR> vorgegeben. Eine Beschreibung der
Konfigurationswerte ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.htm">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>CfgPortVal</TD><TD>port to drehscheibe</TD></TR>
<TR><TD>CfgBcVal</TD><TD>send udp as broadcast</TD></TR>
<TR><TD>CfgForkVal</TD><TD>dont fork to go in background</TD></TR>
<TR><TD>CfgTraceVal</TD><TD>trace can messages from udp</TD></TR>
<TR><TD>CfgVerboseVal</TD><TD>verbose</TD></TR>
<TR><TD>CfgUsageVal</TD><TD>Hilfe &uuml;er die Kommandozeilenparameter</TD></TR>
<TR><TD>CfgZentraleVal</TD><TD>0:proxy mode, 1=ehternet addon for ms2</TD></TR>
<TR><TD>CfgProtokollVal</TD><TD>bitmask for track protocolls<</TD></TR>
<TR><TD>CfgSyncVal</TD><TD>bitmask for sync with ms2</TD></TR>
<TR><TD>CfgConnTcpVal</TD><TD>use tcp conection</TD></TR>
<TR><TD>CfgEmuHostCom</TD><TD>port for virtual com driver on host</TD></TR>
</TABLE></TD></TR>
<VAR>CfgIntValues</VAR> vorgegeben</TD></TR>
<TR><TD>Value</TD><TD>zu setzender Wert</TD></TR>
</TABLE></TD></TR>
<TR><TD>ConfigAddStrVal()</TD><TD>Diese Funktion setzt einen
Konfigurationswert f&uuml;r eine Zeichenkette.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>Data</TD><TD>Zeiger auf das Konfig Objekt<VAR>Value</VAR>.
<TR><TD>ValueTyp</TD><TD>Der Wert gibt an, welcher Konfigurationswert gesetzt
werden soll. Der m&ouml;gliche Wertebereich ist durch den enum
<VAR>CfgStrValues</VAR> vorgegeben. Eine Beschreibung der
Konfigurationswerte ist auch Bestandteil der Beschreibung der
<A HREF="../konfig.htm">Konfig</A>.<BR>
<TABLE BORDER="1">
<TR><TH>Parameter</TH><TH>Bedeutung</TH></TR>
<TR><TD>CfgIfaceVal</TD><TD>interface to drehscheibe</TD></TR>
<TR><TD>CfgAddrVal</TD><TD>network adress of drehscheibe</TD></TR>
<TR><TD>CfgCanIfVal</TD><TD>name of can interface</TD></TR>
<TR><TD>CfgPathVal</TD><TD>path where write lokomotive.cs2</TD></TR>
<TR><TD>CfgUdpBcVal</TD><TD>send udp as broadcast</TD></TR>
<TR><TD>CfgStartVal</TD><TD>system start, start power on track</TD></TR>
<TR><TD>CfgWakeUpS88</TD><TD>start s88 modules</TD></TR>
<TR><TD>CfgGpioS88</TD><TD>parameter for client_gpios88</TD></TR>
<TR><TD>CfgHideMs2Val</TD><TD>hide ms2</TD></TR>
<TR><TD>CfgSerialLineVal</TD><TD>name of serial interface</TD></TR>
</TABLE></TD></TR>
<TR><TD>Value</TD><TD>zu setzender Wert</TD></TR>
</TABLE></TD></TR>
</TABLE>
</BODY>
</HTML>
