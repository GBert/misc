gplink-1.5.2 #1311 (Aug 17 2017)
Copyright (c) 1998-2016 gputils project
Listing File Generated: 19.03.2018  01:25:14


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.1 #10289 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"usart.c"
                                           	list	p=16f1709
                                           	radix dec
                                           	include "p16f1709.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Aug 13 2015
                                           ;  MPASM PIC16F1709 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_delay_ms
                                           	extern	_init_usart
                                           	extern	_STATUSbits
                                           	extern	_BSRbits
                                           	extern	_INTCONbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_PIR3bits
                                           	extern	_T1CONbits
                                           	extern	_T1GCONbits
                                           	extern	_T2CONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PIE3bits
                                           	extern	_OPTION_REGbits
                                           	extern	_PCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCSTATbits
                                           	extern	_ADCON0bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON2bits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM1CON1bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_CMOUTbits
                                           	extern	_BORCONbits
                                           	extern	_FVRCONbits
                                           	extern	_DAC1CON0bits
                                           	extern	_DAC1CON1bits
                                           	extern	_ZCD1CONbits
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMCON1bits
                                           	extern	_VREGCONbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_BAUDCTL1bits
                                           	extern	_WPUAbits
                                           	extern	_WPUBbits
                                           	extern	_WPUCbits
                                           	extern	_SSP1BUFbits
                                           	extern	_SSPBUFbits
                                           	extern	_SSP1ADDbits
                                           	extern	_SSPADDbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1CONbits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCONbits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_ODCONAbits
                                           	extern	_ODCONBbits
                                           	extern	_ODCONCbits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CCPTMRSbits
                                           	extern	_SLRCONAbits
                                           	extern	_SLRCONBbits
                                           	extern	_SLRCONCbits
                                           	extern	_INLVLAbits
                                           	extern	_INLVLBbits
                                           	extern	_INLVLCbits
                                           	extern	_IOCAPbits
                                           	extern	_IOCANbits
                                           	extern	_IOCAFbits
                                           	extern	_IOCBPbits
                                           	extern	_IOCBNbits
                                           	extern	_IOCBFbits
                                           	extern	_IOCCPbits
                                           	extern	_IOCCNbits
                                           	extern	_IOCCFbits
                                           	extern	_T4CONbits
                                           	extern	_T6CONbits
                                           	extern	_OPA1CONbits
                                           	extern	_OPA2CONbits
                                           	extern	_PWM3DCLbits
                                           	extern	_PWM3DCHbits
                                           	extern	_PWM3CONbits
                                           	extern	_PWM3CON0bits
                                           	extern	_PWM4DCLbits
                                           	extern	_PWM4DCHbits
                                           	extern	_PWM4CONbits
                                           	extern	_PWM4CON0bits
                                           	extern	_COG1PHRbits
                                           	extern	_COG1PHFbits
                                           	extern	_COG1BLKRbits
                                           	extern	_COG1BLKFbits
                                           	extern	_COG1DBRbits
                                           	extern	_COG1DBFbits
                                           	extern	_COG1CON0bits
                                           	extern	_COG1CON1bits
                                           	extern	_COG1RISbits
                                           	extern	_COG1RSIMbits
                                           	extern	_COG1FISbits
                                           	extern	_COG1FSIMbits
                                           	extern	_COG1ASD0bits
                                           	extern	_COG1ASD1bits
                                           	extern	_COG1STRbits
                                           	extern	_PPSLOCKbits
                                           	extern	_CLCDATAbits
                                           	extern	_CLC1CONbits
                                           	extern	_CLC1POLbits
                                           	extern	_CLC1SEL0bits
                                           	extern	_CLC1SEL1bits
                                           	extern	_CLC1SEL2bits
                                           	extern	_CLC1SEL3bits
                                           	extern	_CLC1GLS0bits
                                           	extern	_CLC1GLS1bits
                                           	extern	_CLC1GLS2bits
                                           	extern	_CLC1GLS3bits
                                           	extern	_CLC2CONbits
                                           	extern	_CLC2POLbits
                                           	extern	_CLC2SEL0bits
                                           	extern	_CLC2SEL1bits
                                           	extern	_CLC2SEL2bits
                                           	extern	_CLC2SEL3bits
                                           	extern	_CLC2GLS0bits
                                           	extern	_CLC2GLS1bits
                                           	extern	_CLC2GLS2bits
                                           	extern	_CLC2GLS3bits
                                           	extern	_CLC3CONbits
                                           	extern	_CLC3POLbits
                                           	extern	_CLC3SEL0bits
                                           	extern	_CLC3SEL1bits
                                           	extern	_CLC3SEL2bits
                                           	extern	_CLC3SEL3bits
                                           	extern	_CLC3GLS0bits
                                           	extern	_CLC3GLS1bits
                                           	extern	_CLC3GLS2bits
                                           	extern	_CLC3GLS3bits
                                           	extern	_ICDBK0Hbits
                                           	extern	_STATUS_SHADbits
                                           	extern	_INDF0
                                           	extern	_INDF1
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR0
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_FSR1
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_BSR
                                           	extern	_WREG
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_PIR3
                                           	extern	_TMR0
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_T1GCON
                                           	extern	_TMR2
                                           	extern	_PR2
                                           	extern	_T2CON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PIE3
                                           	extern	_OPTION_REG
                                           	extern	_PCON
                                           	extern	_WDTCON
                                           	extern	_OSCTUNE
                                           	extern	_OSCCON
                                           	extern	_OSCSTAT
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_ADCON1
                                           	extern	_ADCON2
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_CM1CON0
                                           	extern	_CM1CON1
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_CMOUT
                                           	extern	_BORCON
                                           	extern	_FVRCON
                                           	extern	_DAC1CON0
                                           	extern	_DAC1CON1
                                           	extern	_ZCD1CON
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMADR
                                           	extern	_PMADRL
                                           	extern	_PMADRH
                                           	extern	_PMDAT
                                           	extern	_PMDATL
                                           	extern	_PMDATH
                                           	extern	_PMCON1
                                           	extern	_PMCON2
                                           	extern	_VREGCON
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_SP1BRG
                                           	extern	_SP1BRGL
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SPBRGL
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_BAUDCTL1
                                           	extern	_WPUA
                                           	extern	_WPUB
                                           	extern	_WPUC
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1CON
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON
                                           	extern	_SSPCON1
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_ODCONA
                                           	extern	_ODCONB
                                           	extern	_ODCONC
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPTMRS
                                           	extern	_SLRCONA
                                           	extern	_SLRCONB
                                           	extern	_SLRCONC
                                           	extern	_INLVLA
                                           	extern	_INLVLB
                                           	extern	_INLVLC
                                           	extern	_IOCAP
                                           	extern	_IOCAN
                                           	extern	_IOCAF
                                           	extern	_IOCBP
                                           	extern	_IOCBN
                                           	extern	_IOCBF
                                           	extern	_IOCCP
                                           	extern	_IOCCN
                                           	extern	_IOCCF
                                           	extern	_TMR4
                                           	extern	_PR4
                                           	extern	_T4CON
                                           	extern	_TMR6
                                           	extern	_PR6
                                           	extern	_T6CON
                                           	extern	_OPA1CON
                                           	extern	_OPA2CON
                                           	extern	_PWM3DCL
                                           	extern	_PWM3DCH
                                           	extern	_PWM3CON
                                           	extern	_PWM3CON0
                                           	extern	_PWM4DCL
                                           	extern	_PWM4DCH
                                           	extern	_PWM4CON
                                           	extern	_PWM4CON0
                                           	extern	_COG1PHR
                                           	extern	_COG1PHF
                                           	extern	_COG1BLKR
                                           	extern	_COG1BLKF
                                           	extern	_COG1DBR
                                           	extern	_COG1DBF
                                           	extern	_COG1CON0
                                           	extern	_COG1CON1
                                           	extern	_COG1RIS
                                           	extern	_COG1RSIM
                                           	extern	_COG1FIS
                                           	extern	_COG1FSIM
                                           	extern	_COG1ASD0
                                           	extern	_COG1ASD1
                                           	extern	_COG1STR
                                           	extern	_PPSLOCK
                                           	extern	_INTPPS
                                           	extern	_T0CKIPPS
                                           	extern	_T1CKIPPS
                                           	extern	_T1GPPS
                                           	extern	_CCP1PPS
                                           	extern	_CCP2PPS
                                           	extern	_COGINPPS
                                           	extern	_SSPCLKPPS
                                           	extern	_SSPDATPPS
                                           	extern	_SSPSSPPS
                                           	extern	_RXPPS
                                           	extern	_CKPPS
                                           	extern	_CLCIN0PPS
                                           	extern	_CLCIN1PPS
                                           	extern	_CLCIN2PPS
                                           	extern	_CLCIN3PPS
                                           	extern	_RA0PPS
                                           	extern	_RA1PPS
                                           	extern	_RA2PPS
                                           	extern	_RA4PPS
                                           	extern	_RA5PPS
                                           	extern	_RB4PPS
                                           	extern	_RB5PPS
                                           	extern	_RB6PPS
                                           	extern	_RB7PPS
                                           	extern	_RC0PPS
                                           	extern	_RC1PPS
                                           	extern	_RC2PPS
                                           	extern	_RC3PPS
                                           	extern	_RC4PPS
                                           	extern	_RC5PPS
                                           	extern	_RC6PPS
                                           	extern	_RC7PPS
                                           	extern	_CLCDATA
                                           	extern	_CLC1CON
                                           	extern	_CLC1POL
                                           	extern	_CLC1SEL0
                                           	extern	_CLC1SEL1
                                           	extern	_CLC1SEL2
                                           	extern	_CLC1SEL3
                                           	extern	_CLC1GLS0
                                           	extern	_CLC1GLS1
                                           	extern	_CLC1GLS2
                                           	extern	_CLC1GLS3
                                           	extern	_CLC2CON
                                           	extern	_CLC2POL
                                           	extern	_CLC2SEL0
                                           	extern	_CLC2SEL1
                                           	extern	_CLC2SEL2
                                           	extern	_CLC2SEL3
                                           	extern	_CLC2GLS0
                                           	extern	_CLC2GLS1
                                           	extern	_CLC2GLS2
                                           	extern	_CLC2GLS3
                                           	extern	_CLC3CON
                                           	extern	_CLC3POL
                                           	extern	_CLC3SEL0
                                           	extern	_CLC3SEL1
                                           	extern	_CLC3SEL2
                                           	extern	_CLC3SEL3
                                           	extern	_CLC3GLS0
                                           	extern	_CLC3GLS1
                                           	extern	_CLC3GLS2
                                           	extern	_CLC3GLS3
                                           	extern	_ICDBK0H
                                           	extern	_STATUS_SHAD
                                           	extern	_WREG_SHAD
                                           	extern	_BSR_SHAD
                                           	extern	_PCLATH_SHAD
                                           	extern	_FSR0L_SHAD
                                           	extern	_FSR0H_SHAD
                                           	extern	_FSR1L_SHAD
                                           	extern	_FSR1H_SHAD
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	__gptrget1
                                           	extern	__gptrput1

                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_print_rom_fifo
                                           	global	_fifo_putchar
                                           	global	_print_debug_fifo
                                           	global	_print_debug_value
                                           	global	_puts_rom
                                           	global	_putchar_wait
                                           	global	_putchar
                                           	global	_print_hex_wait
                                           	global	_sData

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_usart_0	udata
                                           r0x1011	res	1
                                           r0x1023	res	1
                                           r0x1022	res	1
                                           r0x1021	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x101B	res	1
                                           r0x101A	res	1
                                           r0x1019	res	1
                                           r0x101C	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1002	res	1
                                           r0x1001	res	1
                                           r0x1000	res	1
                                           r0x1005	res	1
                                           r0x1004	res	1
                                           r0x1003	res	1
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100D	res	1
                                           r0x100E	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------

                                           ID_usart_0	idata
                                           _sData
                                           	db	0x00, 0x00, 0x00


                                           ID_usart_1	code
                                           ___str_0
0005f2   3420     retlw   0x20             	retlw 0x20 ; ' '
0005f3   3444     retlw   0x44             	retlw 0x44 ; 'D'
0005f4   3461     retlw   0x61             	retlw 0x61 ; 'a'
0005f5   3474     retlw   0x74             	retlw 0x74 ; 't'
0005f6   3461     retlw   0x61             	retlw 0x61 ; 'a'
0005f7   343a     retlw   0x3a             	retlw 0x3a ; ':'
0005f8   3420     retlw   0x20             	retlw 0x20 ; ' '
0005f9   3400     retlw   0x00             	retlw 0x00 ; '.'
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_usart	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;   __gptrput1
                                           ;   __gptrput1
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;   __gptrput1
                                           ;   __gptrput1
                                           ;22 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   STK01
                                           ;   r0x1002
                                           ;   STK02
                                           ;   r0x1003
                                           ;   STK03
                                           ;   r0x1004
                                           ;   STK04
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;   r0x100A
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;; Starting pCode block
                                           S_usart__print_rom_fifo	code
                                           _print_rom_fifo:
                                           ; 2 exit points
                                           ;	.line	100; "usart.c"	char print_rom_fifo(const unsigned char *s, struct serial_buffer *fifo) {
0001d1   002c     movlb   0x0c             	BANKSEL	r0x1000
0001d2   00b7     movwf   0x37             	MOVWF	r0x1000
0001d3   0874     movf    0x74, 0x0        	MOVF	STK00,W
0001d4   00b6     movwf   0x36             	MOVWF	r0x1001
0001d5   0873     movf    0x73, 0x0        	MOVF	STK01,W
0001d6   00b5     movwf   0x35             	MOVWF	r0x1002
0001d7   0872     movf    0x72, 0x0        	MOVF	STK02,W
0001d8   00ba     movwf   0x3a             	MOVWF	r0x1003
0001d9   0871     movf    0x71, 0x0        	MOVF	STK03,W
0001da   00b9     movwf   0x39             	MOVWF	r0x1004
0001db   0870     movf    0x70, 0x0        	MOVF	STK04,W
                                           ;	.line	101; "usart.c"	unsigned char head = fifo->head;
0001dc   00b8     movwf   0x38             	MOVWF	r0x1005
0001dd   00f3     movwf   0x73             	MOVWF	STK01
0001de   0839     movf    0x39, 0x0        	MOVF	r0x1004,W
0001df   00f4     movwf   0x74             	MOVWF	STK00
0001e0   083a     movf    0x3a, 0x0        	MOVF	r0x1003,W
0001e1   3184     movlp   0x04             	PAGESEL	__gptrget1
0001e2   24fd     call    0x04fd           	CALL	__gptrget1
0001e3   3181     movlp   0x01             	PAGESEL	$
0001e4   002c     movlb   0x0c             	BANKSEL	r0x1006
0001e5   00bb     movwf   0x3b             	MOVWF	r0x1006
                                           ;	.line	103; "usart.c"	while ((c = *s++)) {
0001e6   3001     movlw   0x01             	MOVLW	0x01
0001e7   0738     addwf   0x38, 0x0        	ADDWF	r0x1005,W
0001e8   00bc     movwf   0x3c             	MOVWF	r0x1007
0001e9   01bd     clrf    0x3d             	CLRF	r0x1008
0001ea   0dbd     rlf     0x3d, 0x1        	RLF	r0x1008,F
0001eb   0839     movf    0x39, 0x0        	MOVF	r0x1004,W
0001ec   07bd     addwf   0x3d, 0x1        	ADDWF	r0x1008,F
0001ed   01be     clrf    0x3e             	CLRF	r0x1009
0001ee   0dbe     rlf     0x3e, 0x1        	RLF	r0x1009,F
0001ef   083a     movf    0x3a, 0x0        	MOVF	r0x1003,W
0001f0   07be     addwf   0x3e, 0x1        	ADDWF	r0x1009,F
0001f1   3002     movlw   0x02             	MOVLW	0x02
0001f2   0738     addwf   0x38, 0x0        	ADDWF	r0x1005,W
0001f3   00bf     movwf   0x3f             	MOVWF	r0x100A
0001f4   01c0     clrf    0x40             	CLRF	r0x100B
0001f5   0dc0     rlf     0x40, 0x1        	RLF	r0x100B,F
0001f6   0839     movf    0x39, 0x0        	MOVF	r0x1004,W
0001f7   07c0     addwf   0x40, 0x1        	ADDWF	r0x100B,F
0001f8   01c1     clrf    0x41             	CLRF	r0x100C
0001f9   0dc1     rlf     0x41, 0x1        	RLF	r0x100C,F
0001fa   083a     movf    0x3a, 0x0        	MOVF	r0x1003,W
0001fb   07c1     addwf   0x41, 0x1        	ADDWF	r0x100C,F
                                           _00163_DS_:
0001fc   002c     movlb   0x0c             	BANKSEL	r0x1002
0001fd   0835     movf    0x35, 0x0        	MOVF	r0x1002,W
0001fe   00f3     movwf   0x73             	MOVWF	STK01
0001ff   0836     movf    0x36, 0x0        	MOVF	r0x1001,W
000200   00f4     movwf   0x74             	MOVWF	STK00
000201   0837     movf    0x37, 0x0        	MOVF	r0x1000,W
000202   3184     movlp   0x04             	PAGESEL	__gptrget1
000203   24fd     call    0x04fd           	CALL	__gptrget1
000204   3182     movlp   0x02             	PAGESEL	$
000205   002c     movlb   0x0c             	BANKSEL	r0x100D
000206   00c2     movwf   0x42             	MOVWF	r0x100D
000207   0ab5     incf    0x35, 0x1        	INCF	r0x1002,F
000208   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000209   0ab6     incf    0x36, 0x1        	INCF	r0x1001,F
00020a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00020b   0ab7     incf    0x37, 0x1        	INCF	r0x1000,F
00020c   0842     movf    0x42, 0x0        	MOVF	r0x100D,W
00020d   00c3     movwf   0x43             	MOVWF	r0x100E
00020e   0842     movf    0x42, 0x0        	MOVF	r0x100D,W
00020f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000210   2a3b     goto    0x023b           	GOTO	_00165_DS_
                                           ;	.line	104; "usart.c"	head++;
000211   0a3b     incf    0x3b, 0x0        	INCF	r0x1006,W
000212   00c2     movwf   0x42             	MOVWF	r0x100D
                                           ;	.line	105; "usart.c"	head &= SERIAL_BUFFER_SIZE_MASK;	/* wrap around if neededd */
000213   301f     movlw   0x1f             	MOVLW	0x1f
000214   0542     andwf   0x42, 0x0        	ANDWF	r0x100D,W
000215   00bb     movwf   0x3b             	MOVWF	r0x1006
                                           ;	.line	106; "usart.c"	if (head != fifo->tail) {		/* space left ? */
000216   083c     movf    0x3c, 0x0        	MOVF	r0x1007,W
000217   00f3     movwf   0x73             	MOVWF	STK01
000218   083d     movf    0x3d, 0x0        	MOVF	r0x1008,W
000219   00f4     movwf   0x74             	MOVWF	STK00
00021a   083e     movf    0x3e, 0x0        	MOVF	r0x1009,W
00021b   3184     movlp   0x04             	PAGESEL	__gptrget1
00021c   24fd     call    0x04fd           	CALL	__gptrget1
00021d   3182     movlp   0x02             	PAGESEL	$
00021e   002c     movlb   0x0c             	BANKSEL	r0x100D
00021f   00c2     movwf   0x42             	MOVWF	r0x100D
                                           ;	.line	107; "usart.c"	fifo->data[head] = c;
000220   063b     xorwf   0x3b, 0x0        	XORWF	r0x1006,W
000221   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000222   2a39     goto    0x0239           	GOTO	_00161_DS_
000223   083b     movf    0x3b, 0x0        	MOVF	r0x1006,W
000224   073f     addwf   0x3f, 0x0        	ADDWF	r0x100A,W
000225   00c2     movwf   0x42             	MOVWF	r0x100D
000226   0840     movf    0x40, 0x0        	MOVF	r0x100B,W
000227   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000228   3e01     addlw   0x01             	ADDLW	0x01
000229   00c4     movwf   0x44             	MOVWF	r0x100F
00022a   0841     movf    0x41, 0x0        	MOVF	r0x100C,W
00022b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00022c   3e01     addlw   0x01             	ADDLW	0x01
00022d   00c5     movwf   0x45             	MOVWF	r0x1010
00022e   0843     movf    0x43, 0x0        	MOVF	r0x100E,W
00022f   00f2     movwf   0x72             	MOVWF	STK02
000230   0842     movf    0x42, 0x0        	MOVF	r0x100D,W
000231   00f3     movwf   0x73             	MOVWF	STK01
000232   0844     movf    0x44, 0x0        	MOVF	r0x100F,W
000233   00f4     movwf   0x74             	MOVWF	STK00
000234   0845     movf    0x45, 0x0        	MOVF	r0x1010,W
000235   3184     movlp   0x04             	PAGESEL	__gptrput1
000236   24f2     call    0x04f2           	CALL	__gptrput1
000237   3182     movlp   0x02             	PAGESEL	$
000238   29fc     goto    0x01fc           	GOTO	_00163_DS_
                                           _00161_DS_:
                                           ;	.line	109; "usart.c"	return -1;
000239   30ff     movlw   0xff             	MOVLW	0xff
00023a   2a47     goto    0x0247           	GOTO	_00166_DS_
                                           _00165_DS_:
                                           ;	.line	112; "usart.c"	fifo->head = head;		/* only store new pointer if all is OK */
00023b   002c     movlb   0x0c             	BANKSEL	r0x1006
00023c   083b     movf    0x3b, 0x0        	MOVF	r0x1006,W
00023d   00f2     movwf   0x72             	MOVWF	STK02
00023e   0838     movf    0x38, 0x0        	MOVF	r0x1005,W
00023f   00f3     movwf   0x73             	MOVWF	STK01
000240   0839     movf    0x39, 0x0        	MOVF	r0x1004,W
000241   00f4     movwf   0x74             	MOVWF	STK00
000242   083a     movf    0x3a, 0x0        	MOVF	r0x1003,W
000243   3184     movlp   0x04             	PAGESEL	__gptrput1
000244   24f2     call    0x04f2           	CALL	__gptrput1
000245   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	113; "usart.c"	return 1;
000246   3001     movlw   0x01             	MOVLW	0x01
                                           _00166_DS_:
                                           ;	.line	114; "usart.c"	}
000247   0008     return                   	RETURN	
                                           ; exit point of _print_rom_fifo

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _print_debug_fifo
                                           ;   __gptrget1
                                           ;   _putchar_wait
                                           ;   __gptrget1
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   __gptrget1
                                           ;   _putchar
                                           ;   __gptrput1
                                           ;   __gptrget1
                                           ;   _print_debug_fifo
                                           ;   __gptrget1
                                           ;   _putchar_wait
                                           ;   __gptrget1
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   __gptrget1
                                           ;   _putchar
                                           ;   __gptrput1
                                           ;11 compiler assigned registers:
                                           ;   r0x1019
                                           ;   STK00
                                           ;   r0x101A
                                           ;   STK01
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   STK02
                                           ;; Starting pCode block
                                           S_usart__fifo_putchar	code
                                           _fifo_putchar:
                                           ; 2 exit points
                                           ;	.line	76; "usart.c"	char fifo_putchar(struct serial_buffer *fifo) {
000139   002c     movlb   0x0c             	BANKSEL	r0x1019
00013a   00af     movwf   0x2f             	MOVWF	r0x1019
00013b   0874     movf    0x74, 0x0        	MOVF	STK00,W
00013c   00ae     movwf   0x2e             	MOVWF	r0x101A
00013d   0873     movf    0x73, 0x0        	MOVF	STK01,W
00013e   00ad     movwf   0x2d             	MOVWF	r0x101B
                                           ;	.line	78; "usart.c"	tail = fifo->tail;
00013f   3001     movlw   0x01             	MOVLW	0x01
000140   072d     addwf   0x2d, 0x0        	ADDWF	r0x101B,W
000141   00b0     movwf   0x30             	MOVWF	r0x101C
000142   01b1     clrf    0x31             	CLRF	r0x101D
000143   0db1     rlf     0x31, 0x1        	RLF	r0x101D,F
000144   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
000145   07b1     addwf   0x31, 0x1        	ADDWF	r0x101D,F
000146   01b2     clrf    0x32             	CLRF	r0x101E
000147   0db2     rlf     0x32, 0x1        	RLF	r0x101E,F
000148   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
000149   07b2     addwf   0x32, 0x1        	ADDWF	r0x101E,F
00014a   0830     movf    0x30, 0x0        	MOVF	r0x101C,W
00014b   00f3     movwf   0x73             	MOVWF	STK01
00014c   0831     movf    0x31, 0x0        	MOVF	r0x101D,W
00014d   00f4     movwf   0x74             	MOVWF	STK00
00014e   0832     movf    0x32, 0x0        	MOVF	r0x101E,W
00014f   3184     movlp   0x04             	PAGESEL	__gptrget1
000150   24fd     call    0x04fd           	CALL	__gptrget1
000151   3181     movlp   0x01             	PAGESEL	$
000152   002c     movlb   0x0c             	BANKSEL	r0x101F
000153   00b3     movwf   0x33             	MOVWF	r0x101F
                                           ;	.line	79; "usart.c"	print_debug_fifo(fifo);
000154   082d     movf    0x2d, 0x0        	MOVF	r0x101B,W
000155   00f3     movwf   0x73             	MOVWF	STK01
000156   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
000157   00f4     movwf   0x74             	MOVWF	STK00
000158   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
000159   3184     movlp   0x04             	PAGESEL	_print_debug_fifo
00015a   24d5     call    0x04d5           	CALL	_print_debug_fifo
00015b   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	80; "usart.c"	if (fifo->head != tail) {
00015c   002c     movlb   0x0c             	BANKSEL	r0x101B
00015d   082d     movf    0x2d, 0x0        	MOVF	r0x101B,W
00015e   00f3     movwf   0x73             	MOVWF	STK01
00015f   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
000160   00f4     movwf   0x74             	MOVWF	STK00
000161   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
000162   3184     movlp   0x04             	PAGESEL	__gptrget1
000163   24fd     call    0x04fd           	CALL	__gptrget1
000164   3181     movlp   0x01             	PAGESEL	$
000165   002c     movlb   0x0c             	BANKSEL	r0x101C
000166   00b0     movwf   0x30             	MOVWF	r0x101C
                                           ;	.line	81; "usart.c"	tail++;
000167   0633     xorwf   0x33, 0x0        	XORWF	r0x101F,W
000168   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000169   29cf     goto    0x01cf           	GOTO	_00144_DS_
00016a   0ab3     incf    0x33, 0x1        	INCF	r0x101F,F
                                           ;	.line	82; "usart.c"	tail &= SERIAL_BUFFER_SIZE_MASK;	/* wrap around if neededd */
00016b   301f     movlw   0x1f             	MOVLW	0x1f
00016c   0533     andwf   0x33, 0x0        	ANDWF	r0x101F,W
00016d   00b0     movwf   0x30             	MOVWF	r0x101C
                                           ;	.line	84; "usart.c"	putchar_wait('f');
00016e   3066     movlw   0x66             	MOVLW	0x66
00016f   3185     movlp   0x05             	PAGESEL	_putchar_wait
000170   25cc     call    0x05cc           	CALL	_putchar_wait
000171   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	85; "usart.c"	print_debug_value('T', fifo->tail);
000172   3001     movlw   0x01             	MOVLW	0x01
000173   002c     movlb   0x0c             	BANKSEL	r0x101B
000174   072d     addwf   0x2d, 0x0        	ADDWF	r0x101B,W
000175   00b1     movwf   0x31             	MOVWF	r0x101D
000176   01b2     clrf    0x32             	CLRF	r0x101E
000177   0db2     rlf     0x32, 0x1        	RLF	r0x101E,F
000178   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
000179   07b2     addwf   0x32, 0x1        	ADDWF	r0x101E,F
00017a   01b3     clrf    0x33             	CLRF	r0x101F
00017b   0db3     rlf     0x33, 0x1        	RLF	r0x101F,F
00017c   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
00017d   07b3     addwf   0x33, 0x1        	ADDWF	r0x101F,F
00017e   0831     movf    0x31, 0x0        	MOVF	r0x101D,W
00017f   00f3     movwf   0x73             	MOVWF	STK01
000180   0832     movf    0x32, 0x0        	MOVF	r0x101E,W
000181   00f4     movwf   0x74             	MOVWF	STK00
000182   0833     movf    0x33, 0x0        	MOVF	r0x101F,W
000183   3184     movlp   0x04             	PAGESEL	__gptrget1
000184   24fd     call    0x04fd           	CALL	__gptrget1
000185   3181     movlp   0x01             	PAGESEL	$
000186   002c     movlb   0x0c             	BANKSEL	r0x1020
000187   00b4     movwf   0x34             	MOVWF	r0x1020
000188   00f4     movwf   0x74             	MOVWF	STK00
000189   3054     movlw   0x54             	MOVLW	0x54
00018a   3185     movlp   0x05             	PAGESEL	_print_debug_value
00018b   255f     call    0x055f           	CALL	_print_debug_value
00018c   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	86; "usart.c"	putchar_wait(' ');
00018d   3020     movlw   0x20             	MOVLW	0x20
00018e   3185     movlp   0x05             	PAGESEL	_putchar_wait
00018f   25cc     call    0x05cc           	CALL	_putchar_wait
000190   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	87; "usart.c"	print_debug_value('T', tail);
000191   002c     movlb   0x0c             	BANKSEL	r0x101C
000192   0830     movf    0x30, 0x0        	MOVF	r0x101C,W
000193   00f4     movwf   0x74             	MOVWF	STK00
000194   3054     movlw   0x54             	MOVLW	0x54
000195   3185     movlp   0x05             	PAGESEL	_print_debug_value
000196   255f     call    0x055f           	CALL	_print_debug_value
000197   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	88; "usart.c"	putchar_wait('\r');
000198   300d     movlw   0x0d             	MOVLW	0x0d
000199   3185     movlp   0x05             	PAGESEL	_putchar_wait
00019a   25cc     call    0x05cc           	CALL	_putchar_wait
00019b   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	89; "usart.c"	putchar_wait('\n');
00019c   300a     movlw   0x0a             	MOVLW	0x0a
00019d   3185     movlp   0x05             	PAGESEL	_putchar_wait
00019e   25cc     call    0x05cc           	CALL	_putchar_wait
00019f   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	91; "usart.c"	if (putchar(fifo->data[tail])) {
0001a0   3002     movlw   0x02             	MOVLW	0x02
0001a1   002c     movlb   0x0c             	BANKSEL	r0x101B
0001a2   07ad     addwf   0x2d, 0x1        	ADDWF	r0x101B,F
0001a3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001a4   0aae     incf    0x2e, 0x1        	INCF	r0x101A,F
0001a5   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001a6   0aaf     incf    0x2f, 0x1        	INCF	r0x1019,F
0001a7   0830     movf    0x30, 0x0        	MOVF	r0x101C,W
0001a8   07ad     addwf   0x2d, 0x1        	ADDWF	r0x101B,F
0001a9   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
0001aa   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001ab   3e01     addlw   0x01             	ADDLW	0x01
0001ac   00ae     movwf   0x2e             	MOVWF	r0x101A
0001ad   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
0001ae   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0001af   3e01     addlw   0x01             	ADDLW	0x01
0001b0   00af     movwf   0x2f             	MOVWF	r0x1019
0001b1   082d     movf    0x2d, 0x0        	MOVF	r0x101B,W
0001b2   00f3     movwf   0x73             	MOVWF	STK01
0001b3   082e     movf    0x2e, 0x0        	MOVF	r0x101A,W
0001b4   00f4     movwf   0x74             	MOVWF	STK00
0001b5   082f     movf    0x2f, 0x0        	MOVF	r0x1019,W
0001b6   3184     movlp   0x04             	PAGESEL	__gptrget1
0001b7   24fd     call    0x04fd           	CALL	__gptrget1
0001b8   3181     movlp   0x01             	PAGESEL	$
0001b9   002c     movlb   0x0c             	BANKSEL	r0x1020
0001ba   00b4     movwf   0x34             	MOVWF	r0x1020
0001bb   3185     movlp   0x05             	PAGESEL	_putchar
0001bc   25bf     call    0x05bf           	CALL	_putchar
0001bd   3181     movlp   0x01             	PAGESEL	$
0001be   002c     movlb   0x0c             	BANKSEL	r0x101B
0001bf   00ad     movwf   0x2d             	MOVWF	r0x101B
0001c0   082d     movf    0x2d, 0x0        	MOVF	r0x101B,W
0001c1   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0001c2   29cf     goto    0x01cf           	GOTO	_00144_DS_
                                           ;	.line	92; "usart.c"	fifo->tail = tail;
0001c3   0830     movf    0x30, 0x0        	MOVF	r0x101C,W
0001c4   00f2     movwf   0x72             	MOVWF	STK02
0001c5   0831     movf    0x31, 0x0        	MOVF	r0x101D,W
0001c6   00f3     movwf   0x73             	MOVWF	STK01
0001c7   0832     movf    0x32, 0x0        	MOVF	r0x101E,W
0001c8   00f4     movwf   0x74             	MOVWF	STK00
0001c9   0833     movf    0x33, 0x0        	MOVF	r0x101F,W
0001ca   3184     movlp   0x04             	PAGESEL	__gptrput1
0001cb   24f2     call    0x04f2           	CALL	__gptrput1
0001cc   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	93; "usart.c"	return 1;
0001cd   3001     movlw   0x01             	MOVLW	0x01
0001ce   29d0     goto    0x01d0           	GOTO	_00145_DS_
                                           _00144_DS_:
                                           ;	.line	96; "usart.c"	return 0;
0001cf   3000     movlw   0x00             	MOVLW	0x00
                                           _00145_DS_:
                                           ;	.line	97; "usart.c"	}
0001d0   0008     return                   	RETURN	
                                           ; exit point of _fifo_putchar

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _print_debug_value
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_usart__print_debug_fifo	code
                                           _print_debug_fifo:
                                           ; 2 exit points
                                           ;	.line	58; "usart.c"	print_debug_value('S', SERIAL_BUFFER_SIZE);
0004d5   3020     movlw   0x20             	MOVLW	0x20
0004d6   00f4     movwf   0x74             	MOVWF	STK00
0004d7   3053     movlw   0x53             	MOVLW	0x53
0004d8   3185     movlp   0x05             	PAGESEL	_print_debug_value
0004d9   255f     call    0x055f           	CALL	_print_debug_value
0004da   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	59; "usart.c"	putchar_wait(' ');
0004db   3020     movlw   0x20             	MOVLW	0x20
0004dc   3185     movlp   0x05             	PAGESEL	_putchar_wait
0004dd   25cc     call    0x05cc           	CALL	_putchar_wait
0004de   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	60; "usart.c"	print_debug_value('M', SERIAL_BUFFER_SIZE_MASK);
0004df   301f     movlw   0x1f             	MOVLW	0x1f
0004e0   00f4     movwf   0x74             	MOVWF	STK00
0004e1   304d     movlw   0x4d             	MOVLW	0x4d
0004e2   3185     movlp   0x05             	PAGESEL	_print_debug_value
0004e3   255f     call    0x055f           	CALL	_print_debug_value
0004e4   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	61; "usart.c"	putchar_wait(' ');
0004e5   3020     movlw   0x20             	MOVLW	0x20
0004e6   3185     movlp   0x05             	PAGESEL	_putchar_wait
0004e7   25cc     call    0x05cc           	CALL	_putchar_wait
0004e8   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	71; "usart.c"	putchar_wait('\r');
0004e9   300d     movlw   0x0d             	MOVLW	0x0d
0004ea   3185     movlp   0x05             	PAGESEL	_putchar_wait
0004eb   25cc     call    0x05cc           	CALL	_putchar_wait
0004ec   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	72; "usart.c"	putchar_wait('\n');
0004ed   300a     movlw   0x0a             	MOVLW	0x0a
0004ee   3185     movlp   0x05             	PAGESEL	_putchar_wait
0004ef   25cc     call    0x05cc           	CALL	_putchar_wait
0004f0   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	73; "usart.c"	}
0004f1   0008     return                   	RETURN	
                                           ; exit point of _print_debug_fifo

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _print_hex_wait
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _print_hex_wait
                                           ;3 compiler assigned registers:
                                           ;   r0x1017
                                           ;   STK00
                                           ;   r0x1018
                                           ;; Starting pCode block
                                           S_usart__print_debug_value	code
                                           _print_debug_value:
                                           ; 2 exit points
                                           ;	.line	49; "usart.c"	void print_debug_value(char c, unsigned char value) {
00055f   002c     movlb   0x0c             	BANKSEL	r0x1017
000560   00ab     movwf   0x2b             	MOVWF	r0x1017
000561   0874     movf    0x74, 0x0        	MOVF	STK00,W
000562   00ac     movwf   0x2c             	MOVWF	r0x1018
                                           ;	.line	50; "usart.c"	putchar_wait(c);
000563   082b     movf    0x2b, 0x0        	MOVF	r0x1017,W
000564   3185     movlp   0x05             	PAGESEL	_putchar_wait
000565   25cc     call    0x05cc           	CALL	_putchar_wait
000566   3185     movlp   0x05             	PAGESEL	$
                                           ;	.line	51; "usart.c"	putchar_wait(':');
000567   303a     movlw   0x3a             	MOVLW	0x3a
000568   3185     movlp   0x05             	PAGESEL	_putchar_wait
000569   25cc     call    0x05cc           	CALL	_putchar_wait
00056a   3185     movlp   0x05             	PAGESEL	$
                                           ;	.line	52; "usart.c"	print_hex_wait(value);
00056b   002c     movlb   0x0c             	BANKSEL	r0x1018
00056c   082c     movf    0x2c, 0x0        	MOVF	r0x1018,W
00056d   3183     movlp   0x03             	PAGESEL	_print_hex_wait
00056e   2398     call    0x0398           	CALL	_print_hex_wait
00056f   3185     movlp   0x05             	PAGESEL	$
                                           ;	.line	53; "usart.c"	}
000570   0008     return                   	RETURN	
                                           ; exit point of _print_debug_value

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;   _putchar_wait
                                           ;5 compiler assigned registers:
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;; Starting pCode block
                                           S_usart__print_hex_wait	code
                                           _print_hex_wait:
                                           ; 2 exit points
                                           ;	.line	36; "usart.c"	void print_hex_wait(unsigned char c) {
000398   002c     movlb   0x0c             	BANKSEL	r0x1012
000399   00a6     movwf   0x26             	MOVWF	r0x1012
                                           ;	.line	38; "usart.c"	nibble = ((c & 0xf0) >> 4) + '0';
00039a   00a7     movwf   0x27             	MOVWF	r0x1013
00039b   01a8     clrf    0x28             	CLRF	r0x1014
00039c   30f0     movlw   0xf0             	MOVLW	0xf0
00039d   05a7     andwf   0x27, 0x1        	ANDWF	r0x1013,F
00039e   01a8     clrf    0x28             	CLRF	r0x1014
00039f   0e27     swapf   0x27, 0x0        	SWAPF	r0x1013,W
0003a0   390f     andlw   0x0f             	ANDLW	0x0f
0003a1   00a9     movwf   0x29             	MOVWF	r0x1015
0003a2   0e28     swapf   0x28, 0x0        	SWAPF	r0x1014,W
0003a3   00aa     movwf   0x2a             	MOVWF	r0x1016
0003a4   39f0     andlw   0xf0             	ANDLW	0xf0
0003a5   04a9     iorwf   0x29, 0x1        	IORWF	r0x1015,F
0003a6   06aa     xorwf   0x2a, 0x1        	XORWF	r0x1016,F
0003a7   30f0     movlw   0xf0             	MOVLW	0xf0
0003a8   19aa     btfsc   0x2a, 0x3        	BTFSC	r0x1016,3
0003a9   04aa     iorwf   0x2a, 0x1        	IORWF	r0x1016,F
0003aa   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
0003ab   00a7     movwf   0x27             	MOVWF	r0x1013
0003ac   3030     movlw   0x30             	MOVLW	0x30
0003ad   07a7     addwf   0x27, 0x1        	ADDWF	r0x1013,F
                                           ;;unsigned compare: left < lit(0x3A=58), size=1
                                           ;	.line	39; "usart.c"	if (nibble >= 0x3a)
0003ae   303a     movlw   0x3a             	MOVLW	0x3a
0003af   0227     subwf   0x27, 0x0        	SUBWF	r0x1013,W
0003b0   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0003b1   2bb7     goto    0x03b7           	GOTO	_00126_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffb34f3840
                                           ;	.line	40; "usart.c"	nibble += 7;
0003b2   0827     movf    0x27, 0x0        	MOVF	r0x1013,W
0003b3   00a9     movwf   0x29             	MOVWF	r0x1015
0003b4   3007     movlw   0x07             	MOVLW	0x07
0003b5   0729     addwf   0x29, 0x0        	ADDWF	r0x1015,W
0003b6   00a7     movwf   0x27             	MOVWF	r0x1013
                                           _00126_DS_:
                                           ;	.line	41; "usart.c"	putchar_wait(nibble);
0003b7   002c     movlb   0x0c             	BANKSEL	r0x1013
0003b8   0827     movf    0x27, 0x0        	MOVF	r0x1013,W
0003b9   3185     movlp   0x05             	PAGESEL	_putchar_wait
0003ba   25cc     call    0x05cc           	CALL	_putchar_wait
0003bb   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	43; "usart.c"	nibble = (c & 0x0f) + '0';
0003bc   002c     movlb   0x0c             	BANKSEL	r0x1012
0003bd   0826     movf    0x26, 0x0        	MOVF	r0x1012,W
0003be   00a7     movwf   0x27             	MOVWF	r0x1013
0003bf   300f     movlw   0x0f             	MOVLW	0x0f
0003c0   0527     andwf   0x27, 0x0        	ANDWF	r0x1013,W
0003c1   00a6     movwf   0x26             	MOVWF	r0x1012
0003c2   3030     movlw   0x30             	MOVLW	0x30
0003c3   07a6     addwf   0x26, 0x1        	ADDWF	r0x1012,F
                                           ;;unsigned compare: left < lit(0x3A=58), size=1
                                           ;	.line	44; "usart.c"	if (nibble >= 0x3a)
0003c4   303a     movlw   0x3a             	MOVLW	0x3a
0003c5   0226     subwf   0x26, 0x0        	SUBWF	r0x1012,W
0003c6   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0003c7   2bcd     goto    0x03cd           	GOTO	_00128_DS_
                                           ;;genSkipc:3257: created from rifx:0x7fffb34f3840
                                           ;	.line	45; "usart.c"	nibble += 7;
0003c8   0826     movf    0x26, 0x0        	MOVF	r0x1012,W
0003c9   00a7     movwf   0x27             	MOVWF	r0x1013
0003ca   3007     movlw   0x07             	MOVLW	0x07
0003cb   0727     addwf   0x27, 0x0        	ADDWF	r0x1013,W
0003cc   00a6     movwf   0x26             	MOVWF	r0x1012
                                           _00128_DS_:
                                           ;	.line	46; "usart.c"	putchar_wait(nibble);
0003cd   002c     movlb   0x0c             	BANKSEL	r0x1012
0003ce   0826     movf    0x26, 0x0        	MOVF	r0x1012,W
0003cf   3185     movlp   0x05             	PAGESEL	_putchar_wait
0003d0   25cc     call    0x05cc           	CALL	_putchar_wait
0003d1   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	47; "usart.c"	}
0003d2   0008     return                   	RETURN	
                                           ; exit point of _print_hex_wait

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _putchar_wait
                                           ;   __gptrget1
                                           ;   _putchar_wait
                                           ;7 compiler assigned registers:
                                           ;   r0x1021
                                           ;   STK00
                                           ;   r0x1022
                                           ;   STK01
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;; Starting pCode block
                                           S_usart__puts_rom	code
                                           _puts_rom:
                                           ; 2 exit points
                                           ;	.line	29; "usart.c"	void puts_rom(const char *s) {
000496   002c     movlb   0x0c             	BANKSEL	r0x1021
000497   00a3     movwf   0x23             	MOVWF	r0x1021
000498   0874     movf    0x74, 0x0        	MOVF	STK00,W
000499   00a2     movwf   0x22             	MOVWF	r0x1022
00049a   0873     movf    0x73, 0x0        	MOVF	STK01,W
00049b   00a1     movwf   0x21             	MOVWF	r0x1023
                                           _00117_DS_:
                                           ;	.line	31; "usart.c"	while ((c = *s++)) {
00049c   002c     movlb   0x0c             	BANKSEL	r0x1023
00049d   0821     movf    0x21, 0x0        	MOVF	r0x1023,W
00049e   00f3     movwf   0x73             	MOVWF	STK01
00049f   0822     movf    0x22, 0x0        	MOVF	r0x1022,W
0004a0   00f4     movwf   0x74             	MOVWF	STK00
0004a1   0823     movf    0x23, 0x0        	MOVF	r0x1021,W
0004a2   3184     movlp   0x04             	PAGESEL	__gptrget1
0004a3   24fd     call    0x04fd           	CALL	__gptrget1
0004a4   3184     movlp   0x04             	PAGESEL	$
0004a5   002c     movlb   0x0c             	BANKSEL	r0x1024
0004a6   00a4     movwf   0x24             	MOVWF	r0x1024
0004a7   0aa1     incf    0x21, 0x1        	INCF	r0x1023,F
0004a8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004a9   0aa2     incf    0x22, 0x1        	INCF	r0x1022,F
0004aa   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004ab   0aa3     incf    0x23, 0x1        	INCF	r0x1021,F
0004ac   0824     movf    0x24, 0x0        	MOVF	r0x1024,W
0004ad   00a5     movwf   0x25             	MOVWF	r0x1025
0004ae   0824     movf    0x24, 0x0        	MOVF	r0x1024,W
0004af   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004b0   2cb6     goto    0x04b6           	GOTO	_00120_DS_
                                           ;	.line	32; "usart.c"	putchar_wait(c);
0004b1   0825     movf    0x25, 0x0        	MOVF	r0x1025,W
0004b2   3185     movlp   0x05             	PAGESEL	_putchar_wait
0004b3   25cc     call    0x05cc           	CALL	_putchar_wait
0004b4   3184     movlp   0x04             	PAGESEL	$
0004b5   2c9c     goto    0x049c           	GOTO	_00117_DS_
                                           _00120_DS_:
                                           ;	.line	34; "usart.c"	}
0004b6   0008     return                   	RETURN	
                                           ; exit point of _puts_rom

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1011
                                           ;; Starting pCode block
                                           S_usart__putchar_wait	code
                                           _putchar_wait:
                                           ; 2 exit points
                                           ;	.line	24; "usart.c"	void putchar_wait(unsigned char c) {
0005cc   002c     movlb   0x0c             	BANKSEL	r0x1011
0005cd   00a0     movwf   0x20             	MOVWF	r0x1011
                                           _00112_DS_:
                                           ;	.line	25; "usart.c"	while (!TRMT) ;
0005ce   0023     movlb   0x03             	BANKSEL	_TX1STAbits
0005cf   1c9e     btfss   0x1e, 0x1        	BTFSS	_TX1STAbits,1
0005d0   2dce     goto    0x05ce           	GOTO	_00112_DS_
                                           ;	.line	26; "usart.c"	TXREG1 = c;
0005d1   002c     movlb   0x0c             	BANKSEL	r0x1011
0005d2   0820     movf    0x20, 0x0        	MOVF	r0x1011,W
0005d3   0023     movlb   0x03             	BANKSEL	_TXREG1
0005d4   009a     movwf   0x1a             	MOVWF	_TXREG1
                                           ;	.line	27; "usart.c"	}
0005d5   0008     return                   	RETURN	
                                           ; exit point of _putchar_wait

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1011
                                           ;; Starting pCode block
                                           S_usart__putchar	code
                                           _putchar:
                                           ; 2 exit points
                                           ;	.line	15; "usart.c"	char putchar(unsigned char c) {
0005bf   002c     movlb   0x0c             	BANKSEL	r0x1011
0005c0   00a0     movwf   0x20             	MOVWF	r0x1011
                                           ;	.line	16; "usart.c"	if (TRMT) {
0005c1   0023     movlb   0x03             	BANKSEL	_TX1STAbits
0005c2   1c9e     btfss   0x1e, 0x1        	BTFSS	_TX1STAbits,1
0005c3   2dca     goto    0x05ca           	GOTO	_00106_DS_
                                           ;	.line	17; "usart.c"	TXREG1 = c;
0005c4   002c     movlb   0x0c             	BANKSEL	r0x1011
0005c5   0820     movf    0x20, 0x0        	MOVF	r0x1011,W
0005c6   0023     movlb   0x03             	BANKSEL	_TXREG1
0005c7   009a     movwf   0x1a             	MOVWF	_TXREG1
                                           ;	.line	18; "usart.c"	return 1;
0005c8   3001     movlw   0x01             	MOVLW	0x01
0005c9   2dcb     goto    0x05cb           	GOTO	_00107_DS_
                                           _00106_DS_:
                                           ;	.line	20; "usart.c"	return 0;
0005ca   3000     movlw   0x00             	MOVLW	0x00
                                           _00107_DS_:
                                           ;	.line	21; "usart.c"	}
0005cb   0008     return                   	RETURN	
                                           ; exit point of _putchar


                                           ;	code size estimation:
                                           ;	  338+   95 =   433 instructions ( 1056 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.1 #10289 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"i2c.c"
                                           	list	p=16f1709
                                           	radix dec
                                           	include "p16f1709.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Aug 13 2015
                                           ;  MPASM PIC16F1709 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_delay_ms
                                           	extern	_putchar
                                           	extern	_putchar_wait
                                           	extern	_puts_rom
                                           	extern	_init_usart
                                           	extern	_fifo_putchar
                                           	extern	_print_rom_fifo
                                           	extern	_print_debug_value
                                           	extern	_print_debug_fifo
                                           	extern	_STATUSbits
                                           	extern	_BSRbits
                                           	extern	_INTCONbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_PIR3bits
                                           	extern	_T1CONbits
                                           	extern	_T1GCONbits
                                           	extern	_T2CONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PIE3bits
                                           	extern	_OPTION_REGbits
                                           	extern	_PCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCSTATbits
                                           	extern	_ADCON0bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON2bits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM1CON1bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_CMOUTbits
                                           	extern	_BORCONbits
                                           	extern	_FVRCONbits
                                           	extern	_DAC1CON0bits
                                           	extern	_DAC1CON1bits
                                           	extern	_ZCD1CONbits
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMCON1bits
                                           	extern	_VREGCONbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_BAUDCTL1bits
                                           	extern	_WPUAbits
                                           	extern	_WPUBbits
                                           	extern	_WPUCbits
                                           	extern	_SSP1BUFbits
                                           	extern	_SSPBUFbits
                                           	extern	_SSP1ADDbits
                                           	extern	_SSPADDbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1CONbits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCONbits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_ODCONAbits
                                           	extern	_ODCONBbits
                                           	extern	_ODCONCbits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CCPTMRSbits
                                           	extern	_SLRCONAbits
                                           	extern	_SLRCONBbits
                                           	extern	_SLRCONCbits
                                           	extern	_INLVLAbits
                                           	extern	_INLVLBbits
                                           	extern	_INLVLCbits
                                           	extern	_IOCAPbits
                                           	extern	_IOCANbits
                                           	extern	_IOCAFbits
                                           	extern	_IOCBPbits
                                           	extern	_IOCBNbits
                                           	extern	_IOCBFbits
                                           	extern	_IOCCPbits
                                           	extern	_IOCCNbits
                                           	extern	_IOCCFbits
                                           	extern	_T4CONbits
                                           	extern	_T6CONbits
                                           	extern	_OPA1CONbits
                                           	extern	_OPA2CONbits
                                           	extern	_PWM3DCLbits
                                           	extern	_PWM3DCHbits
                                           	extern	_PWM3CONbits
                                           	extern	_PWM3CON0bits
                                           	extern	_PWM4DCLbits
                                           	extern	_PWM4DCHbits
                                           	extern	_PWM4CONbits
                                           	extern	_PWM4CON0bits
                                           	extern	_COG1PHRbits
                                           	extern	_COG1PHFbits
                                           	extern	_COG1BLKRbits
                                           	extern	_COG1BLKFbits
                                           	extern	_COG1DBRbits
                                           	extern	_COG1DBFbits
                                           	extern	_COG1CON0bits
                                           	extern	_COG1CON1bits
                                           	extern	_COG1RISbits
                                           	extern	_COG1RSIMbits
                                           	extern	_COG1FISbits
                                           	extern	_COG1FSIMbits
                                           	extern	_COG1ASD0bits
                                           	extern	_COG1ASD1bits
                                           	extern	_COG1STRbits
                                           	extern	_PPSLOCKbits
                                           	extern	_CLCDATAbits
                                           	extern	_CLC1CONbits
                                           	extern	_CLC1POLbits
                                           	extern	_CLC1SEL0bits
                                           	extern	_CLC1SEL1bits
                                           	extern	_CLC1SEL2bits
                                           	extern	_CLC1SEL3bits
                                           	extern	_CLC1GLS0bits
                                           	extern	_CLC1GLS1bits
                                           	extern	_CLC1GLS2bits
                                           	extern	_CLC1GLS3bits
                                           	extern	_CLC2CONbits
                                           	extern	_CLC2POLbits
                                           	extern	_CLC2SEL0bits
                                           	extern	_CLC2SEL1bits
                                           	extern	_CLC2SEL2bits
                                           	extern	_CLC2SEL3bits
                                           	extern	_CLC2GLS0bits
                                           	extern	_CLC2GLS1bits
                                           	extern	_CLC2GLS2bits
                                           	extern	_CLC2GLS3bits
                                           	extern	_CLC3CONbits
                                           	extern	_CLC3POLbits
                                           	extern	_CLC3SEL0bits
                                           	extern	_CLC3SEL1bits
                                           	extern	_CLC3SEL2bits
                                           	extern	_CLC3SEL3bits
                                           	extern	_CLC3GLS0bits
                                           	extern	_CLC3GLS1bits
                                           	extern	_CLC3GLS2bits
                                           	extern	_CLC3GLS3bits
                                           	extern	_ICDBK0Hbits
                                           	extern	_STATUS_SHADbits
                                           	extern	_INDF0
                                           	extern	_INDF1
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR0
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_FSR1
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_BSR
                                           	extern	_WREG
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_PIR3
                                           	extern	_TMR0
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_T1GCON
                                           	extern	_TMR2
                                           	extern	_PR2
                                           	extern	_T2CON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PIE3
                                           	extern	_OPTION_REG
                                           	extern	_PCON
                                           	extern	_WDTCON
                                           	extern	_OSCTUNE
                                           	extern	_OSCCON
                                           	extern	_OSCSTAT
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_ADCON1
                                           	extern	_ADCON2
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_CM1CON0
                                           	extern	_CM1CON1
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_CMOUT
                                           	extern	_BORCON
                                           	extern	_FVRCON
                                           	extern	_DAC1CON0
                                           	extern	_DAC1CON1
                                           	extern	_ZCD1CON
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMADR
                                           	extern	_PMADRL
                                           	extern	_PMADRH
                                           	extern	_PMDAT
                                           	extern	_PMDATL
                                           	extern	_PMDATH
                                           	extern	_PMCON1
                                           	extern	_PMCON2
                                           	extern	_VREGCON
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_SP1BRG
                                           	extern	_SP1BRGL
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SPBRGL
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_BAUDCTL1
                                           	extern	_WPUA
                                           	extern	_WPUB
                                           	extern	_WPUC
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1CON
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON
                                           	extern	_SSPCON1
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_ODCONA
                                           	extern	_ODCONB
                                           	extern	_ODCONC
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPTMRS
                                           	extern	_SLRCONA
                                           	extern	_SLRCONB
                                           	extern	_SLRCONC
                                           	extern	_INLVLA
                                           	extern	_INLVLB
                                           	extern	_INLVLC
                                           	extern	_IOCAP
                                           	extern	_IOCAN
                                           	extern	_IOCAF
                                           	extern	_IOCBP
                                           	extern	_IOCBN
                                           	extern	_IOCBF
                                           	extern	_IOCCP
                                           	extern	_IOCCN
                                           	extern	_IOCCF
                                           	extern	_TMR4
                                           	extern	_PR4
                                           	extern	_T4CON
                                           	extern	_TMR6
                                           	extern	_PR6
                                           	extern	_T6CON
                                           	extern	_OPA1CON
                                           	extern	_OPA2CON
                                           	extern	_PWM3DCL
                                           	extern	_PWM3DCH
                                           	extern	_PWM3CON
                                           	extern	_PWM3CON0
                                           	extern	_PWM4DCL
                                           	extern	_PWM4DCH
                                           	extern	_PWM4CON
                                           	extern	_PWM4CON0
                                           	extern	_COG1PHR
                                           	extern	_COG1PHF
                                           	extern	_COG1BLKR
                                           	extern	_COG1BLKF
                                           	extern	_COG1DBR
                                           	extern	_COG1DBF
                                           	extern	_COG1CON0
                                           	extern	_COG1CON1
                                           	extern	_COG1RIS
                                           	extern	_COG1RSIM
                                           	extern	_COG1FIS
                                           	extern	_COG1FSIM
                                           	extern	_COG1ASD0
                                           	extern	_COG1ASD1
                                           	extern	_COG1STR
                                           	extern	_PPSLOCK
                                           	extern	_INTPPS
                                           	extern	_T0CKIPPS
                                           	extern	_T1CKIPPS
                                           	extern	_T1GPPS
                                           	extern	_CCP1PPS
                                           	extern	_CCP2PPS
                                           	extern	_COGINPPS
                                           	extern	_SSPCLKPPS
                                           	extern	_SSPDATPPS
                                           	extern	_SSPSSPPS
                                           	extern	_RXPPS
                                           	extern	_CKPPS
                                           	extern	_CLCIN0PPS
                                           	extern	_CLCIN1PPS
                                           	extern	_CLCIN2PPS
                                           	extern	_CLCIN3PPS
                                           	extern	_RA0PPS
                                           	extern	_RA1PPS
                                           	extern	_RA2PPS
                                           	extern	_RA4PPS
                                           	extern	_RA5PPS
                                           	extern	_RB4PPS
                                           	extern	_RB5PPS
                                           	extern	_RB6PPS
                                           	extern	_RB7PPS
                                           	extern	_RC0PPS
                                           	extern	_RC1PPS
                                           	extern	_RC2PPS
                                           	extern	_RC3PPS
                                           	extern	_RC4PPS
                                           	extern	_RC5PPS
                                           	extern	_RC6PPS
                                           	extern	_RC7PPS
                                           	extern	_CLCDATA
                                           	extern	_CLC1CON
                                           	extern	_CLC1POL
                                           	extern	_CLC1SEL0
                                           	extern	_CLC1SEL1
                                           	extern	_CLC1SEL2
                                           	extern	_CLC1SEL3
                                           	extern	_CLC1GLS0
                                           	extern	_CLC1GLS1
                                           	extern	_CLC1GLS2
                                           	extern	_CLC1GLS3
                                           	extern	_CLC2CON
                                           	extern	_CLC2POL
                                           	extern	_CLC2SEL0
                                           	extern	_CLC2SEL1
                                           	extern	_CLC2SEL2
                                           	extern	_CLC2SEL3
                                           	extern	_CLC2GLS0
                                           	extern	_CLC2GLS1
                                           	extern	_CLC2GLS2
                                           	extern	_CLC2GLS3
                                           	extern	_CLC3CON
                                           	extern	_CLC3POL
                                           	extern	_CLC3SEL0
                                           	extern	_CLC3SEL1
                                           	extern	_CLC3SEL2
                                           	extern	_CLC3SEL3
                                           	extern	_CLC3GLS0
                                           	extern	_CLC3GLS1
                                           	extern	_CLC3GLS2
                                           	extern	_CLC3GLS3
                                           	extern	_ICDBK0H
                                           	extern	_STATUS_SHAD
                                           	extern	_WREG_SHAD
                                           	extern	_BSR_SHAD
                                           	extern	_PCLATH_SHAD
                                           	extern	_FSR0L_SHAD
                                           	extern	_FSR0H_SHAD
                                           	extern	_FSR1L_SHAD
                                           	extern	_FSR1H_SHAD
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH

                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_i2c_wait
                                           	global	_i2c_start
                                           	global	_i2c_restart
                                           	global	_i2c_stop
                                           	global	_i2c_sendACK
                                           	global	_i2c_sendNACK
                                           	global	_i2c_write

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_i2c_0	udata
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           _i2c_write_data_1_22	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_i2c	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_write	code
                                           _i2c_write:
                                           ; 2 exit points
                                           ;	.line	46; "i2c.c"	int8_t i2c_write(volatile uint8_t data) {
000592   002c     movlb   0x0c             	BANKSEL	_i2c_write_data_1_22
000593   00cb     movwf   0x4b             	MOVWF	_i2c_write_data_1_22
                                           ;	.line	47; "i2c.c"	i2c_wait();
000594   3185     movlp   0x05             	PAGESEL	_i2c_wait
000595   254c     call    0x054c           	CALL	_i2c_wait
000596   3185     movlp   0x05             	PAGESEL	$
                                           ;	.line	48; "i2c.c"	SSPBUF = data;
000597   002c     movlb   0x0c             	BANKSEL	_i2c_write_data_1_22
000598   084b     movf    0x4b, 0x0        	MOVF	_i2c_write_data_1_22,W
000599   0024     movlb   0x04             	BANKSEL	_SSPBUF
00059a   0091     movwf   0x11             	MOVWF	_SSPBUF
                                           ;	.line	49; "i2c.c"	if (WCOL)
00059b   1f95     btfss   0x15, 0x7        	BTFSS	_SSP1CONbits,7
00059c   2d9f     goto    0x059f           	GOTO	_00134_DS_
                                           ;	.line	50; "i2c.c"	return -1;
00059d   30ff     movlw   0xff             	MOVLW	0xff
00059e   2da0     goto    0x05a0           	GOTO	_00135_DS_
                                           _00134_DS_:
                                           ;	.line	51; "i2c.c"	return 0;
00059f   3000     movlw   0x00             	MOVLW	0x00
                                           _00135_DS_:
                                           ;	.line	52; "i2c.c"	}
0005a0   0008     return                   	RETURN	
                                           ; exit point of _i2c_write

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_sendNACK	code
                                           _i2c_sendNACK:
                                           ; 2 exit points
                                           ;	.line	41; "i2c.c"	i2c_wait();
0005fa   3185     movlp   0x05             	PAGESEL	_i2c_wait
0005fb   254c     call    0x054c           	CALL	_i2c_wait
0005fc   3185     movlp   0x05             	PAGESEL	$
                                           ;	.line	42; "i2c.c"	ACKDT = 1;
0005fd   0024     movlb   0x04             	BANKSEL	_SSP1CON2bits
0005fe   1696     bsf     0x16, 0x5        	BSF	_SSP1CON2bits,5
                                           ;	.line	43; "i2c.c"	ACKEN = 1;
0005ff   1616     bsf     0x16, 0x4        	BSF	_SSP1CON2bits,4
                                           ;	.line	44; "i2c.c"	}
000600   0008     return                   	RETURN	
                                           ; exit point of _i2c_sendNACK

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_sendACK	code
                                           _i2c_sendACK:
                                           ; 2 exit points
                                           ;	.line	35; "i2c.c"	i2c_wait();
000601   3185     movlp   0x05             	PAGESEL	_i2c_wait
000602   254c     call    0x054c           	CALL	_i2c_wait
000603   3186     movlp   0x06             	PAGESEL	$
                                           ;	.line	36; "i2c.c"	ACKDT = 0;
000604   0024     movlb   0x04             	BANKSEL	_SSP1CON2bits
000605   1296     bcf     0x16, 0x5        	BCF	_SSP1CON2bits,5
                                           ;	.line	37; "i2c.c"	ACKEN = 1;
000606   1616     bsf     0x16, 0x4        	BSF	_SSP1CON2bits,4
                                           ;	.line	38; "i2c.c"	}
000607   0008     return                   	RETURN	
                                           ; exit point of _i2c_sendACK

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_stop	code
                                           _i2c_stop:
                                           ; 2 exit points
                                           ;	.line	30; "i2c.c"	i2c_wait();
000608   3185     movlp   0x05             	PAGESEL	_i2c_wait
000609   254c     call    0x054c           	CALL	_i2c_wait
00060a   3186     movlp   0x06             	PAGESEL	$
                                           ;	.line	31; "i2c.c"	PEN = 1;
00060b   0024     movlb   0x04             	BANKSEL	_SSP1CON2bits
00060c   1516     bsf     0x16, 0x2        	BSF	_SSP1CON2bits,2
                                           ;	.line	32; "i2c.c"	}
00060d   0008     return                   	RETURN	
                                           ; exit point of _i2c_stop

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_restart	code
                                           _i2c_restart:
                                           ; 2 exit points
                                           ;	.line	25; "i2c.c"	i2c_wait();
00060e   3185     movlp   0x05             	PAGESEL	_i2c_wait
00060f   254c     call    0x054c           	CALL	_i2c_wait
000610   3186     movlp   0x06             	PAGESEL	$
                                           ;	.line	26; "i2c.c"	RSEN = 1;
000611   0024     movlb   0x04             	BANKSEL	_SSP1CON2bits
000612   1496     bsf     0x16, 0x1        	BSF	_SSP1CON2bits,1
                                           ;	.line	27; "i2c.c"	}
000613   0008     return                   	RETURN	
                                           ; exit point of _i2c_restart

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_wait
                                           ;   _i2c_wait
                                           ;; Starting pCode block
                                           S_i2c__i2c_start	code
                                           _i2c_start:
                                           ; 2 exit points
                                           ;	.line	20; "i2c.c"	i2c_wait();
000614   3185     movlp   0x05             	PAGESEL	_i2c_wait
000615   254c     call    0x054c           	CALL	_i2c_wait
000616   3186     movlp   0x06             	PAGESEL	$
                                           ;	.line	21; "i2c.c"	SEN = 1;
000617   0024     movlb   0x04             	BANKSEL	_SSP1CON2bits
000618   1416     bsf     0x16, 0x0        	BSF	_SSP1CON2bits,0
                                           ;	.line	22; "i2c.c"	}
000619   0008     return                   	RETURN	
                                           ; exit point of _i2c_start

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;2 compiler assigned registers:
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;; Starting pCode block
                                           S_i2c__i2c_wait	code
                                           _i2c_wait:
                                           ; 2 exit points
                                           _00105_DS_:
                                           ;	.line	14; "i2c.c"	while (SSP1STAT & 0x05) ;
00054c   0024     movlb   0x04             	BANKSEL	_SSP1STAT
00054d   0814     movf    0x14, 0x0        	MOVF	_SSP1STAT,W
00054e   002c     movlb   0x0c             	BANKSEL	r0x1001
00054f   00c9     movwf   0x49             	MOVWF	r0x1001
000550   01ca     clrf    0x4a             	CLRF	r0x1002
000551   0849     movf    0x49, 0x0        	MOVF	r0x1001,W
000552   3905     andlw   0x05             	ANDLW	0x05
000553   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000554   2d4c     goto    0x054c           	GOTO	_00105_DS_
                                           _00108_DS_:
                                           ;	.line	16; "i2c.c"	while (SSP1CON2 & 0x1F) ;
000555   0024     movlb   0x04             	BANKSEL	_SSP1CON2
000556   0816     movf    0x16, 0x0        	MOVF	_SSP1CON2,W
000557   002c     movlb   0x0c             	BANKSEL	r0x1001
000558   00c9     movwf   0x49             	MOVWF	r0x1001
000559   01ca     clrf    0x4a             	CLRF	r0x1002
00055a   0849     movf    0x49, 0x0        	MOVF	r0x1001,W
00055b   391f     andlw   0x1f             	ANDLW	0x1f
00055c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00055d   2d55     goto    0x0555           	GOTO	_00108_DS_
                                           ;	.line	17; "i2c.c"	}
00055e   0008     return                   	RETURN	
                                           ; exit point of _i2c_wait


                                           ;	code size estimation:
                                           ;	   42+   24 =    66 instructions (  180 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.1 #10289 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"i2c_lcd.c"
                                           	list	p=16f1709
                                           	radix dec
                                           	include "p16f1709.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Aug 13 2015
                                           ;  MPASM PIC16F1709 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_delay_ms
                                           	extern	_putchar
                                           	extern	_putchar_wait
                                           	extern	_puts_rom
                                           	extern	_init_usart
                                           	extern	_fifo_putchar
                                           	extern	_print_rom_fifo
                                           	extern	_print_debug_value
                                           	extern	_print_debug_fifo
                                           	extern	_i2c_start
                                           	extern	_i2c_restart
                                           	extern	_i2c_stop
                                           	extern	_i2c_sendACK
                                           	extern	_i2c_write
                                           	extern	_STATUSbits
                                           	extern	_BSRbits
                                           	extern	_INTCONbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_PIR3bits
                                           	extern	_T1CONbits
                                           	extern	_T1GCONbits
                                           	extern	_T2CONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PIE3bits
                                           	extern	_OPTION_REGbits
                                           	extern	_PCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCSTATbits
                                           	extern	_ADCON0bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON2bits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM1CON1bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_CMOUTbits
                                           	extern	_BORCONbits
                                           	extern	_FVRCONbits
                                           	extern	_DAC1CON0bits
                                           	extern	_DAC1CON1bits
                                           	extern	_ZCD1CONbits
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMCON1bits
                                           	extern	_VREGCONbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_BAUDCTL1bits
                                           	extern	_WPUAbits
                                           	extern	_WPUBbits
                                           	extern	_WPUCbits
                                           	extern	_SSP1BUFbits
                                           	extern	_SSPBUFbits
                                           	extern	_SSP1ADDbits
                                           	extern	_SSPADDbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1CONbits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCONbits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_ODCONAbits
                                           	extern	_ODCONBbits
                                           	extern	_ODCONCbits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CCPTMRSbits
                                           	extern	_SLRCONAbits
                                           	extern	_SLRCONBbits
                                           	extern	_SLRCONCbits
                                           	extern	_INLVLAbits
                                           	extern	_INLVLBbits
                                           	extern	_INLVLCbits
                                           	extern	_IOCAPbits
                                           	extern	_IOCANbits
                                           	extern	_IOCAFbits
                                           	extern	_IOCBPbits
                                           	extern	_IOCBNbits
                                           	extern	_IOCBFbits
                                           	extern	_IOCCPbits
                                           	extern	_IOCCNbits
                                           	extern	_IOCCFbits
                                           	extern	_T4CONbits
                                           	extern	_T6CONbits
                                           	extern	_OPA1CONbits
                                           	extern	_OPA2CONbits
                                           	extern	_PWM3DCLbits
                                           	extern	_PWM3DCHbits
                                           	extern	_PWM3CONbits
                                           	extern	_PWM3CON0bits
                                           	extern	_PWM4DCLbits
                                           	extern	_PWM4DCHbits
                                           	extern	_PWM4CONbits
                                           	extern	_PWM4CON0bits
                                           	extern	_COG1PHRbits
                                           	extern	_COG1PHFbits
                                           	extern	_COG1BLKRbits
                                           	extern	_COG1BLKFbits
                                           	extern	_COG1DBRbits
                                           	extern	_COG1DBFbits
                                           	extern	_COG1CON0bits
                                           	extern	_COG1CON1bits
                                           	extern	_COG1RISbits
                                           	extern	_COG1RSIMbits
                                           	extern	_COG1FISbits
                                           	extern	_COG1FSIMbits
                                           	extern	_COG1ASD0bits
                                           	extern	_COG1ASD1bits
                                           	extern	_COG1STRbits
                                           	extern	_PPSLOCKbits
                                           	extern	_CLCDATAbits
                                           	extern	_CLC1CONbits
                                           	extern	_CLC1POLbits
                                           	extern	_CLC1SEL0bits
                                           	extern	_CLC1SEL1bits
                                           	extern	_CLC1SEL2bits
                                           	extern	_CLC1SEL3bits
                                           	extern	_CLC1GLS0bits
                                           	extern	_CLC1GLS1bits
                                           	extern	_CLC1GLS2bits
                                           	extern	_CLC1GLS3bits
                                           	extern	_CLC2CONbits
                                           	extern	_CLC2POLbits
                                           	extern	_CLC2SEL0bits
                                           	extern	_CLC2SEL1bits
                                           	extern	_CLC2SEL2bits
                                           	extern	_CLC2SEL3bits
                                           	extern	_CLC2GLS0bits
                                           	extern	_CLC2GLS1bits
                                           	extern	_CLC2GLS2bits
                                           	extern	_CLC2GLS3bits
                                           	extern	_CLC3CONbits
                                           	extern	_CLC3POLbits
                                           	extern	_CLC3SEL0bits
                                           	extern	_CLC3SEL1bits
                                           	extern	_CLC3SEL2bits
                                           	extern	_CLC3SEL3bits
                                           	extern	_CLC3GLS0bits
                                           	extern	_CLC3GLS1bits
                                           	extern	_CLC3GLS2bits
                                           	extern	_CLC3GLS3bits
                                           	extern	_ICDBK0Hbits
                                           	extern	_STATUS_SHADbits
                                           	extern	_INDF0
                                           	extern	_INDF1
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR0
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_FSR1
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_BSR
                                           	extern	_WREG
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_PIR3
                                           	extern	_TMR0
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_T1GCON
                                           	extern	_TMR2
                                           	extern	_PR2
                                           	extern	_T2CON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PIE3
                                           	extern	_OPTION_REG
                                           	extern	_PCON
                                           	extern	_WDTCON
                                           	extern	_OSCTUNE
                                           	extern	_OSCCON
                                           	extern	_OSCSTAT
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_ADCON1
                                           	extern	_ADCON2
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_CM1CON0
                                           	extern	_CM1CON1
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_CMOUT
                                           	extern	_BORCON
                                           	extern	_FVRCON
                                           	extern	_DAC1CON0
                                           	extern	_DAC1CON1
                                           	extern	_ZCD1CON
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMADR
                                           	extern	_PMADRL
                                           	extern	_PMADRH
                                           	extern	_PMDAT
                                           	extern	_PMDATL
                                           	extern	_PMDATH
                                           	extern	_PMCON1
                                           	extern	_PMCON2
                                           	extern	_VREGCON
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_SP1BRG
                                           	extern	_SP1BRGL
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SPBRGL
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_BAUDCTL1
                                           	extern	_WPUA
                                           	extern	_WPUB
                                           	extern	_WPUC
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1CON
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON
                                           	extern	_SSPCON1
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_ODCONA
                                           	extern	_ODCONB
                                           	extern	_ODCONC
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPTMRS
                                           	extern	_SLRCONA
                                           	extern	_SLRCONB
                                           	extern	_SLRCONC
                                           	extern	_INLVLA
                                           	extern	_INLVLB
                                           	extern	_INLVLC
                                           	extern	_IOCAP
                                           	extern	_IOCAN
                                           	extern	_IOCAF
                                           	extern	_IOCBP
                                           	extern	_IOCBN
                                           	extern	_IOCBF
                                           	extern	_IOCCP
                                           	extern	_IOCCN
                                           	extern	_IOCCF
                                           	extern	_TMR4
                                           	extern	_PR4
                                           	extern	_T4CON
                                           	extern	_TMR6
                                           	extern	_PR6
                                           	extern	_T6CON
                                           	extern	_OPA1CON
                                           	extern	_OPA2CON
                                           	extern	_PWM3DCL
                                           	extern	_PWM3DCH
                                           	extern	_PWM3CON
                                           	extern	_PWM3CON0
                                           	extern	_PWM4DCL
                                           	extern	_PWM4DCH
                                           	extern	_PWM4CON
                                           	extern	_PWM4CON0
                                           	extern	_COG1PHR
                                           	extern	_COG1PHF
                                           	extern	_COG1BLKR
                                           	extern	_COG1BLKF
                                           	extern	_COG1DBR
                                           	extern	_COG1DBF
                                           	extern	_COG1CON0
                                           	extern	_COG1CON1
                                           	extern	_COG1RIS
                                           	extern	_COG1RSIM
                                           	extern	_COG1FIS
                                           	extern	_COG1FSIM
                                           	extern	_COG1ASD0
                                           	extern	_COG1ASD1
                                           	extern	_COG1STR
                                           	extern	_PPSLOCK
                                           	extern	_INTPPS
                                           	extern	_T0CKIPPS
                                           	extern	_T1CKIPPS
                                           	extern	_T1GPPS
                                           	extern	_CCP1PPS
                                           	extern	_CCP2PPS
                                           	extern	_COGINPPS
                                           	extern	_SSPCLKPPS
                                           	extern	_SSPDATPPS
                                           	extern	_SSPSSPPS
                                           	extern	_RXPPS
                                           	extern	_CKPPS
                                           	extern	_CLCIN0PPS
                                           	extern	_CLCIN1PPS
                                           	extern	_CLCIN2PPS
                                           	extern	_CLCIN3PPS
                                           	extern	_RA0PPS
                                           	extern	_RA1PPS
                                           	extern	_RA2PPS
                                           	extern	_RA4PPS
                                           	extern	_RA5PPS
                                           	extern	_RB4PPS
                                           	extern	_RB5PPS
                                           	extern	_RB6PPS
                                           	extern	_RB7PPS
                                           	extern	_RC0PPS
                                           	extern	_RC1PPS
                                           	extern	_RC2PPS
                                           	extern	_RC3PPS
                                           	extern	_RC4PPS
                                           	extern	_RC5PPS
                                           	extern	_RC6PPS
                                           	extern	_RC7PPS
                                           	extern	_CLCDATA
                                           	extern	_CLC1CON
                                           	extern	_CLC1POL
                                           	extern	_CLC1SEL0
                                           	extern	_CLC1SEL1
                                           	extern	_CLC1SEL2
                                           	extern	_CLC1SEL3
                                           	extern	_CLC1GLS0
                                           	extern	_CLC1GLS1
                                           	extern	_CLC1GLS2
                                           	extern	_CLC1GLS3
                                           	extern	_CLC2CON
                                           	extern	_CLC2POL
                                           	extern	_CLC2SEL0
                                           	extern	_CLC2SEL1
                                           	extern	_CLC2SEL2
                                           	extern	_CLC2SEL3
                                           	extern	_CLC2GLS0
                                           	extern	_CLC2GLS1
                                           	extern	_CLC2GLS2
                                           	extern	_CLC2GLS3
                                           	extern	_CLC3CON
                                           	extern	_CLC3POL
                                           	extern	_CLC3SEL0
                                           	extern	_CLC3SEL1
                                           	extern	_CLC3SEL2
                                           	extern	_CLC3SEL3
                                           	extern	_CLC3GLS0
                                           	extern	_CLC3GLS1
                                           	extern	_CLC3GLS2
                                           	extern	_CLC3GLS3
                                           	extern	_ICDBK0H
                                           	extern	_STATUS_SHAD
                                           	extern	_WREG_SHAD
                                           	extern	_BSR_SHAD
                                           	extern	_PCLATH_SHAD
                                           	extern	_FSR0L_SHAD
                                           	extern	_FSR0H_SHAD
                                           	extern	_FSR1L_SHAD
                                           	extern	_FSR1H_SHAD
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	__gptrget1

                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_LCD_puts
                                           	global	_LCD_goto
                                           	global	_LCD_init
                                           	global	_LCD_putch
                                           	global	_LCD_putcmd
                                           	global	_I2C_PCF8574_Write

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_i2c_lcd_0	udata
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x100E	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1018	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1009	res	1
                                           r0x100C	res	1
                                           r0x100B	res	1
                                           r0x100A	res	1
                                           r0x100D	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_i2c_lcd	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __gptrget1
                                           ;   _LCD_putch
                                           ;   __gptrget1
                                           ;   _LCD_putch
                                           ;8 compiler assigned registers:
                                           ;   r0x1009
                                           ;   STK00
                                           ;   r0x100A
                                           ;   STK01
                                           ;   r0x100B
                                           ;   STK02
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;; Starting pCode block
                                           S_i2c_lcd__LCD_puts	code
                                           _LCD_puts:
                                           ; 2 exit points
                                           ;	.line	110; "i2c_lcd.c"	void LCD_puts(uint8_t addr, const char *s) {
000473   0021     movlb   0x01             	BANKSEL	r0x1009
000474   00b2     movwf   0x32             	MOVWF	r0x1009
000475   0874     movf    0x74, 0x0        	MOVF	STK00,W
000476   00b5     movwf   0x35             	MOVWF	r0x100A
000477   0873     movf    0x73, 0x0        	MOVF	STK01,W
000478   00b4     movwf   0x34             	MOVWF	r0x100B
000479   0872     movf    0x72, 0x0        	MOVF	STK02,W
00047a   00b3     movwf   0x33             	MOVWF	r0x100C
                                           _00148_DS_:
                                           ;	.line	112; "i2c_lcd.c"	while (*s != 0)
00047b   0021     movlb   0x01             	BANKSEL	r0x100C
00047c   0833     movf    0x33, 0x0        	MOVF	r0x100C,W
00047d   00f3     movwf   0x73             	MOVWF	STK01
00047e   0834     movf    0x34, 0x0        	MOVF	r0x100B,W
00047f   00f4     movwf   0x74             	MOVWF	STK00
000480   0835     movf    0x35, 0x0        	MOVF	r0x100A,W
000481   3184     movlp   0x04             	PAGESEL	__gptrget1
000482   24fd     call    0x04fd           	CALL	__gptrget1
000483   3184     movlp   0x04             	PAGESEL	$
000484   0021     movlb   0x01             	BANKSEL	r0x100D
000485   00b6     movwf   0x36             	MOVWF	r0x100D
000486   0836     movf    0x36, 0x0        	MOVF	r0x100D,W
000487   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000488   2c95     goto    0x0495           	GOTO	_00151_DS_
                                           ;	.line	113; "i2c_lcd.c"	LCD_putch(addr, *s++);
000489   0ab3     incf    0x33, 0x1        	INCF	r0x100C,F
00048a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00048b   0ab4     incf    0x34, 0x1        	INCF	r0x100B,F
00048c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00048d   0ab5     incf    0x35, 0x1        	INCF	r0x100A,F
00048e   0836     movf    0x36, 0x0        	MOVF	r0x100D,W
00048f   00f4     movwf   0x74             	MOVWF	STK00
000490   0832     movf    0x32, 0x0        	MOVF	r0x1009,W
000491   3183     movlp   0x03             	PAGESEL	_LCD_putch
000492   2355     call    0x0355           	CALL	_LCD_putch
000493   3184     movlp   0x04             	PAGESEL	$
000494   2c7b     goto    0x047b           	GOTO	_00148_DS_
                                           _00151_DS_:
                                           ;	.line	114; "i2c_lcd.c"	}
000495   0008     return                   	RETURN	
                                           ; exit point of _LCD_puts

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;5 compiler assigned registers:
                                           ;   r0x1015
                                           ;   STK00
                                           ;   r0x1016
                                           ;   STK01
                                           ;   r0x1017
                                           ;; Starting pCode block
                                           S_i2c_lcd__LCD_goto	code
                                           _LCD_goto:
                                           ; 2 exit points
                                           ;	.line	88; "i2c_lcd.c"	void LCD_goto(uint8_t addr, uint8_t row, uint8_t column) {
000248   0021     movlb   0x01             	BANKSEL	r0x1015
000249   00af     movwf   0x2f             	MOVWF	r0x1015
00024a   0874     movf    0x74, 0x0        	MOVF	STK00,W
00024b   00b0     movwf   0x30             	MOVWF	r0x1016
00024c   0873     movf    0x73, 0x0        	MOVF	STK01,W
00024d   00b1     movwf   0x31             	MOVWF	r0x1017
                                           ;;unsigned compare: left < lit(0x1=1), size=1
                                           ;	.line	89; "i2c_lcd.c"	switch (row) {
00024e   3001     movlw   0x01             	MOVLW	0x01
00024f   0230     subwf   0x30, 0x0        	SUBWF	r0x1016,W
000250   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000251   2a9a     goto    0x029a           	GOTO	_00129_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffcaaf318d0
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
000252   3005     movlw   0x05             	MOVLW	0x05
000253   0230     subwf   0x30, 0x0        	SUBWF	r0x1016,W
000254   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000255   2a9a     goto    0x029a           	GOTO	_00129_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffcaaf318d0
000256   03b0     decf    0x30, 0x1        	DECF	r0x1016,F
000257   3082     movlw   0x82             	MOVLW	HIGH(_00143_DS_)
000258   008a     movwf   0x0a             	MOVWF	PCLATH
000259   305e     movlw   0x5e             	MOVLW	_00143_DS_
00025a   0730     addwf   0x30, 0x0        	ADDWF	r0x1016,W
00025b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00025c   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
00025d   0082     movwf   0x02             	MOVWF	PCL
                                           _00143_DS_:
00025e   2a62     goto    0x0262           	GOTO	_00125_DS_
00025f   2a70     goto    0x0270           	GOTO	_00126_DS_
000260   2a7e     goto    0x027e           	GOTO	_00127_DS_
000261   2a8c     goto    0x028c           	GOTO	_00128_DS_
                                           _00125_DS_:
                                           ;	.line	91; "i2c_lcd.c"	LCD_putcmd(addr, LCD_LINE1 + (column - 1), 1);
000262   0021     movlb   0x01             	BANKSEL	r0x1017
000263   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
000264   00b0     movwf   0x30             	MOVWF	r0x1016
000265   307f     movlw   0x7f             	MOVLW	0x7f
000266   07b0     addwf   0x30, 0x1        	ADDWF	r0x1016,F
000267   3001     movlw   0x01             	MOVLW	0x01
000268   00f3     movwf   0x73             	MOVWF	STK01
000269   0830     movf    0x30, 0x0        	MOVF	r0x1016,W
00026a   00f4     movwf   0x74             	MOVWF	STK00
00026b   082f     movf    0x2f, 0x0        	MOVF	r0x1015,W
00026c   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
00026d   2309     call    0x0309           	CALL	_LCD_putcmd
00026e   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	92; "i2c_lcd.c"	break;
00026f   2aa8     goto    0x02a8           	GOTO	_00131_DS_
                                           _00126_DS_:
                                           ;	.line	94; "i2c_lcd.c"	LCD_putcmd(addr, LCD_LINE2 + (column - 1), 1);
000270   0021     movlb   0x01             	BANKSEL	r0x1017
000271   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
000272   00b0     movwf   0x30             	MOVWF	r0x1016
000273   30bf     movlw   0xbf             	MOVLW	0xbf
000274   07b0     addwf   0x30, 0x1        	ADDWF	r0x1016,F
000275   3001     movlw   0x01             	MOVLW	0x01
000276   00f3     movwf   0x73             	MOVWF	STK01
000277   0830     movf    0x30, 0x0        	MOVF	r0x1016,W
000278   00f4     movwf   0x74             	MOVWF	STK00
000279   082f     movf    0x2f, 0x0        	MOVF	r0x1015,W
00027a   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
00027b   2309     call    0x0309           	CALL	_LCD_putcmd
00027c   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	95; "i2c_lcd.c"	break;
00027d   2aa8     goto    0x02a8           	GOTO	_00131_DS_
                                           _00127_DS_:
                                           ;	.line	97; "i2c_lcd.c"	LCD_putcmd(addr, LCD_LINE3 + (column - 1), 1);
00027e   0021     movlb   0x01             	BANKSEL	r0x1017
00027f   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
000280   00b0     movwf   0x30             	MOVWF	r0x1016
000281   3093     movlw   0x93             	MOVLW	0x93
000282   07b0     addwf   0x30, 0x1        	ADDWF	r0x1016,F
000283   3001     movlw   0x01             	MOVLW	0x01
000284   00f3     movwf   0x73             	MOVWF	STK01
000285   0830     movf    0x30, 0x0        	MOVF	r0x1016,W
000286   00f4     movwf   0x74             	MOVWF	STK00
000287   082f     movf    0x2f, 0x0        	MOVF	r0x1015,W
000288   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
000289   2309     call    0x0309           	CALL	_LCD_putcmd
00028a   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	98; "i2c_lcd.c"	break;
00028b   2aa8     goto    0x02a8           	GOTO	_00131_DS_
                                           _00128_DS_:
                                           ;	.line	100; "i2c_lcd.c"	LCD_putcmd(addr, LCD_LINE4 + (column - 1), 1);
00028c   0021     movlb   0x01             	BANKSEL	r0x1017
00028d   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
00028e   00b0     movwf   0x30             	MOVWF	r0x1016
00028f   30d3     movlw   0xd3             	MOVLW	0xd3
000290   07b0     addwf   0x30, 0x1        	ADDWF	r0x1016,F
000291   3001     movlw   0x01             	MOVLW	0x01
000292   00f3     movwf   0x73             	MOVWF	STK01
000293   0830     movf    0x30, 0x0        	MOVF	r0x1016,W
000294   00f4     movwf   0x74             	MOVWF	STK00
000295   082f     movf    0x2f, 0x0        	MOVF	r0x1015,W
000296   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
000297   2309     call    0x0309           	CALL	_LCD_putcmd
000298   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	101; "i2c_lcd.c"	break;
000299   2aa8     goto    0x02a8           	GOTO	_00131_DS_
                                           _00129_DS_:
                                           ;	.line	103; "i2c_lcd.c"	LCD_putcmd(addr, LCD_LINE1 + (column - 1), 1);
00029a   0021     movlb   0x01             	BANKSEL	r0x1017
00029b   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
00029c   00b0     movwf   0x30             	MOVWF	r0x1016
00029d   307f     movlw   0x7f             	MOVLW	0x7f
00029e   0730     addwf   0x30, 0x0        	ADDWF	r0x1016,W
00029f   00b1     movwf   0x31             	MOVWF	r0x1017
0002a0   3001     movlw   0x01             	MOVLW	0x01
0002a1   00f3     movwf   0x73             	MOVWF	STK01
0002a2   0831     movf    0x31, 0x0        	MOVF	r0x1017,W
0002a3   00f4     movwf   0x74             	MOVWF	STK00
0002a4   082f     movf    0x2f, 0x0        	MOVF	r0x1015,W
0002a5   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002a6   2309     call    0x0309           	CALL	_LCD_putcmd
0002a7   3182     movlp   0x02             	PAGESEL	$
                                           _00131_DS_:
                                           ;	.line	106; "i2c_lcd.c"	}
0002a8   0008     return                   	RETURN	
                                           ; exit point of _LCD_goto

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay_ms
                                           ;   _LCD_putcmd
                                           ;   _delay_ms
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _delay_ms
                                           ;   _LCD_putcmd
                                           ;   _delay_ms
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;   _LCD_putcmd
                                           ;3 compiler assigned registers:
                                           ;   r0x1018
                                           ;   STK00
                                           ;   STK01
                                           ;; Starting pCode block
                                           S_i2c_lcd__LCD_init	code
                                           _LCD_init:
                                           ; 2 exit points
                                           ;	.line	72; "i2c_lcd.c"	void LCD_init(uint8_t addr) {
0002a9   0021     movlb   0x01             	BANKSEL	r0x1018
0002aa   00ae     movwf   0x2e             	MOVWF	r0x1018
                                           ;	.line	73; "i2c_lcd.c"	delay_ms(20);		// Wait > 15 ms after power ON
0002ab   3014     movlw   0x14             	MOVLW	0x14
0002ac   00f4     movwf   0x74             	MOVWF	STK00
0002ad   3000     movlw   0x00             	MOVLW	0x00
0002ae   3183     movlp   0x03             	PAGESEL	_delay_ms
0002af   23d3     call    0x03d3           	CALL	_delay_ms
0002b0   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	75; "i2c_lcd.c"	LCD_putcmd(addr, LCD_INIT_BYTE, 0);
0002b1   3000     movlw   0x00             	MOVLW	0x00
0002b2   00f3     movwf   0x73             	MOVWF	STK01
0002b3   3030     movlw   0x30             	MOVLW	0x30
0002b4   00f4     movwf   0x74             	MOVWF	STK00
0002b5   0021     movlb   0x01             	BANKSEL	r0x1018
0002b6   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002b7   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002b8   2309     call    0x0309           	CALL	_LCD_putcmd
0002b9   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	76; "i2c_lcd.c"	delay_ms(5);		// Wait > 4.1 ms
0002ba   3005     movlw   0x05             	MOVLW	0x05
0002bb   00f4     movwf   0x74             	MOVWF	STK00
0002bc   3000     movlw   0x00             	MOVLW	0x00
0002bd   3183     movlp   0x03             	PAGESEL	_delay_ms
0002be   23d3     call    0x03d3           	CALL	_delay_ms
0002bf   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	77; "i2c_lcd.c"	LCD_putcmd(addr, LCD_INIT_BYTE, 0);
0002c0   3000     movlw   0x00             	MOVLW	0x00
0002c1   00f3     movwf   0x73             	MOVWF	STK01
0002c2   3030     movlw   0x30             	MOVLW	0x30
0002c3   00f4     movwf   0x74             	MOVWF	STK00
0002c4   0021     movlb   0x01             	BANKSEL	r0x1018
0002c5   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002c6   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002c7   2309     call    0x0309           	CALL	_LCD_putcmd
0002c8   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	78; "i2c_lcd.c"	LCD_putcmd(addr, LCD_INIT_BYTE, 0);
0002c9   3000     movlw   0x00             	MOVLW	0x00
0002ca   00f3     movwf   0x73             	MOVWF	STK01
0002cb   3030     movlw   0x30             	MOVLW	0x30
0002cc   00f4     movwf   0x74             	MOVWF	STK00
0002cd   0021     movlb   0x01             	BANKSEL	r0x1018
0002ce   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002cf   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002d0   2309     call    0x0309           	CALL	_LCD_putcmd
0002d1   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	79; "i2c_lcd.c"	LCD_putcmd(addr, LCD_BUS_WIDTH_4Bit, 0);
0002d2   3000     movlw   0x00             	MOVLW	0x00
0002d3   00f3     movwf   0x73             	MOVWF	STK01
0002d4   3020     movlw   0x20             	MOVLW	0x20
0002d5   00f4     movwf   0x74             	MOVWF	STK00
0002d6   0021     movlb   0x01             	BANKSEL	r0x1018
0002d7   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002d8   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002d9   2309     call    0x0309           	CALL	_LCD_putcmd
0002da   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	80; "i2c_lcd.c"	LCD_putcmd(addr, LCD_4BITS_2LINES_5x8FONT, 1);
0002db   3001     movlw   0x01             	MOVLW	0x01
0002dc   00f3     movwf   0x73             	MOVWF	STK01
0002dd   3028     movlw   0x28             	MOVLW	0x28
0002de   00f4     movwf   0x74             	MOVWF	STK00
0002df   0021     movlb   0x01             	BANKSEL	r0x1018
0002e0   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002e1   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002e2   2309     call    0x0309           	CALL	_LCD_putcmd
0002e3   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	81; "i2c_lcd.c"	LCD_putcmd(addr, LCD_DISPLAY_OFF_CURSOR_OFF_BLINK_OFF, 1);
0002e4   3001     movlw   0x01             	MOVLW	0x01
0002e5   00f3     movwf   0x73             	MOVWF	STK01
0002e6   3008     movlw   0x08             	MOVLW	0x08
0002e7   00f4     movwf   0x74             	MOVWF	STK00
0002e8   0021     movlb   0x01             	BANKSEL	r0x1018
0002e9   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002ea   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002eb   2309     call    0x0309           	CALL	_LCD_putcmd
0002ec   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	82; "i2c_lcd.c"	LCD_putcmd(addr, LCD_CLEAR, 1);
0002ed   3001     movlw   0x01             	MOVLW	0x01
0002ee   00f3     movwf   0x73             	MOVWF	STK01
0002ef   3001     movlw   0x01             	MOVLW	0x01
0002f0   00f4     movwf   0x74             	MOVWF	STK00
0002f1   0021     movlb   0x01             	BANKSEL	r0x1018
0002f2   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002f3   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002f4   2309     call    0x0309           	CALL	_LCD_putcmd
0002f5   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	83; "i2c_lcd.c"	LCD_putcmd(addr, LCD_INCREMENT_NO_SHIFT, 1);
0002f6   3001     movlw   0x01             	MOVLW	0x01
0002f7   00f3     movwf   0x73             	MOVWF	STK01
0002f8   3006     movlw   0x06             	MOVLW	0x06
0002f9   00f4     movwf   0x74             	MOVWF	STK00
0002fa   0021     movlb   0x01             	BANKSEL	r0x1018
0002fb   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
0002fc   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0002fd   2309     call    0x0309           	CALL	_LCD_putcmd
0002fe   3182     movlp   0x02             	PAGESEL	$
                                           ;	.line	84; "i2c_lcd.c"	LCD_putcmd(addr, LCD_DISPLAY_ON_CURSOR_OFF, 1);
0002ff   3001     movlw   0x01             	MOVLW	0x01
000300   00f3     movwf   0x73             	MOVWF	STK01
000301   300c     movlw   0x0c             	MOVLW	0x0c
000302   00f4     movwf   0x74             	MOVWF	STK00
000303   0021     movlb   0x01             	BANKSEL	r0x1018
000304   082e     movf    0x2e, 0x0        	MOVF	r0x1018,W
000305   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
000306   2309     call    0x0309           	CALL	_LCD_putcmd
000307   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	85; "i2c_lcd.c"	}
000308   0008     return                   	RETURN	
                                           ; exit point of _LCD_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;7 compiler assigned registers:
                                           ;   r0x1003
                                           ;   STK00
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           S_i2c_lcd__LCD_putch	code
                                           _LCD_putch:
                                           ; 2 exit points
                                           ;	.line	61; "i2c_lcd.c"	void LCD_putch(uint8_t addr, uint8_t data) {
000355   0021     movlb   0x01             	BANKSEL	r0x1003
000356   00a9     movwf   0x29             	MOVWF	r0x1003
000357   0874     movf    0x74, 0x0        	MOVF	STK00,W
                                           ;	.line	63; "i2c_lcd.c"	lcddata = HI_NIBBLE(data) | LCD_BL | LCD_RS;	// Get high nibble
000358   00aa     movwf   0x2a             	MOVWF	r0x1004
000359   00ab     movwf   0x2b             	MOVWF	r0x1005
00035a   01ac     clrf    0x2c             	CLRF	r0x1006
00035b   30f0     movlw   0xf0             	MOVLW	0xf0
00035c   05ab     andwf   0x2b, 0x1        	ANDWF	r0x1005,F
00035d   01ac     clrf    0x2c             	CLRF	r0x1006
00035e   3009     movlw   0x09             	MOVLW	0x09
00035f   04ab     iorwf   0x2b, 0x1        	IORWF	r0x1005,F
                                           ;	.line	64; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata | LCD_EN);	// Send it!
000360   082b     movf    0x2b, 0x0        	MOVF	r0x1005,W
000361   00ad     movwf   0x2d             	MOVWF	r0x1007
000362   00ab     movwf   0x2b             	MOVWF	r0x1005
000363   01ac     clrf    0x2c             	CLRF	r0x1006
000364   152b     bsf     0x2b, 0x2        	BSF	r0x1005,2
000365   082b     movf    0x2b, 0x0        	MOVF	r0x1005,W
                                           ;;1	MOVWF	r0x1008
000366   00f4     movwf   0x74             	MOVWF	STK00
000367   0829     movf    0x29, 0x0        	MOVF	r0x1003,W
000368   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
000369   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
00036a   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	65; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata & ~LCD_EN);	// Reset LCD bus
00036b   0021     movlb   0x01             	BANKSEL	r0x1007
00036c   112d     bcf     0x2d, 0x2        	BCF	r0x1007,2
00036d   082d     movf    0x2d, 0x0        	MOVF	r0x1007,W
00036e   00f4     movwf   0x74             	MOVWF	STK00
00036f   0829     movf    0x29, 0x0        	MOVF	r0x1003,W
000370   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
000371   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
000372   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	66; "i2c_lcd.c"	lcddata = LO_NIBBLE(data) | LCD_BL | LCD_RS;	// Get low nibble
000373   0021     movlb   0x01             	BANKSEL	r0x1004
000374   082a     movf    0x2a, 0x0        	MOVF	r0x1004,W
000375   00ab     movwf   0x2b             	MOVWF	r0x1005
000376   0e2b     swapf   0x2b, 0x0        	SWAPF	r0x1005,W
000377   39f0     andlw   0xf0             	ANDLW	0xf0
000378   00aa     movwf   0x2a             	MOVWF	r0x1004
000379   00ab     movwf   0x2b             	MOVWF	r0x1005
00037a   01ac     clrf    0x2c             	CLRF	r0x1006
00037b   1bab     btfsc   0x2b, 0x7        	BTFSC	r0x1005,7
00037c   03ac     decf    0x2c, 0x1        	DECF	r0x1006,F
00037d   30f0     movlw   0xf0             	MOVLW	0xf0
00037e   052b     andwf   0x2b, 0x0        	ANDWF	r0x1005,W
00037f   00aa     movwf   0x2a             	MOVWF	r0x1004
000380   01ad     clrf    0x2d             	CLRF	r0x1007
000381   3009     movlw   0x09             	MOVLW	0x09
000382   04aa     iorwf   0x2a, 0x1        	IORWF	r0x1004,F
                                           ;	.line	67; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata | LCD_EN);	// Send it!
000383   082a     movf    0x2a, 0x0        	MOVF	r0x1004,W
000384   00ab     movwf   0x2b             	MOVWF	r0x1005
000385   00aa     movwf   0x2a             	MOVWF	r0x1004
000386   01ad     clrf    0x2d             	CLRF	r0x1007
000387   152a     bsf     0x2a, 0x2        	BSF	r0x1004,2
000388   082a     movf    0x2a, 0x0        	MOVF	r0x1004,W
000389   00ac     movwf   0x2c             	MOVWF	r0x1006
00038a   00f4     movwf   0x74             	MOVWF	STK00
00038b   0829     movf    0x29, 0x0        	MOVF	r0x1003,W
00038c   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
00038d   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
00038e   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	68; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata & ~LCD_EN);	// Reset LCD bus
00038f   0021     movlb   0x01             	BANKSEL	r0x1005
000390   112b     bcf     0x2b, 0x2        	BCF	r0x1005,2
000391   082b     movf    0x2b, 0x0        	MOVF	r0x1005,W
000392   00f4     movwf   0x74             	MOVWF	STK00
000393   0829     movf    0x29, 0x0        	MOVF	r0x1003,W
000394   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
000395   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
000396   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	69; "i2c_lcd.c"	}
000397   0008     return                   	RETURN	
                                           ; exit point of _LCD_putch

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _delay_ms
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _I2C_PCF8574_Write
                                           ;   _delay_ms
                                           ;9 compiler assigned registers:
                                           ;   r0x100E
                                           ;   STK00
                                           ;   r0x100F
                                           ;   STK01
                                           ;   r0x1010
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           S_i2c_lcd__LCD_putcmd	code
                                           _LCD_putcmd:
                                           ; 2 exit points
                                           ;	.line	42; "i2c_lcd.c"	void LCD_putcmd(uint8_t addr, uint8_t data, uint8_t cmdtype) {
000309   0021     movlb   0x01             	BANKSEL	r0x100E
00030a   00a3     movwf   0x23             	MOVWF	r0x100E
00030b   0874     movf    0x74, 0x0        	MOVF	STK00,W
00030c   00a6     movwf   0x26             	MOVWF	r0x1011
00030d   00a4     movwf   0x24             	MOVWF	r0x100F
00030e   0873     movf    0x73, 0x0        	MOVF	STK01,W
00030f   00a5     movwf   0x25             	MOVWF	r0x1010
                                           ;;99	MOVF	r0x100F,W
                                           ;	.line	46; "i2c_lcd.c"	lcddata = HI_NIBBLE(data) | LCD_BL;
000310   01a7     clrf    0x27             	CLRF	r0x1012
000311   30f0     movlw   0xf0             	MOVLW	0xf0
000312   05a6     andwf   0x26, 0x1        	ANDWF	r0x1011,F
000313   01a7     clrf    0x27             	CLRF	r0x1012
000314   15a6     bsf     0x26, 0x3        	BSF	r0x1011,3
                                           ;	.line	47; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata | LCD_EN);
000315   0826     movf    0x26, 0x0        	MOVF	r0x1011,W
000316   00a8     movwf   0x28             	MOVWF	r0x1013
000317   00a6     movwf   0x26             	MOVWF	r0x1011
000318   01a7     clrf    0x27             	CLRF	r0x1012
000319   1526     bsf     0x26, 0x2        	BSF	r0x1011,2
00031a   0826     movf    0x26, 0x0        	MOVF	r0x1011,W
                                           ;;1	MOVWF	r0x1014
00031b   00f4     movwf   0x74             	MOVWF	STK00
00031c   0823     movf    0x23, 0x0        	MOVF	r0x100E,W
00031d   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
00031e   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
00031f   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	48; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata & ~LCD_EN);	// Reset LCD bus
000320   0021     movlb   0x01             	BANKSEL	r0x1013
000321   1128     bcf     0x28, 0x2        	BCF	r0x1013,2
000322   0828     movf    0x28, 0x0        	MOVF	r0x1013,W
000323   00f4     movwf   0x74             	MOVWF	STK00
000324   0823     movf    0x23, 0x0        	MOVF	r0x100E,W
000325   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
000326   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
000327   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	51; "i2c_lcd.c"	if (cmdtype) {
000328   0021     movlb   0x01             	BANKSEL	r0x1010
000329   0825     movf    0x25, 0x0        	MOVF	r0x1010,W
00032a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00032b   2b4e     goto    0x034e           	GOTO	_00112_DS_
                                           ;	.line	53; "i2c_lcd.c"	lcddata = LO_NIBBLE(data) | LCD_BL;
00032c   0824     movf    0x24, 0x0        	MOVF	r0x100F,W
00032d   00a5     movwf   0x25             	MOVWF	r0x1010
00032e   0e25     swapf   0x25, 0x0        	SWAPF	r0x1010,W
00032f   39f0     andlw   0xf0             	ANDLW	0xf0
000330   00a4     movwf   0x24             	MOVWF	r0x100F
000331   00a5     movwf   0x25             	MOVWF	r0x1010
000332   01a6     clrf    0x26             	CLRF	r0x1011
000333   1ba5     btfsc   0x25, 0x7        	BTFSC	r0x1010,7
000334   03a6     decf    0x26, 0x1        	DECF	r0x1011,F
000335   30f0     movlw   0xf0             	MOVLW	0xf0
000336   0525     andwf   0x25, 0x0        	ANDWF	r0x1010,W
000337   00a4     movwf   0x24             	MOVWF	r0x100F
000338   01a7     clrf    0x27             	CLRF	r0x1012
000339   15a4     bsf     0x24, 0x3        	BSF	r0x100F,3
                                           ;	.line	54; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata | LCD_EN);
00033a   0824     movf    0x24, 0x0        	MOVF	r0x100F,W
00033b   00a5     movwf   0x25             	MOVWF	r0x1010
00033c   00a4     movwf   0x24             	MOVWF	r0x100F
00033d   01a7     clrf    0x27             	CLRF	r0x1012
00033e   1524     bsf     0x24, 0x2        	BSF	r0x100F,2
00033f   0824     movf    0x24, 0x0        	MOVF	r0x100F,W
000340   00a6     movwf   0x26             	MOVWF	r0x1011
000341   00f4     movwf   0x74             	MOVWF	STK00
000342   0823     movf    0x23, 0x0        	MOVF	r0x100E,W
000343   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
000344   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
000345   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	55; "i2c_lcd.c"	I2C_PCF8574_Write(addr, lcddata & ~LCD_EN);	// Reset LCD bus
000346   0021     movlb   0x01             	BANKSEL	r0x1010
000347   1125     bcf     0x25, 0x2        	BCF	r0x1010,2
000348   0825     movf    0x25, 0x0        	MOVF	r0x1010,W
000349   00f4     movwf   0x74             	MOVWF	STK00
00034a   0823     movf    0x23, 0x0        	MOVF	r0x100E,W
00034b   3184     movlp   0x04             	PAGESEL	_I2C_PCF8574_Write
00034c   244e     call    0x044e           	CALL	_I2C_PCF8574_Write
00034d   3183     movlp   0x03             	PAGESEL	$
                                           _00112_DS_:
                                           ;	.line	57; "i2c_lcd.c"	delay_ms(2);		// For most command, Wait > 100 us is ok.
00034e   3002     movlw   0x02             	MOVLW	0x02
00034f   00f4     movwf   0x74             	MOVWF	STK00
000350   3000     movlw   0x00             	MOVLW	0x00
000351   3183     movlp   0x03             	PAGESEL	_delay_ms
000352   23d3     call    0x03d3           	CALL	_delay_ms
000353   3183     movlp   0x03             	PAGESEL	$
                                           ;	.line	58; "i2c_lcd.c"	}
000354   0008     return                   	RETURN	
                                           ; exit point of _LCD_putcmd

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _i2c_start
                                           ;   _i2c_write
                                           ;   _i2c_write
                                           ;   _i2c_stop
                                           ;   _i2c_start
                                           ;   _i2c_write
                                           ;   _i2c_write
                                           ;   _i2c_stop
                                           ;4 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;; Starting pCode block
                                           S_i2c_lcd__I2C_PCF8574_Write	code
                                           _I2C_PCF8574_Write:
                                           ; 2 exit points
                                           ;	.line	29; "i2c_lcd.c"	int8_t I2C_PCF8574_Write(uint8_t addr, uint8_t value) {
00044e   0021     movlb   0x01             	BANKSEL	r0x1000
00044f   00a0     movwf   0x20             	MOVWF	r0x1000
000450   0874     movf    0x74, 0x0        	MOVF	STK00,W
000451   00a1     movwf   0x21             	MOVWF	r0x1001
                                           ;	.line	31; "i2c_lcd.c"	i2c_start();
000452   3186     movlp   0x06             	PAGESEL	_i2c_start
000453   2614     call    0x0614           	CALL	_i2c_start
000454   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	32; "i2c_lcd.c"	s = i2c_write(addr << 1);
000455   0021     movlb   0x01             	BANKSEL	r0x1000
000456   0820     movf    0x20, 0x0        	MOVF	r0x1000,W
000457   00a2     movwf   0x22             	MOVWF	r0x1002
000458   3522     lslf    0x22, 0x0        	LSLF	r0x1002,W
000459   00a0     movwf   0x20             	MOVWF	r0x1000
00045a   3185     movlp   0x05             	PAGESEL	_i2c_write
00045b   2592     call    0x0592           	CALL	_i2c_write
00045c   3184     movlp   0x04             	PAGESEL	$
00045d   0021     movlb   0x01             	BANKSEL	r0x1000
00045e   00a0     movwf   0x20             	MOVWF	r0x1000
                                           ;;signed compare: left < lit(0x0=0), size=1, mask=ff
                                           ;	.line	33; "i2c_lcd.c"	if (s < 0) {		//bus collision ?
00045f   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000460   1fa0     btfss   0x20, 0x7        	BTFSS	r0x1000,7
                                           ;	.line	35; "i2c_lcd.c"	WCOL = 0;	// clear collision status bit
000461   1003     bcf     0x03, 0x0        	BCF	STATUS,0
                                           ;	.line	37; "i2c_lcd.c"	s = i2c_write(value);
000462   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000463   2c66     goto    0x0466           	GOTO	_00001_DS_
000464   0024     movlb   0x04             	BANKSEL	_SSP1CONbits
000465   1395     bcf     0x15, 0x7        	BCF	_SSP1CONbits,7
                                           _00001_DS_:
000466   0021     movlb   0x01             	BANKSEL	r0x1001
000467   0821     movf    0x21, 0x0        	MOVF	r0x1001,W
000468   3185     movlp   0x05             	PAGESEL	_i2c_write
000469   2592     call    0x0592           	CALL	_i2c_write
00046a   3184     movlp   0x04             	PAGESEL	$
00046b   0021     movlb   0x01             	BANKSEL	r0x1000
00046c   00a0     movwf   0x20             	MOVWF	r0x1000
                                           ;	.line	38; "i2c_lcd.c"	i2c_stop();
00046d   3186     movlp   0x06             	PAGESEL	_i2c_stop
00046e   2608     call    0x0608           	CALL	_i2c_stop
00046f   3184     movlp   0x04             	PAGESEL	$
                                           ;	.line	39; "i2c_lcd.c"	return s;
000470   0021     movlb   0x01             	BANKSEL	r0x1000
000471   0820     movf    0x20, 0x0        	MOVF	r0x1000,W
                                           ;	.line	40; "i2c_lcd.c"	}
000472   0008     return                   	RETURN	
                                           ; exit point of _I2C_PCF8574_Write


                                           ;	code size estimation:
                                           ;	  312+   96 =   408 instructions ( 1008 byte)

                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.7.1 #10289 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f1709
                                           	radix dec
                                           	include "p16f1709.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Aug 13 2015
                                           ;  MPASM PIC16F1709 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
                                           	__config _CONFIG1, 0x3ee4
                                           	__config _CONFIG2, 0x3fff
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_putchar
                                           	extern	_putchar_wait
                                           	extern	_puts_rom
                                           	extern	_init_usart
                                           	extern	_fifo_putchar
                                           	extern	_print_rom_fifo
                                           	extern	_print_debug_value
                                           	extern	_print_debug_fifo
                                           	extern	_LCD_init
                                           	extern	_LCD_putcmd
                                           	extern	_LCD_putch
                                           	extern	_LCD_puts
                                           	extern	_LCD_goto
                                           	extern	_STATUSbits
                                           	extern	_BSRbits
                                           	extern	_INTCONbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_PIR3bits
                                           	extern	_T1CONbits
                                           	extern	_T1GCONbits
                                           	extern	_T2CONbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PIE3bits
                                           	extern	_OPTION_REGbits
                                           	extern	_PCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCTUNEbits
                                           	extern	_OSCCONbits
                                           	extern	_OSCSTATbits
                                           	extern	_ADCON0bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON2bits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_CM1CON0bits
                                           	extern	_CM1CON1bits
                                           	extern	_CM2CON0bits
                                           	extern	_CM2CON1bits
                                           	extern	_CMOUTbits
                                           	extern	_BORCONbits
                                           	extern	_FVRCONbits
                                           	extern	_DAC1CON0bits
                                           	extern	_DAC1CON1bits
                                           	extern	_ZCD1CONbits
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMCON1bits
                                           	extern	_VREGCONbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_BAUDCTL1bits
                                           	extern	_WPUAbits
                                           	extern	_WPUBbits
                                           	extern	_WPUCbits
                                           	extern	_SSP1BUFbits
                                           	extern	_SSPBUFbits
                                           	extern	_SSP1ADDbits
                                           	extern	_SSPADDbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1CONbits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCONbits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_ODCONAbits
                                           	extern	_ODCONBbits
                                           	extern	_ODCONCbits
                                           	extern	_CCP1CONbits
                                           	extern	_ECCP1CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_ECCP2CONbits
                                           	extern	_CCPTMRSbits
                                           	extern	_SLRCONAbits
                                           	extern	_SLRCONBbits
                                           	extern	_SLRCONCbits
                                           	extern	_INLVLAbits
                                           	extern	_INLVLBbits
                                           	extern	_INLVLCbits
                                           	extern	_IOCAPbits
                                           	extern	_IOCANbits
                                           	extern	_IOCAFbits
                                           	extern	_IOCBPbits
                                           	extern	_IOCBNbits
                                           	extern	_IOCBFbits
                                           	extern	_IOCCPbits
                                           	extern	_IOCCNbits
                                           	extern	_IOCCFbits
                                           	extern	_T4CONbits
                                           	extern	_T6CONbits
                                           	extern	_OPA1CONbits
                                           	extern	_OPA2CONbits
                                           	extern	_PWM3DCLbits
                                           	extern	_PWM3DCHbits
                                           	extern	_PWM3CONbits
                                           	extern	_PWM3CON0bits
                                           	extern	_PWM4DCLbits
                                           	extern	_PWM4DCHbits
                                           	extern	_PWM4CONbits
                                           	extern	_PWM4CON0bits
                                           	extern	_COG1PHRbits
                                           	extern	_COG1PHFbits
                                           	extern	_COG1BLKRbits
                                           	extern	_COG1BLKFbits
                                           	extern	_COG1DBRbits
                                           	extern	_COG1DBFbits
                                           	extern	_COG1CON0bits
                                           	extern	_COG1CON1bits
                                           	extern	_COG1RISbits
                                           	extern	_COG1RSIMbits
                                           	extern	_COG1FISbits
                                           	extern	_COG1FSIMbits
                                           	extern	_COG1ASD0bits
                                           	extern	_COG1ASD1bits
                                           	extern	_COG1STRbits
                                           	extern	_PPSLOCKbits
                                           	extern	_CLCDATAbits
                                           	extern	_CLC1CONbits
                                           	extern	_CLC1POLbits
                                           	extern	_CLC1SEL0bits
                                           	extern	_CLC1SEL1bits
                                           	extern	_CLC1SEL2bits
                                           	extern	_CLC1SEL3bits
                                           	extern	_CLC1GLS0bits
                                           	extern	_CLC1GLS1bits
                                           	extern	_CLC1GLS2bits
                                           	extern	_CLC1GLS3bits
                                           	extern	_CLC2CONbits
                                           	extern	_CLC2POLbits
                                           	extern	_CLC2SEL0bits
                                           	extern	_CLC2SEL1bits
                                           	extern	_CLC2SEL2bits
                                           	extern	_CLC2SEL3bits
                                           	extern	_CLC2GLS0bits
                                           	extern	_CLC2GLS1bits
                                           	extern	_CLC2GLS2bits
                                           	extern	_CLC2GLS3bits
                                           	extern	_CLC3CONbits
                                           	extern	_CLC3POLbits
                                           	extern	_CLC3SEL0bits
                                           	extern	_CLC3SEL1bits
                                           	extern	_CLC3SEL2bits
                                           	extern	_CLC3SEL3bits
                                           	extern	_CLC3GLS0bits
                                           	extern	_CLC3GLS1bits
                                           	extern	_CLC3GLS2bits
                                           	extern	_CLC3GLS3bits
                                           	extern	_ICDBK0Hbits
                                           	extern	_STATUS_SHADbits
                                           	extern	_INDF0
                                           	extern	_INDF1
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR0
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_FSR1
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_BSR
                                           	extern	_WREG
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_PIR3
                                           	extern	_TMR0
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_T1GCON
                                           	extern	_TMR2
                                           	extern	_PR2
                                           	extern	_T2CON
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PIE3
                                           	extern	_OPTION_REG
                                           	extern	_PCON
                                           	extern	_WDTCON
                                           	extern	_OSCTUNE
                                           	extern	_OSCCON
                                           	extern	_OSCSTAT
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_ADCON1
                                           	extern	_ADCON2
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_CM1CON0
                                           	extern	_CM1CON1
                                           	extern	_CM2CON0
                                           	extern	_CM2CON1
                                           	extern	_CMOUT
                                           	extern	_BORCON
                                           	extern	_FVRCON
                                           	extern	_DAC1CON0
                                           	extern	_DAC1CON1
                                           	extern	_ZCD1CON
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMADR
                                           	extern	_PMADRL
                                           	extern	_PMADRH
                                           	extern	_PMDAT
                                           	extern	_PMDATL
                                           	extern	_PMDATH
                                           	extern	_PMCON1
                                           	extern	_PMCON2
                                           	extern	_VREGCON
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_SP1BRG
                                           	extern	_SP1BRGL
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SPBRGL
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_BAUDCTL1
                                           	extern	_WPUA
                                           	extern	_WPUB
                                           	extern	_WPUC
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1CON
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON
                                           	extern	_SSPCON1
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_ODCONA
                                           	extern	_ODCONB
                                           	extern	_ODCONC
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_ECCP1CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ECCP2CON
                                           	extern	_CCPTMRS
                                           	extern	_SLRCONA
                                           	extern	_SLRCONB
                                           	extern	_SLRCONC
                                           	extern	_INLVLA
                                           	extern	_INLVLB
                                           	extern	_INLVLC
                                           	extern	_IOCAP
                                           	extern	_IOCAN
                                           	extern	_IOCAF
                                           	extern	_IOCBP
                                           	extern	_IOCBN
                                           	extern	_IOCBF
                                           	extern	_IOCCP
                                           	extern	_IOCCN
                                           	extern	_IOCCF
                                           	extern	_TMR4
                                           	extern	_PR4
                                           	extern	_T4CON
                                           	extern	_TMR6
                                           	extern	_PR6
                                           	extern	_T6CON
                                           	extern	_OPA1CON
                                           	extern	_OPA2CON
                                           	extern	_PWM3DCL
                                           	extern	_PWM3DCH
                                           	extern	_PWM3CON
                                           	extern	_PWM3CON0
                                           	extern	_PWM4DCL
                                           	extern	_PWM4DCH
                                           	extern	_PWM4CON
                                           	extern	_PWM4CON0
                                           	extern	_COG1PHR
                                           	extern	_COG1PHF
                                           	extern	_COG1BLKR
                                           	extern	_COG1BLKF
                                           	extern	_COG1DBR
                                           	extern	_COG1DBF
                                           	extern	_COG1CON0
                                           	extern	_COG1CON1
                                           	extern	_COG1RIS
                                           	extern	_COG1RSIM
                                           	extern	_COG1FIS
                                           	extern	_COG1FSIM
                                           	extern	_COG1ASD0
                                           	extern	_COG1ASD1
                                           	extern	_COG1STR
                                           	extern	_PPSLOCK
                                           	extern	_INTPPS
                                           	extern	_T0CKIPPS
                                           	extern	_T1CKIPPS
                                           	extern	_T1GPPS
                                           	extern	_CCP1PPS
                                           	extern	_CCP2PPS
                                           	extern	_COGINPPS
                                           	extern	_SSPCLKPPS
                                           	extern	_SSPDATPPS
                                           	extern	_SSPSSPPS
                                           	extern	_RXPPS
                                           	extern	_CKPPS
                                           	extern	_CLCIN0PPS
                                           	extern	_CLCIN1PPS
                                           	extern	_CLCIN2PPS
                                           	extern	_CLCIN3PPS
                                           	extern	_RA0PPS
                                           	extern	_RA1PPS
                                           	extern	_RA2PPS
                                           	extern	_RA4PPS
                                           	extern	_RA5PPS
                                           	extern	_RB4PPS
                                           	extern	_RB5PPS
                                           	extern	_RB6PPS
                                           	extern	_RB7PPS
                                           	extern	_RC0PPS
                                           	extern	_RC1PPS
                                           	extern	_RC2PPS
                                           	extern	_RC3PPS
                                           	extern	_RC4PPS
                                           	extern	_RC5PPS
                                           	extern	_RC6PPS
                                           	extern	_RC7PPS
                                           	extern	_CLCDATA
                                           	extern	_CLC1CON
                                           	extern	_CLC1POL
                                           	extern	_CLC1SEL0
                                           	extern	_CLC1SEL1
                                           	extern	_CLC1SEL2
                                           	extern	_CLC1SEL3
                                           	extern	_CLC1GLS0
                                           	extern	_CLC1GLS1
                                           	extern	_CLC1GLS2
                                           	extern	_CLC1GLS3
                                           	extern	_CLC2CON
                                           	extern	_CLC2POL
                                           	extern	_CLC2SEL0
                                           	extern	_CLC2SEL1
                                           	extern	_CLC2SEL2
                                           	extern	_CLC2SEL3
                                           	extern	_CLC2GLS0
                                           	extern	_CLC2GLS1
                                           	extern	_CLC2GLS2
                                           	extern	_CLC2GLS3
                                           	extern	_CLC3CON
                                           	extern	_CLC3POL
                                           	extern	_CLC3SEL0
                                           	extern	_CLC3SEL1
                                           	extern	_CLC3SEL2
                                           	extern	_CLC3SEL3
                                           	extern	_CLC3GLS0
                                           	extern	_CLC3GLS1
                                           	extern	_CLC3GLS2
                                           	extern	_CLC3GLS3
                                           	extern	_ICDBK0H
                                           	extern	_STATUS_SHAD
                                           	extern	_WREG_SHAD
                                           	extern	_BSR_SHAD
                                           	extern	_PCLATH_SHAD
                                           	extern	_FSR0L_SHAD
                                           	extern	_FSR0H_SHAD
                                           	extern	_FSR1L_SHAD
                                           	extern	_FSR1H_SHAD
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_delay_ms
                                           	global	_isr
                                           	global	__sdcc_gsinit_startup
                                           	global	_pps_init
                                           	global	_system_init
                                           	global	_i2c_init
                                           	global	_ad_init
                                           	global	_uart_init
                                           	global	_timer0_init
                                           	global	_timer1_init
                                           	global	_timer2_init
                                           	global	_clc_init
                                           	global	_cog_init
                                           	global	_ad
                                           	global	_nibble_to_hex
                                           	global	_main
                                           	global	_tx_fifo
                                           	global	_rx_fifo
                                           	global	_pulse_high
                                           	global	_pulse_low
                                           	global	_timer0_counter
                                           	global	_adc_poti
                                           	global	_adc_sense

                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00

                                           sharebank udata_ovr 0x0070
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_main_0	udata
                                           _tx_fifo	res	34

                                           UD_main_1	udata
                                           _rx_fifo	res	34

                                           UD_main_2	udata
                                           _timer0_counter	res	1

                                           UD_main_3	udata
                                           _adc_poti	res	2

                                           UD_main_4	udata
                                           _adc_sense	res	2

                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_main_0	udata
                                           r0x105C	res	1
                                           r0x105D	res	1
                                           r0x105E	res	1
                                           r0x105F	res	1
                                           r0x104E	res	1
                                           r0x104D	res	1
                                           r0x104F	res	1
                                           r0x1050	res	1
                                           r0x1051	res	1
                                           r0x1052	res	1
                                           r0x1058	res	1
                                           r0x1059	res	1
                                           r0x105A	res	1
                                           r0x1053	res	1
                                           r0x1054	res	1
                                           r0x1056	res	1
                                           r0x1055	res	1
                                           r0x1057	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------

                                           ID_main_0	idata
                                           _pulse_high
                                           	db	0x19, 0x00


                                           ID_main_1	idata
                                           _pulse_low
                                           	db	0x4b, 0x00


                                           ID_main_2	code
                                           ___str_0
000571   3442     retlw   0x42             	retlw 0x42 ; 'B'
000572   346f     retlw   0x6f             	retlw 0x6f ; 'o'
000573   346f     retlw   0x6f             	retlw 0x6f ; 'o'
000574   3473     retlw   0x73             	retlw 0x73 ; 's'
000575   3474     retlw   0x74             	retlw 0x74 ; 't'
000576   3465     retlw   0x65             	retlw 0x65 ; 'e'
000577   3472     retlw   0x72             	retlw 0x72 ; 'r'
000578   3420     retlw   0x20             	retlw 0x20 ; ' '
000579   344d     retlw   0x4d             	retlw 0x4d ; 'M'
00057a   3461     retlw   0x61             	retlw 0x61 ; 'a'
00057b   3478     retlw   0x78             	retlw 0x78 ; 'x'
00057c   343d     retlw   0x3d             	retlw 0x3d ; '='
00057d   3438     retlw   0x38             	retlw 0x38 ; '8'
00057e   342e     retlw   0x2e             	retlw 0x2e ; '.'
00057f   3430     retlw   0x30             	retlw 0x30 ; '0'
000580   3441     retlw   0x41             	retlw 0x41 ; 'A'
000581   3400     retlw   0x00             	retlw 0x00 ; '.'

                                           ID_main_3	code
                                           ___str_1
0005a1   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a2   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a3   344f     retlw   0x4f             	retlw 0x4f ; 'O'
0005a4   346e     retlw   0x6e             	retlw 0x6e ; 'n'
0005a5   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a6   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a7   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a8   3420     retlw   0x20             	retlw 0x20 ; ' '
0005a9   3420     retlw   0x20             	retlw 0x20 ; ' '
0005aa   3420     retlw   0x20             	retlw 0x20 ; ' '
0005ab   3430     retlw   0x30             	retlw 0x30 ; '0'
0005ac   342e     retlw   0x2e             	retlw 0x2e ; '.'
0005ad   3430     retlw   0x30             	retlw 0x30 ; '0'
0005ae   3425     retlw   0x25             	retlw 0x25 ; '%'
0005af   3400     retlw   0x00             	retlw 0x00 ; '.'
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   3186     movlp   0x06             	pagesel __sdcc_gsinit_startup
000002   2e26     goto    0x0626           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;4 compiler assigned registers:
                                           ;   r0x105C
                                           ;   r0x105D
                                           ;   r0x105E
                                           ;   r0x105F
                                           ;; Starting pCode block
                                           _isr:
                                           ; 0 exit points
                                           ;	.line	35; "main.c"	void isr(void) __interrupt(0) {
000004   018a     clrf    0x0a             	CLRF	PCLATH
                                           ;	.line	36; "main.c"	if (CCP1IF) {
000005   0020     movlb   0x00             	BANKSEL	_PIR1bits
000006   1d11     btfss   0x11, 0x2        	BTFSS	_PIR1bits,2
000007   281c     goto    0x001c           	GOTO	_00109_DS_
                                           ;	.line	37; "main.c"	CCP1IF = 0;
000008   1111     bcf     0x11, 0x2        	BCF	_PIR1bits,2
                                           ;	.line	38; "main.c"	if (CCP1M0) {
000009   0025     movlb   0x05             	BANKSEL	_CCP1CONbits
00000a   1c13     btfss   0x13, 0x0        	BTFSS	_CCP1CONbits,0
00000b   2814     goto    0x0014           	GOTO	_00106_DS_
                                           ;	.line	39; "main.c"	CCP1M0 = 0;
00000c   1013     bcf     0x13, 0x0        	BCF	_CCP1CONbits,0
                                           ;	.line	40; "main.c"	CCPR1 += pulse_high;
00000d   0020     movlb   0x00             	BANKSEL	_pulse_high
00000e   0864     movf    0x64, 0x0        	MOVF	_pulse_high,W
00000f   0021     movlb   0x01             	BANKSEL	r0x105C
000010   00b7     movwf   0x37             	MOVWF	r0x105C
000011   0025     movlb   0x05             	BANKSEL	_CCPR1
000012   0791     addwf   0x11, 0x1        	ADDWF	_CCPR1,F
000013   281c     goto    0x001c           	GOTO	_00109_DS_
                                           _00106_DS_:
                                           ;	.line	42; "main.c"	CCP1M0 = 1;
000014   0025     movlb   0x05             	BANKSEL	_CCP1CONbits
000015   1413     bsf     0x13, 0x0        	BSF	_CCP1CONbits,0
                                           ;	.line	43; "main.c"	CCPR1 += pulse_low;
000016   0020     movlb   0x00             	BANKSEL	_pulse_low
000017   0866     movf    0x66, 0x0        	MOVF	_pulse_low,W
000018   0021     movlb   0x01             	BANKSEL	r0x105C
000019   00b7     movwf   0x37             	MOVWF	r0x105C
00001a   0025     movlb   0x05             	BANKSEL	_CCPR1
00001b   0791     addwf   0x11, 0x1        	ADDWF	_CCPR1,F
                                           _00109_DS_:
                                           ;	.line	46; "main.c"	if (TMR0IF && TMR0IE) {
00001c   0020     movlb   0x00             	BANKSEL	_INTCONbits
00001d   1d0b     btfss   0x0b, 0x2        	BTFSS	_INTCONbits,2
00001e   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
00001f   1e8b     btfss   0x0b, 0x5        	BTFSS	_INTCONbits,5
000020   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           ;	.line	47; "main.c"	TMR0IF = 0;
000021   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	48; "main.c"	TMR0 = TIMER0_VAL;
000022   3006     movlw   0x06             	MOVLW	0x06
000023   0095     movwf   0x15             	MOVWF	_TMR0
                                           ;	.line	49; "main.c"	LATC4 ^= 1;
000024   0021     movlb   0x01             	BANKSEL	r0x105C
000025   01b7     clrf    0x37             	CLRF	r0x105C
000026   0022     movlb   0x02             	BANKSEL	_LATCbits
000027   1e0e     btfss   0x0e, 0x4        	BTFSS	_LATCbits,4
000028   282b     goto    0x002b           	GOTO	_00004_DS_
000029   0021     movlb   0x01             	BANKSEL	r0x105C
00002a   0ab7     incf    0x37, 0x1        	INCF	r0x105C,F
                                           _00004_DS_:
00002b   0021     movlb   0x01             	BANKSEL	r0x105C
00002c   0837     movf    0x37, 0x0        	MOVF	r0x105C,W
00002d   00b8     movwf   0x38             	MOVWF	r0x105D
00002e   01b9     clrf    0x39             	CLRF	r0x105E
00002f   3001     movlw   0x01             	MOVLW	0x01
000030   0638     xorwf   0x38, 0x0        	XORWF	r0x105D,W
000031   00b8     movwf   0x38             	MOVWF	r0x105D
000032   00b7     movwf   0x37             	MOVWF	r0x105C
000033   3000     movlw   0x00             	MOVLW	0x00
000034   00ba     movwf   0x3a             	MOVWF	r0x105F
                                           ;;103	MOVF	r0x105C,W
000035   0c38     rrf     0x38, 0x0        	RRF	r0x105D,W
000036   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000037   283a     goto    0x003a           	GOTO	_00005_DS_
000038   0022     movlb   0x02             	BANKSEL	_LATCbits
000039   120e     bcf     0x0e, 0x4        	BCF	_LATCbits,4
                                           _00005_DS_:
00003a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00003b   283e     goto    0x003e           	GOTO	_00006_DS_
00003c   0022     movlb   0x02             	BANKSEL	_LATCbits
00003d   160e     bsf     0x0e, 0x4        	BSF	_LATCbits,4
                                           _00006_DS_:
                                           ;	.line	51; "main.c"	timer0_counter++;
00003e   0020     movlb   0x00             	BANKSEL	_timer0_counter
00003f   0ae8     incf    0x68, 0x1        	INCF	_timer0_counter,F
                                           ;	.line	54; "main.c"	if (timer0_counter & 0x02) {
000040   0868     movf    0x68, 0x0        	MOVF	_timer0_counter,W
000041   0021     movlb   0x01             	BANKSEL	r0x105C
000042   00b7     movwf   0x37             	MOVWF	r0x105C
000043   01b8     clrf    0x38             	CLRF	r0x105D
000044   1cb7     btfss   0x37, 0x1        	BTFSS	r0x105C,1
000045   286b     goto    0x006b           	GOTO	_00121_DS_
                                           ;	.line	55; "main.c"	if (timer0_counter & 0x01) {
000046   0020     movlb   0x00             	BANKSEL	_timer0_counter
000047   0868     movf    0x68, 0x0        	MOVF	_timer0_counter,W
000048   0021     movlb   0x01             	BANKSEL	r0x105C
000049   00b7     movwf   0x37             	MOVWF	r0x105C
00004a   01b8     clrf    0x38             	CLRF	r0x105D
00004b   1c37     btfss   0x37, 0x0        	BTFSS	r0x105C,0
00004c   2852     goto    0x0052           	GOTO	_00113_DS_
                                           ;	.line	56; "main.c"	ADCON0 = (AD_POTI << 2) | 1;
00004d   3009     movlw   0x09             	MOVLW	0x09
00004e   0021     movlb   0x01             	BANKSEL	_ADCON0
00004f   009d     movwf   0x1d             	MOVWF	_ADCON0
                                           ;	.line	57; "main.c"	ADGO = 1;
000050   149d     bsf     0x1d, 0x1        	BSF	_ADCON0bits,1
000051   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           _00113_DS_:
                                           ;	.line	59; "main.c"	} else if (!ADGO) {
000052   0021     movlb   0x01             	BANKSEL	_ADCON0bits
000053   189d     btfsc   0x1d, 0x1        	BTFSC	_ADCON0bits,1
000054   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           ;	.line	61; "main.c"	adc_poti += ADRESL;
000055   081b     movf    0x1b, 0x0        	MOVF	_ADRESL,W
000056   0021     movlb   0x01             	BANKSEL	r0x105C
000057   00b7     movwf   0x37             	MOVWF	r0x105C
000058   01b8     clrf    0x38             	CLRF	r0x105D
                                           ;;101	MOVF	r0x105C,W
000059   3000     movlw   0x00             	MOVLW	0x00
00005a   00ba     movwf   0x3a             	MOVWF	r0x105F
                                           ;;100	MOVF	r0x105E,W
00005b   0837     movf    0x37, 0x0        	MOVF	r0x105C,W
00005c   00b9     movwf   0x39             	MOVWF	r0x105E
00005d   002c     movlb   0x0c             	BANKSEL	_adc_poti
00005e   07cc     addwf   0x4c, 0x1        	ADDWF	_adc_poti,F
00005f   0021     movlb   0x01             	BANKSEL	r0x105F
000060   083a     movf    0x3a, 0x0        	MOVF	r0x105F,W
000061   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000062   0a3a     incf    0x3a, 0x0        	INCF	r0x105F,W
000063   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000064   2867     goto    0x0067           	GOTO	_00007_DS_
000065   002c     movlb   0x0c             	BANKSEL	_adc_poti
000066   07cd     addwf   0x4d, 0x1        	ADDWF	(_adc_poti + 1),F
                                           ;;shiftRight_Left2ResultLit:5323: shCount=1, size=2, sign=0, same=1, offr=0
                                           _00007_DS_:
                                           ;	.line	62; "main.c"	adc_poti >>= 1;
000067   002c     movlb   0x0c             	BANKSEL	_adc_poti
000068   36cd     lsrf    0x4d, 0x1        	LSRF	(_adc_poti + 1),F
000069   0ccc     rrf     0x4c, 0x1        	RRF	_adc_poti,F
00006a   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           _00121_DS_:
                                           ;	.line	65; "main.c"	if (timer0_counter & 0x01) {
00006b   0020     movlb   0x00             	BANKSEL	_timer0_counter
00006c   0868     movf    0x68, 0x0        	MOVF	_timer0_counter,W
00006d   0021     movlb   0x01             	BANKSEL	r0x105C
00006e   00b7     movwf   0x37             	MOVWF	r0x105C
00006f   01b8     clrf    0x38             	CLRF	r0x105D
000070   1c37     btfss   0x37, 0x0        	BTFSS	r0x105C,0
000071   2877     goto    0x0077           	GOTO	_00118_DS_
                                           ;	.line	66; "main.c"	ADCON0 = (AD_SENSE << 2) | 1;
000072   3011     movlw   0x11             	MOVLW	0x11
000073   0021     movlb   0x01             	BANKSEL	_ADCON0
000074   009d     movwf   0x1d             	MOVWF	_ADCON0
                                           ;	.line	67; "main.c"	ADGO = 1;
000075   149d     bsf     0x1d, 0x1        	BSF	_ADCON0bits,1
000076   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           _00118_DS_:
                                           ;	.line	69; "main.c"	} else if (!ADGO) {
000077   0021     movlb   0x01             	BANKSEL	_ADCON0bits
000078   189d     btfsc   0x1d, 0x1        	BTFSC	_ADCON0bits,1
000079   288f     goto    0x008f           	GOTO	END_OF_INTERRUPT
                                           ;	.line	71; "main.c"	adc_sense += ADRESL;
00007a   081b     movf    0x1b, 0x0        	MOVF	_ADRESL,W
00007b   0021     movlb   0x01             	BANKSEL	r0x105E
00007c   00b9     movwf   0x39             	MOVWF	r0x105E
00007d   00b7     movwf   0x37             	MOVWF	r0x105C
00007e   01b8     clrf    0x38             	CLRF	r0x105D
                                           ;;99	MOVF	r0x105C,W
00007f   3000     movlw   0x00             	MOVLW	0x00
000080   00ba     movwf   0x3a             	MOVWF	r0x105F
000081   0839     movf    0x39, 0x0        	MOVF	r0x105E,W
000082   002c     movlb   0x0c             	BANKSEL	_adc_sense
000083   07ce     addwf   0x4e, 0x1        	ADDWF	_adc_sense,F
000084   0021     movlb   0x01             	BANKSEL	r0x105F
000085   083a     movf    0x3a, 0x0        	MOVF	r0x105F,W
000086   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000087   0a3a     incf    0x3a, 0x0        	INCF	r0x105F,W
000088   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000089   288c     goto    0x008c           	GOTO	_00008_DS_
00008a   002c     movlb   0x0c             	BANKSEL	_adc_sense
00008b   07cf     addwf   0x4f, 0x1        	ADDWF	(_adc_sense + 1),F
                                           ;;shiftRight_Left2ResultLit:5323: shCount=1, size=2, sign=0, same=1, offr=0
                                           _00008_DS_:
                                           ;	.line	72; "main.c"	adc_sense >>= 1;
00008c   002c     movlb   0x0c             	BANKSEL	_adc_sense
00008d   36cf     lsrf    0x4f, 0x1        	LSRF	(_adc_sense + 1),F
00008e   0cce     rrf     0x4e, 0x1        	RRF	_adc_sense,F
                                           END_OF_INTERRUPT:
                                           ;	.line	76; "main.c"	}
00008f   0009     retfie                   	RETFIE	

                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _pps_init
                                           ;   _system_init
                                           ;   _uart_init
                                           ;   _i2c_init
                                           ;   _ad_init
                                           ;   _timer0_init
                                           ;   _cog_init
                                           ;   _timer1_init
                                           ;   _LCD_init
                                           ;   _LCD_putcmd
                                           ;   _LCD_puts
                                           ;   _LCD_goto
                                           ;   _nibble_to_hex
                                           ;   _LCD_putch
                                           ;   _nibble_to_hex
                                           ;   _LCD_putch
                                           ;   _LCD_puts
                                           ;   _putchar_wait
                                           ;   _delay_ms
                                           ;   _pps_init
                                           ;   _system_init
                                           ;   _uart_init
                                           ;   _i2c_init
                                           ;   _ad_init
                                           ;   _timer0_init
                                           ;   _cog_init
                                           ;   _timer1_init
                                           ;   _LCD_init
                                           ;   _LCD_putcmd
                                           ;   _LCD_puts
                                           ;   _LCD_goto
                                           ;   _nibble_to_hex
                                           ;   _LCD_putch
                                           ;   _nibble_to_hex
                                           ;   _LCD_putch
                                           ;   _LCD_puts
                                           ;   _putchar_wait
                                           ;   _delay_ms
                                           ;8 compiler assigned registers:
                                           ;   r0x1053
                                           ;   r0x1054
                                           ;   STK01
                                           ;   STK00
                                           ;   r0x1055
                                           ;   r0x1056
                                           ;   r0x1057
                                           ;   STK02
                                           ;; Starting pCode block
                                           S_main__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	307; "main.c"	pps_init();
000090   3183     movlp   0x03             	PAGESEL	_pps_init
000091   23fd     call    0x03fd           	CALL	_pps_init
000092   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	308; "main.c"	system_init();
000093   3184     movlp   0x04             	PAGESEL	_system_init
000094   2426     call    0x0426           	CALL	_system_init
000095   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	309; "main.c"	uart_init();
000096   3185     movlp   0x05             	PAGESEL	_uart_init
000097   25b0     call    0x05b0           	CALL	_uart_init
000098   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	310; "main.c"	i2c_init();
000099   3185     movlp   0x05             	PAGESEL	_i2c_init
00009a   25d6     call    0x05d6           	CALL	_i2c_init
00009b   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	311; "main.c"	ad_init();
00009c   3185     movlp   0x05             	PAGESEL	_ad_init
00009d   25e9     call    0x05e9           	CALL	_ad_init
00009e   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	312; "main.c"	timer0_init();
00009f   3185     movlp   0x05             	PAGESEL	_timer0_init
0000a0   25e0     call    0x05e0           	CALL	_timer0_init
0000a1   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	313; "main.c"	cog_init();
0000a2   3185     movlp   0x05             	PAGESEL	_cog_init
0000a3   250f     call    0x050f           	CALL	_cog_init
0000a4   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	314; "main.c"	timer1_init();
0000a5   3185     movlp   0x05             	PAGESEL	_timer1_init
0000a6   2582     call    0x0582           	CALL	_timer1_init
0000a7   3180     movlp   0x00             	PAGESEL	$
                                           ;;gen.c:6571: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	317; "main.c"	tx_fifo.head = 0;
0000a8   0020     movlb   0x00             	BANKSEL	_tx_fifo
0000a9   01a0     clrf    0x20             	CLRF	(_tx_fifo + 0)
                                           ;;gen.c:6571: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	318; "main.c"	tx_fifo.tail = 0;
0000aa   01a1     clrf    0x21             	CLRF	(_tx_fifo + 1)
                                           ;;gen.c:6571: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	319; "main.c"	rx_fifo.head = 0;
0000ab   0020     movlb   0x00             	BANKSEL	_rx_fifo
0000ac   01c2     clrf    0x42             	CLRF	(_rx_fifo + 0)
                                           ;;gen.c:6571: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	320; "main.c"	rx_fifo.tail = 0;
0000ad   01c3     clrf    0x43             	CLRF	(_rx_fifo + 1)
                                           ;	.line	322; "main.c"	LATB4 = 1;		/* enable	*/
0000ae   0022     movlb   0x02             	BANKSEL	_LATBbits
0000af   160d     bsf     0x0d, 0x4        	BSF	_LATBbits,4
                                           ;	.line	323; "main.c"	GIE = 1;
0000b0   0020     movlb   0x00             	BANKSEL	_INTCONbits
0000b1   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	324; "main.c"	LCD_init(LCD_01_ADDRESS);
0000b2   3027     movlw   0x27             	MOVLW	0x27
0000b3   3182     movlp   0x02             	PAGESEL	_LCD_init
0000b4   22a9     call    0x02a9           	CALL	_LCD_init
0000b5   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	326; "main.c"	while (1) {
0000b6   0021     movlb   0x01             	BANKSEL	r0x1053
0000b7   01c4     clrf    0x44             	CLRF	r0x1053
                                           _00201_DS_:
                                           ;	.line	327; "main.c"	if (counter == 0) {
0000b8   3000     movlw   0x00             	MOVLW	0x00
0000b9   0021     movlb   0x01             	BANKSEL	r0x1053
0000ba   0444     iorwf   0x44, 0x0        	IORWF	r0x1053,W
0000bb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000bc   292f     goto    0x012f           	GOTO	_00003_DS_
                                           ;	.line	330; "main.c"	GIE = 0;
0000bd   0020     movlb   0x00             	BANKSEL	_INTCONbits
0000be   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	332; "main.c"	temp = adc_poti;
0000bf   002c     movlb   0x0c             	BANKSEL	_adc_poti
0000c0   084c     movf    0x4c, 0x0        	MOVF	_adc_poti,W
0000c1   0021     movlb   0x01             	BANKSEL	r0x1054
0000c2   00c5     movwf   0x45             	MOVWF	r0x1054
                                           ;	.line	333; "main.c"	GIE = 1;
0000c3   0020     movlb   0x00             	BANKSEL	_INTCONbits
0000c4   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	334; "main.c"	LCD_putcmd(LCD_01_ADDRESS, LCD_CLEAR, 1);
0000c5   3001     movlw   0x01             	MOVLW	0x01
0000c6   00f3     movwf   0x73             	MOVWF	STK01
0000c7   3001     movlw   0x01             	MOVLW	0x01
0000c8   00f4     movwf   0x74             	MOVWF	STK00
0000c9   3027     movlw   0x27             	MOVLW	0x27
0000ca   3183     movlp   0x03             	PAGESEL	_LCD_putcmd
0000cb   2309     call    0x0309           	CALL	_LCD_putcmd
0000cc   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	335; "main.c"	LCD_puts(LCD_01_ADDRESS, "Booster Max=8.0A\0");
0000cd   3085     movlw   0x85             	MOVLW	high (___str_0 + 0)
0000ce   0021     movlb   0x01             	BANKSEL	r0x1055
0000cf   00c7     movwf   0x47             	MOVWF	r0x1055
0000d0   3071     movlw   0x71             	MOVLW	(___str_0 + 0)
0000d1   00c6     movwf   0x46             	MOVWF	r0x1056
0000d2   3080     movlw   0x80             	MOVLW	0x80
0000d3   00c8     movwf   0x48             	MOVWF	r0x1057
0000d4   0846     movf    0x46, 0x0        	MOVF	r0x1056,W
0000d5   00f2     movwf   0x72             	MOVWF	STK02
0000d6   0847     movf    0x47, 0x0        	MOVF	r0x1055,W
0000d7   00f3     movwf   0x73             	MOVWF	STK01
0000d8   0848     movf    0x48, 0x0        	MOVF	r0x1057,W
0000d9   00f4     movwf   0x74             	MOVWF	STK00
0000da   3027     movlw   0x27             	MOVLW	0x27
0000db   3184     movlp   0x04             	PAGESEL	_LCD_puts
0000dc   2473     call    0x0473           	CALL	_LCD_puts
0000dd   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	336; "main.c"	LCD_goto(LCD_01_ADDRESS, 2, 1);
0000de   3001     movlw   0x01             	MOVLW	0x01
0000df   00f3     movwf   0x73             	MOVWF	STK01
0000e0   3002     movlw   0x02             	MOVLW	0x02
0000e1   00f4     movwf   0x74             	MOVWF	STK00
0000e2   3027     movlw   0x27             	MOVLW	0x27
0000e3   3182     movlp   0x02             	PAGESEL	_LCD_goto
0000e4   2248     call    0x0248           	CALL	_LCD_goto
0000e5   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	337; "main.c"	LCD_putch(LCD_01_ADDRESS, nibble_to_hex(temp >> 4));
0000e6   0021     movlb   0x01             	BANKSEL	r0x1054
0000e7   0e45     swapf   0x45, 0x0        	SWAPF	r0x1054,W
0000e8   390f     andlw   0x0f             	ANDLW	0x0f
0000e9   00c6     movwf   0x46             	MOVWF	r0x1056
0000ea   3185     movlp   0x05             	PAGESEL	_nibble_to_hex
0000eb   2524     call    0x0524           	CALL	_nibble_to_hex
0000ec   3180     movlp   0x00             	PAGESEL	$
0000ed   0021     movlb   0x01             	BANKSEL	r0x1056
0000ee   00c6     movwf   0x46             	MOVWF	r0x1056
0000ef   00f4     movwf   0x74             	MOVWF	STK00
0000f0   3027     movlw   0x27             	MOVLW	0x27
0000f1   3183     movlp   0x03             	PAGESEL	_LCD_putch
0000f2   2355     call    0x0355           	CALL	_LCD_putch
0000f3   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	338; "main.c"	LCD_putch(LCD_01_ADDRESS, nibble_to_hex(temp));
0000f4   0021     movlb   0x01             	BANKSEL	r0x1054
0000f5   0845     movf    0x45, 0x0        	MOVF	r0x1054,W
0000f6   3185     movlp   0x05             	PAGESEL	_nibble_to_hex
0000f7   2524     call    0x0524           	CALL	_nibble_to_hex
0000f8   3180     movlp   0x00             	PAGESEL	$
0000f9   0021     movlb   0x01             	BANKSEL	r0x1054
0000fa   00c5     movwf   0x45             	MOVWF	r0x1054
0000fb   00f4     movwf   0x74             	MOVWF	STK00
0000fc   3027     movlw   0x27             	MOVLW	0x27
0000fd   3183     movlp   0x03             	PAGESEL	_LCD_putch
0000fe   2355     call    0x0355           	CALL	_LCD_putch
0000ff   3180     movlp   0x00             	PAGESEL	$
                                           ;	.line	339; "main.c"	LCD_puts(LCD_01_ADDRESS, "  On      0.0%\0");
000100   3085     movlw   0x85             	MOVLW	high (___str_1 + 0)
000101   0021     movlb   0x01             	BANKSEL	r0x1056
000102   00c6     movwf   0x46             	MOVWF	r0x1056
000103   30a1     movlw   0xa1             	MOVLW	(___str_1 + 0)
000104   00c5     movwf   0x45             	MOVWF	r0x1054
000105   3080     movlw   0x80             	MOVLW	0x80
000106   00c7     movwf   0x47             	MOVWF	r0x1055
000107   0845     movf    0x45, 0x0        	MOVF	r0x1054,W
000108   00f2     movwf   0x72             	MOVWF	STK02
000109   0846     movf    0x46, 0x0        	MOVF	r0x1056,W
00010a   00f3     movwf   0x73             	MOVWF	STK01
00010b   0847     movf    0x47, 0x0        	MOVF	r0x1055,W
00010c   00f4     movwf   0x74             	MOVWF	STK00
00010d   3027     movlw   0x27             	MOVLW	0x27
00010e   3184     movlp   0x04             	PAGESEL	_LCD_puts
00010f   2473     call    0x0473           	CALL	_LCD_puts
000110   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	342; "main.c"	putchar_wait(0x55);
000111   3055     movlw   0x55             	MOVLW	0x55
000112   3185     movlp   0x05             	PAGESEL	_putchar_wait
000113   25cc     call    0x05cc           	CALL	_putchar_wait
000114   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	344; "main.c"	LATC5 ^= 1;
000115   0021     movlb   0x01             	BANKSEL	r0x1054
000116   01c5     clrf    0x45             	CLRF	r0x1054
000117   0022     movlb   0x02             	BANKSEL	_LATCbits
000118   1e8e     btfss   0x0e, 0x5        	BTFSS	_LATCbits,5
000119   291c     goto    0x011c           	GOTO	_00001_DS_
00011a   0021     movlb   0x01             	BANKSEL	r0x1054
00011b   0ac5     incf    0x45, 0x1        	INCF	r0x1054,F
                                           _00001_DS_:
00011c   0021     movlb   0x01             	BANKSEL	r0x1054
00011d   0845     movf    0x45, 0x0        	MOVF	r0x1054,W
00011e   00c6     movwf   0x46             	MOVWF	r0x1056
00011f   01c7     clrf    0x47             	CLRF	r0x1055
000120   3001     movlw   0x01             	MOVLW	0x01
000121   0646     xorwf   0x46, 0x0        	XORWF	r0x1056,W
000122   00c6     movwf   0x46             	MOVWF	r0x1056
000123   00c5     movwf   0x45             	MOVWF	r0x1054
000124   3000     movlw   0x00             	MOVLW	0x00
000125   00c8     movwf   0x48             	MOVWF	r0x1057
                                           ;;102	MOVF	r0x1054,W
000126   0c46     rrf     0x46, 0x0        	RRF	r0x1056,W
000127   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000128   292b     goto    0x012b           	GOTO	_00002_DS_
000129   0022     movlb   0x02             	BANKSEL	_LATCbits
00012a   128e     bcf     0x0e, 0x5        	BCF	_LATCbits,5
                                           _00002_DS_:
00012b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00012c   292f     goto    0x012f           	GOTO	_00003_DS_
00012d   0022     movlb   0x02             	BANKSEL	_LATCbits
00012e   168e     bsf     0x0e, 0x5        	BSF	_LATCbits,5
                                           _00003_DS_:
                                           ;	.line	346; "main.c"	delay_ms(4);
00012f   3004     movlw   0x04             	MOVLW	0x04
000130   00f4     movwf   0x74             	MOVWF	STK00
000131   3000     movlw   0x00             	MOVLW	0x00
000132   3183     movlp   0x03             	PAGESEL	_delay_ms
000133   23d3     call    0x03d3           	CALL	_delay_ms
000134   3181     movlp   0x01             	PAGESEL	$
                                           ;	.line	348; "main.c"	counter++;
000135   0021     movlb   0x01             	BANKSEL	r0x1053
000136   0ac4     incf    0x44, 0x1        	INCF	r0x1053,F
000137   28b8     goto    0x00b8           	GOTO	_00201_DS_
                                           ;	.line	350; "main.c"	}
000138   0008     return                   	RETURN	
                                           ; exit point of _main

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;2 compiler assigned registers:
                                           ;   r0x104D
                                           ;   r0x104E
                                           ;; Starting pCode block
                                           S_main__nibble_to_hex	code
                                           _nibble_to_hex:
                                           ; 2 exit points
                                           ;	.line	294; "main.c"	char nibble_to_hex(uint8_t c) {
000524   0021     movlb   0x01             	BANKSEL	r0x104D
000525   00bc     movwf   0x3c             	MOVWF	r0x104D
                                           ;	.line	296; "main.c"	nibble = (c & 0x0f) + '0';
000526   00bb     movwf   0x3b             	MOVWF	r0x104E
000527   300f     movlw   0x0f             	MOVLW	0x0f
000528   053b     andwf   0x3b, 0x0        	ANDWF	r0x104E,W
000529   00bc     movwf   0x3c             	MOVWF	r0x104D
00052a   3030     movlw   0x30             	MOVLW	0x30
00052b   07bc     addwf   0x3c, 0x1        	ADDWF	r0x104D,F
                                           ;;unsigned compare: left < lit(0x3A=58), size=1
                                           ;	.line	297; "main.c"	if (nibble >= 0x3a)
00052c   303a     movlw   0x3a             	MOVLW	0x3a
00052d   023c     subwf   0x3c, 0x0        	SUBWF	r0x104D,W
00052e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00052f   2d35     goto    0x0535           	GOTO	_00193_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffceec42b10
                                           ;	.line	298; "main.c"	nibble += 7;
000530   083c     movf    0x3c, 0x0        	MOVF	r0x104D,W
000531   00bb     movwf   0x3b             	MOVWF	r0x104E
000532   3007     movlw   0x07             	MOVLW	0x07
000533   073b     addwf   0x3b, 0x0        	ADDWF	r0x104E,W
000534   00bc     movwf   0x3c             	MOVWF	r0x104D
                                           _00193_DS_:
                                           ;	.line	299; "main.c"	return (nibble);
000535   0021     movlb   0x01             	BANKSEL	r0x104D
000536   083c     movf    0x3c, 0x0        	MOVF	r0x104D,W
                                           ;	.line	300; "main.c"	}
000537   0008     return                   	RETURN	
                                           ; exit point of _nibble_to_hex

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   _delay_ms
                                           ;   _delay_ms
                                           ;5 compiler assigned registers:
                                           ;   r0x1058
                                           ;   r0x1059
                                           ;   r0x105A
                                           ;   r0x105B
                                           ;   STK00
                                           ;; Starting pCode block
                                           S_main__ad	code
                                           _ad:
                                           ; 2 exit points
                                           ;	.line	286; "main.c"	uint8_t ad(uint8_t channel) {
0004b7   0021     movlb   0x01             	BANKSEL	r0x1058
0004b8   00c1     movwf   0x41             	MOVWF	r0x1058
                                           ;	.line	287; "main.c"	ADCON0 = (channel << 2) | 1;
0004b9   00c2     movwf   0x42             	MOVWF	r0x1059
0004ba   3542     lslf    0x42, 0x0        	LSLF	r0x1059,W
0004bb   00c1     movwf   0x41             	MOVWF	r0x1058
0004bc   35c1     lslf    0x41, 0x1        	LSLF	r0x1058,F
0004bd   0841     movf    0x41, 0x0        	MOVF	r0x1058,W
0004be   00c2     movwf   0x42             	MOVWF	r0x1059
0004bf   01c3     clrf    0x43             	CLRF	r0x105A
0004c0   1bc2     btfsc   0x42, 0x7        	BTFSC	r0x1059,7
0004c1   03c3     decf    0x43, 0x1        	DECF	r0x105A,F
0004c2   3001     movlw   0x01             	MOVLW	0x01
0004c3   0442     iorwf   0x42, 0x0        	IORWF	r0x1059,W
0004c4   00c1     movwf   0x41             	MOVWF	r0x1058
0004c5   0843     movf    0x43, 0x0        	MOVF	r0x105A,W
                                           ;;1	MOVWF	r0x105B
0004c6   0841     movf    0x41, 0x0        	MOVF	r0x1058,W
0004c7   0021     movlb   0x01             	BANKSEL	_ADCON0
0004c8   009d     movwf   0x1d             	MOVWF	_ADCON0
                                           ;	.line	288; "main.c"	ADGO = 1;
0004c9   149d     bsf     0x1d, 0x1        	BSF	_ADCON0bits,1
                                           ;	.line	289; "main.c"	delay_ms(1);
0004ca   3001     movlw   0x01             	MOVLW	0x01
0004cb   00f4     movwf   0x74             	MOVWF	STK00
0004cc   3000     movlw   0x00             	MOVLW	0x00
0004cd   3183     movlp   0x03             	PAGESEL	_delay_ms
0004ce   23d3     call    0x03d3           	CALL	_delay_ms
0004cf   3184     movlp   0x04             	PAGESEL	$
                                           _00187_DS_:
                                           ;	.line	290; "main.c"	while (ADGO) ;
0004d0   0021     movlb   0x01             	BANKSEL	_ADCON0bits
0004d1   189d     btfsc   0x1d, 0x1        	BTFSC	_ADCON0bits,1
0004d2   2cd0     goto    0x04d0           	GOTO	_00187_DS_
                                           ;	.line	291; "main.c"	return (ADRESH);
0004d3   081c     movf    0x1c, 0x0        	MOVF	_ADRESH,W
                                           ;	.line	292; "main.c"	}
0004d4   0008     return                   	RETURN	
                                           ; exit point of _ad

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x104D
                                           ;   STK00
                                           ;   r0x104E
                                           ;   r0x104F
                                           ;   r0x1050
                                           ;   r0x1051
                                           ;   r0x1052
                                           ;; Starting pCode block
                                           S_main__delay_ms	code
                                           _delay_ms:
                                           ; 2 exit points
                                           ;	.line	275; "main.c"	void delay_ms(uint16_t ms) {
0003d3   0021     movlb   0x01             	BANKSEL	r0x104D
0003d4   00bc     movwf   0x3c             	MOVWF	r0x104D
0003d5   0874     movf    0x74, 0x0        	MOVF	STK00,W
0003d6   00bb     movwf   0x3b             	MOVWF	r0x104E
                                           _00176_DS_:
                                           ;	.line	277; "main.c"	while (ms--) {
0003d7   0021     movlb   0x01             	BANKSEL	r0x104E
0003d8   083b     movf    0x3b, 0x0        	MOVF	r0x104E,W
0003d9   00bd     movwf   0x3d             	MOVWF	r0x104F
0003da   083c     movf    0x3c, 0x0        	MOVF	r0x104D,W
0003db   00be     movwf   0x3e             	MOVWF	r0x1050
0003dc   30ff     movlw   0xff             	MOVLW	0xff
0003dd   07bb     addwf   0x3b, 0x1        	ADDWF	r0x104E,F
0003de   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0003df   03bc     decf    0x3c, 0x1        	DECF	r0x104D,F
0003e0   083d     movf    0x3d, 0x0        	MOVF	r0x104F,W
0003e1   043e     iorwf   0x3e, 0x0        	IORWF	r0x1050,W
0003e2   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003e3   2bfc     goto    0x03fc           	GOTO	_00182_DS_
                                           ;	.line	279; "main.c"	for (u = 0; u < LOOPS_PER_MS; u++) {
0003e4   3090     movlw   0x90             	MOVLW	0x90
0003e5   00bd     movwf   0x3d             	MOVWF	r0x104F
0003e6   3001     movlw   0x01             	MOVLW	0x01
0003e7   00be     movwf   0x3e             	MOVWF	r0x1050
                                           _00181_DS_:
0003e8   0000     nop                      	nop	
0003e9   30ff     movlw   0xff             	MOVLW	0xff
0003ea   0021     movlb   0x01             	BANKSEL	r0x104F
0003eb   073d     addwf   0x3d, 0x0        	ADDWF	r0x104F,W
0003ec   00bf     movwf   0x3f             	MOVWF	r0x1051
0003ed   30ff     movlw   0xff             	MOVLW	0xff
0003ee   00c0     movwf   0x40             	MOVWF	r0x1052
0003ef   083e     movf    0x3e, 0x0        	MOVF	r0x1050,W
0003f0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003f1   0f3e     incfsz  0x3e, 0x0        	INCFSZ	r0x1050,W
0003f2   07c0     addwf   0x40, 0x1        	ADDWF	r0x1052,F
0003f3   083f     movf    0x3f, 0x0        	MOVF	r0x1051,W
0003f4   00bd     movwf   0x3d             	MOVWF	r0x104F
0003f5   0840     movf    0x40, 0x0        	MOVF	r0x1052,W
0003f6   00be     movwf   0x3e             	MOVWF	r0x1050
                                           ;	.line	279; "main.c"	for (u = 0; u < LOOPS_PER_MS; u++) {
0003f7   083f     movf    0x3f, 0x0        	MOVF	r0x1051,W
0003f8   0440     iorwf   0x40, 0x0        	IORWF	r0x1052,W
0003f9   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0003fa   2be8     goto    0x03e8           	GOTO	_00181_DS_
0003fb   2bd7     goto    0x03d7           	GOTO	_00176_DS_
                                           _00182_DS_:
                                           ;	.line	284; "main.c"	}
0003fc   0008     return                   	RETURN	
                                           ; exit point of _delay_ms

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__cog_init	code
                                           _cog_init:
                                           ; 2 exit points
                                           ;	.line	244; "main.c"	COG1CON0 = 0;
00050f   002d     movlb   0x0d             	BANKSEL	_COG1CON0
000510   0197     clrf    0x17             	CLRF	_COG1CON0
                                           ;	.line	245; "main.c"	COG1CON1 = 0;
000511   0198     clrf    0x18             	CLRF	_COG1CON1
                                           ;	.line	247; "main.c"	COG1RIS = 0b00001000;	/* CCP1 rising event	*/
000512   3008     movlw   0x08             	MOVLW	0x08
000513   0099     movwf   0x19             	MOVWF	_COG1RIS
                                           ;	.line	248; "main.c"	COG1RSIM = 0x0;		/* no rising delay	*/
000514   019a     clrf    0x1a             	CLRF	_COG1RSIM
                                           ;	.line	249; "main.c"	COG1FIS = 0b00001000;	/* CCP1 falling event	*/
000515   3008     movlw   0x08             	MOVLW	0x08
000516   009b     movwf   0x1b             	MOVWF	_COG1FIS
                                           ;	.line	250; "main.c"	COG1FSIM = 0x0;		/* no falling delay	*/
000517   019c     clrf    0x1c             	CLRF	_COG1FSIM
                                           ;	.line	252; "main.c"	COG1ASD0 = 0;	/* don't use shutdown		*/
000518   019d     clrf    0x1d             	CLRF	_COG1ASD0
                                           ;	.line	253; "main.c"	COG1ASD1 = 0;
000519   019e     clrf    0x1e             	CLRF	_COG1ASD1
                                           ;	.line	255; "main.c"	COG1STR = 0;	/* don't use steering control	*/
00051a   019f     clrf    0x1f             	CLRF	_COG1STR
                                           ;	.line	256; "main.c"	COG1DBR = 0;	/* no dead band			*/
00051b   0195     clrf    0x15             	CLRF	_COG1DBR
                                           ;	.line	257; "main.c"	COG1DBF = 0;
00051c   0196     clrf    0x16             	CLRF	_COG1DBF
                                           ;	.line	258; "main.c"	COG1BLKR = 0;	/* don't use blanking		*/
00051d   0193     clrf    0x13             	CLRF	_COG1BLKR
                                           ;	.line	259; "main.c"	COG1BLKF = 0;
00051e   0194     clrf    0x14             	CLRF	_COG1BLKF
                                           ;	.line	260; "main.c"	COG1PHR = 0;	/* normal phase			*/
00051f   0191     clrf    0x11             	CLRF	_COG1PHR
                                           ;	.line	261; "main.c"	COG1PHF = 0;
000520   0192     clrf    0x12             	CLRF	_COG1PHF
                                           ;	.line	263; "main.c"	COG1CON0 = 0b10001100;
000521   308c     movlw   0x8c             	MOVLW	0x8c
000522   0097     movwf   0x17             	MOVWF	_COG1CON0
                                           ;	.line	269; "main.c"	}
000523   0008     return                   	RETURN	
                                           ; exit point of _cog_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__clc_init	code
                                           _clc_init:
                                           ; 2 exit points
                                           ;	.line	236; "main.c"	CLC1SEL0 = 0;
00061f   003e     movlb   0x1e             	BANKSEL	_CLC1SEL0
000620   0192     clrf    0x12             	CLRF	_CLC1SEL0
                                           ;	.line	237; "main.c"	CLC1SEL1 = 0;
000621   0193     clrf    0x13             	CLRF	_CLC1SEL1
                                           ;	.line	241; "main.c"	}
000622   0008     return                   	RETURN	
                                           ; exit point of _clc_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__timer2_init	code
                                           _timer2_init:
                                           ; 2 exit points
                                           ;	.line	229; "main.c"	T2CON = 0b00000100;
00061a   3004     movlw   0x04             	MOVLW	0x04
00061b   0020     movlb   0x00             	BANKSEL	_T2CON
00061c   009c     movwf   0x1c             	MOVWF	_T2CON
                                           ;	.line	232; "main.c"	TMR2 = 0;			// reset timer2
00061d   019a     clrf    0x1a             	CLRF	_TMR2
                                           ;	.line	233; "main.c"	}
00061e   0008     return                   	RETURN	
                                           ; exit point of _timer2_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__timer1_init	code
                                           _timer1_init:
                                           ; 2 exit points
                                           ;	.line	211; "main.c"	T1CON = 0b00110001;
000582   3031     movlw   0x31             	MOVLW	0x31
000583   0020     movlb   0x00             	BANKSEL	_T1CON
000584   0098     movwf   0x18             	MOVWF	_T1CON
                                           ;	.line	215; "main.c"	TMR1GE = 0;			// timer is not controlled by gate.
000585   1399     bcf     0x19, 0x7        	BCF	_T1GCONbits,7
                                           ;	.line	216; "main.c"	TMR1H = 0;			// reset timer1 high
000586   0197     clrf    0x17             	CLRF	_TMR1H
                                           ;	.line	217; "main.c"	TMR1L = 0;			// and low bytes - prescaler automatic reset
000587   0196     clrf    0x16             	CLRF	_TMR1L
                                           ;	.line	218; "main.c"	CCP1CON = 0b00001000;	// set up capture and compare
000588   3008     movlw   0x08             	MOVLW	0x08
000589   0025     movlb   0x05             	BANKSEL	_CCP1CON
00058a   0093     movwf   0x13             	MOVWF	_CCP1CON
                                           ;	.line	221; "main.c"	CCPR1H = 0xFF;
00058b   30ff     movlw   0xff             	MOVLW	0xff
00058c   0092     movwf   0x12             	MOVWF	_CCPR1H
                                           ;	.line	222; "main.c"	CCPR1L = 0xFF;
00058d   30ff     movlw   0xff             	MOVLW	0xff
00058e   0091     movwf   0x11             	MOVWF	_CCPR1L
                                           ;	.line	224; "main.c"	CCP1IE = 1;
00058f   0021     movlb   0x01             	BANKSEL	_PIE1bits
000590   1511     bsf     0x11, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	225; "main.c"	}
000591   0008     return                   	RETURN	
                                           ; exit point of _timer1_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__timer0_init	code
                                           _timer0_init:
                                           ; 2 exit points
                                           ;	.line	203; "main.c"	TMR0CS = 0;			// FOSC / 4
0005e0   0021     movlb   0x01             	BANKSEL	_OPTION_REGbits
0005e1   1295     bcf     0x15, 0x5        	BCF	_OPTION_REGbits,5
                                           ;	.line	204; "main.c"	PSA = 0;			// use prescaler
0005e2   1195     bcf     0x15, 0x3        	BCF	_OPTION_REGbits,3
                                           ;	.line	205; "main.c"	PS1 = 1;			// prescaler 1:8
0005e3   1495     bsf     0x15, 0x1        	BSF	_OPTION_REGbits,1
                                           ;	.line	206; "main.c"	TMR0 = TIMER0_VAL;
0005e4   3006     movlw   0x06             	MOVLW	0x06
0005e5   0020     movlb   0x00             	BANKSEL	_TMR0
0005e6   0095     movwf   0x15             	MOVWF	_TMR0
                                           ;	.line	207; "main.c"	TMR0IE = 1;
0005e7   168b     bsf     0x0b, 0x5        	BSF	_INTCONbits,5
                                           ;	.line	208; "main.c"	}
0005e8   0008     return                   	RETURN	
                                           ; exit point of _timer0_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__uart_init	code
                                           _uart_init:
                                           ; 2 exit points
                                           ;	.line	187; "main.c"	TX9 = 1;			// 8-bit transmission
0005b0   0023     movlb   0x03             	BANKSEL	_TX1STAbits
0005b1   171e     bsf     0x1e, 0x6        	BSF	_TX1STAbits,6
                                           ;	.line	188; "main.c"	TX9D = 1;			//  one extra stop bit
0005b2   141e     bsf     0x1e, 0x0        	BSF	_TX1STAbits,0
                                           ;	.line	189; "main.c"	TXEN = 1;			// transmit enabled
0005b3   169e     bsf     0x1e, 0x5        	BSF	_TX1STAbits,5
                                           ;	.line	190; "main.c"	SYNC = 0;			// asynchronous mode
0005b4   121e     bcf     0x1e, 0x4        	BCF	_TX1STAbits,4
                                           ;	.line	191; "main.c"	BRGH = 1;			// high speed
0005b5   151e     bsf     0x1e, 0x2        	BSF	_TX1STAbits,2
                                           ;	.line	192; "main.c"	SPEN = 1;			// enable serial port (configures RX/DT and TX/CK pins as serial port pins)
0005b6   179d     bsf     0x1d, 0x7        	BSF	_RC1STAbits,7
                                           ;	.line	193; "main.c"	RX9 = 0;			// 8-bit reception
0005b7   131d     bcf     0x1d, 0x6        	BCF	_RC1STAbits,6
                                           ;	.line	194; "main.c"	CREN = 1;			// enable receiver
0005b8   161d     bsf     0x1d, 0x4        	BSF	_RC1STAbits,4
                                           ;	.line	195; "main.c"	BRG16 = USE_BRG16;		// 8-bit baud rate generator
0005b9   119f     bcf     0x1f, 0x3        	BCF	_BAUD1CONbits,3
                                           ;	.line	197; "main.c"	SPBRG = SBRG_VAL;		// calculated by defines
0005ba   3013     movlw   0x13             	MOVLW	0x13
0005bb   009b     movwf   0x1b             	MOVWF	_SPBRG
                                           ;	.line	199; "main.c"	RCIF = 0;
0005bc   0020     movlb   0x00             	BANKSEL	_PIR1bits
0005bd   1291     bcf     0x11, 0x5        	BCF	_PIR1bits,5
                                           ;	.line	200; "main.c"	}
0005be   0008     return                   	RETURN	
                                           ; exit point of _uart_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__ad_init	code
                                           _ad_init:
                                           ; 2 exit points
                                           ;	.line	180; "main.c"	ANSELA = 1 << 2;
0005e9   3004     movlw   0x04             	MOVLW	0x04
0005ea   0023     movlb   0x03             	BANKSEL	_ANSELA
0005eb   008c     movwf   0x0c             	MOVWF	_ANSELA
                                           ;	.line	181; "main.c"	ANSELC = 1 << 0;
0005ec   3001     movlw   0x01             	MOVLW	0x01
0005ed   008e     movwf   0x0e             	MOVWF	_ANSELC
                                           ;	.line	183; "main.c"	ADCON1 = 0b11100000;
0005ee   30e0     movlw   0xe0             	MOVLW	0xe0
0005ef   0021     movlb   0x01             	BANKSEL	_ADCON1
0005f0   009e     movwf   0x1e             	MOVWF	_ADCON1
                                           ;	.line	184; "main.c"	}
0005f1   0008     return                   	RETURN	
                                           ; exit point of _ad_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__i2c_init	code
                                           _i2c_init:
                                           ; 2 exit points
                                           ;	.line	168; "main.c"	SSP1CON1 = 0b00101000;
0005d6   3028     movlw   0x28             	MOVLW	0x28
0005d7   0024     movlb   0x04             	BANKSEL	_SSP1CON1
0005d8   0095     movwf   0x15             	MOVWF	_SSP1CON1
                                           ;	.line	169; "main.c"	SSP1CON2 = 0x00;
0005d9   0196     clrf    0x16             	CLRF	_SSP1CON2
                                           ;	.line	170; "main.c"	SSP1CON3 = 0x00;
0005da   0197     clrf    0x17             	CLRF	_SSP1CON3
                                           ;	.line	173; "main.c"	SSP1ADD = SSP1ADD_VAL;
0005db   304f     movlw   0x4f             	MOVLW	0x4f
0005dc   0092     movwf   0x12             	MOVWF	_SSP1ADD
                                           ;	.line	175; "main.c"	SSP1STAT = 0b11000000;
0005dd   30c0     movlw   0xc0             	MOVLW	0xc0
0005de   0094     movwf   0x14             	MOVWF	_SSP1STAT
                                           ;	.line	176; "main.c"	}
0005df   0008     return                   	RETURN	
                                           ; exit point of _i2c_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__system_init	code
                                           _system_init:
                                           ; 2 exit points
                                           ;	.line	123; "main.c"	OSCCON = 0b11110000;	// Configure oscillator
000426   30f0     movlw   0xf0             	MOVLW	0xf0
000427   0021     movlb   0x01             	BANKSEL	_OSCCON
000428   0099     movwf   0x19             	MOVWF	_OSCCON
                                           ;	.line	127; "main.c"	ANSELA = 0;
000429   0023     movlb   0x03             	BANKSEL	_ANSELA
00042a   018c     clrf    0x0c             	CLRF	_ANSELA
                                           ;	.line	128; "main.c"	ANSELB = 0;
00042b   018d     clrf    0x0d             	CLRF	_ANSELB
                                           ;	.line	129; "main.c"	ANSELC = 0;
00042c   018e     clrf    0x0e             	CLRF	_ANSELC
                                           ;	.line	130; "main.c"	ADCON0 = 0;
00042d   0021     movlb   0x01             	BANKSEL	_ADCON0
00042e   019d     clrf    0x1d             	CLRF	_ADCON0
                                           ;	.line	131; "main.c"	ADCON1 = 0;
00042f   019e     clrf    0x1e             	CLRF	_ADCON1
                                           ;	.line	132; "main.c"	ADCON2 = 0;
000430   019f     clrf    0x1f             	CLRF	_ADCON2
                                           ;	.line	133; "main.c"	CM1CON0 = 0;
000431   0022     movlb   0x02             	BANKSEL	_CM1CON0
000432   0191     clrf    0x11             	CLRF	_CM1CON0
                                           ;	.line	134; "main.c"	CM1CON1 = 0;
000433   0192     clrf    0x12             	CLRF	_CM1CON1
                                           ;	.line	135; "main.c"	CM2CON0 = 0;
000434   0193     clrf    0x13             	CLRF	_CM2CON0
                                           ;	.line	136; "main.c"	CM2CON1 = 0;
000435   0194     clrf    0x14             	CLRF	_CM2CON1
                                           ;	.line	139; "main.c"	TRISA0 = 0;
000436   0021     movlb   0x01             	BANKSEL	_TRISAbits
000437   100c     bcf     0x0c, 0x0        	BCF	_TRISAbits,0
                                           ;	.line	141; "main.c"	TRISA4 = 1;
000438   160c     bsf     0x0c, 0x4        	BSF	_TRISAbits,4
                                           ;	.line	142; "main.c"	TRISA5 = 1;
000439   168c     bsf     0x0c, 0x5        	BSF	_TRISAbits,5
                                           ;	.line	143; "main.c"	TRISC0 = 0;
00043a   100e     bcf     0x0e, 0x0        	BCF	_TRISCbits,0
                                           ;	.line	145; "main.c"	TRISC1 = 1;
00043b   148e     bsf     0x0e, 0x1        	BSF	_TRISCbits,1
                                           ;	.line	146; "main.c"	TRISC2 = 0;
00043c   110e     bcf     0x0e, 0x2        	BCF	_TRISCbits,2
                                           ;	.line	148; "main.c"	TRISA2 = 1;
00043d   150c     bsf     0x0c, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	149; "main.c"	TRISB5 = 0;
00043e   128d     bcf     0x0d, 0x5        	BCF	_TRISBbits,5
                                           ;	.line	150; "main.c"	TRISB6 = 0;
00043f   130d     bcf     0x0d, 0x6        	BCF	_TRISBbits,6
                                           ;	.line	151; "main.c"	TRISC0 = 1;
000440   140e     bsf     0x0e, 0x0        	BSF	_TRISCbits,0
                                           ;	.line	152; "main.c"	TRISC3 = 0;	/***/	/* Rail Data */
000441   118e     bcf     0x0e, 0x3        	BCF	_TRISCbits,3
                                           ;	.line	153; "main.c"	TRISB4 = 0;		/* Enable */
000442   120d     bcf     0x0d, 0x4        	BCF	_TRISBbits,4
                                           ;	.line	154; "main.c"	TRISC5 = 0;		/* LED */
000443   128e     bcf     0x0e, 0x5        	BCF	_TRISCbits,5
                                           ;	.line	157; "main.c"	SSP1IF = 0;
000444   0020     movlb   0x00             	BANKSEL	_PIR1bits
000445   1191     bcf     0x11, 0x3        	BCF	_PIR1bits,3
                                           ;	.line	158; "main.c"	TMR1IF = 0;
000446   1011     bcf     0x11, 0x0        	BCF	_PIR1bits,0
                                           ;	.line	159; "main.c"	CCP1IF = 0;
000447   1111     bcf     0x11, 0x2        	BCF	_PIR1bits,2
                                           ;	.line	161; "main.c"	CCP1IE = 1;			// disable interrupt on CCP1 will be check by polling as of today
000448   0021     movlb   0x01             	BANKSEL	_PIE1bits
000449   1511     bsf     0x11, 0x2        	BSF	_PIE1bits,2
                                           ;	.line	162; "main.c"	PEIE = 1;
00044a   0020     movlb   0x00             	BANKSEL	_INTCONbits
00044b   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	163; "main.c"	GIE = 1;
00044c   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	164; "main.c"	}
00044d   0008     return                   	RETURN	
                                           ; exit point of _system_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main__pps_init	code
                                           _pps_init:
                                           ; 2 exit points
                                           ;	.line	96; "main.c"	PPSLOCK = 0x55;
0003fd   3055     movlw   0x55             	MOVLW	0x55
0003fe   003c     movlb   0x1c             	BANKSEL	_PPSLOCK
0003ff   008f     movwf   0x0f             	MOVWF	_PPSLOCK
                                           ;	.line	97; "main.c"	PPSLOCK = 0xaa;
000400   30aa     movlw   0xaa             	MOVLW	0xaa
000401   008f     movwf   0x0f             	MOVWF	_PPSLOCK
                                           ;	.line	98; "main.c"	PPSLOCK = 0;		// unlock PPS
000402   018f     clrf    0x0f             	CLRF	_PPSLOCK
                                           ;	.line	100; "main.c"	SSPCLKPPS = 0x05;
000403   3005     movlw   0x05             	MOVLW	0x05
000404   00a0     movwf   0x20             	MOVWF	_SSPCLKPPS
                                           ;	.line	101; "main.c"	RA5PPS = 0b10000;		// RA5 output SCL
000405   3010     movlw   0x10             	MOVLW	0x10
000406   003d     movlb   0x1d             	BANKSEL	_RA5PPS
000407   0095     movwf   0x15             	MOVWF	_RA5PPS
                                           ;	.line	102; "main.c"	SSPDATPPS = 0x04;
000408   3004     movlw   0x04             	MOVLW	0x04
000409   003c     movlb   0x1c             	BANKSEL	_SSPDATPPS
00040a   00a1     movwf   0x21             	MOVWF	_SSPDATPPS
                                           ;	.line	103; "main.c"	RA4PPS = 0b10001;		// RA4 output SDA
00040b   3011     movlw   0x11             	MOVLW	0x11
00040c   003d     movlb   0x1d             	BANKSEL	_RA4PPS
00040d   0094     movwf   0x14             	MOVWF	_RA4PPS
                                           ;	.line	105; "main.c"	RXPPS = 0b10001;		// input  EUSART RX -> RC1
00040e   3011     movlw   0x11             	MOVLW	0x11
00040f   003c     movlb   0x1c             	BANKSEL	_RXPPS
000410   00a4     movwf   0x24             	MOVWF	_RXPPS
                                           ;	.line	106; "main.c"	RC2PPS = 0b10100;		// RC2 output TX/CK
000411   3014     movlw   0x14             	MOVLW	0x14
000412   003d     movlb   0x1d             	BANKSEL	_RC2PPS
000413   00a2     movwf   0x22             	MOVWF	_RC2PPS
                                           ;	.line	108; "main.c"	RC3PPS = 0b01100;		// CCP1
000414   300c     movlw   0x0c             	MOVLW	0x0c
000415   00a3     movwf   0x23             	MOVWF	_RC3PPS
                                           ;	.line	112; "main.c"	COGINPPS = 0b10011;		// RC3 PULSE
000416   3013     movlw   0x13             	MOVLW	0x13
000417   003c     movlb   0x1c             	BANKSEL	_COGINPPS
000418   0097     movwf   0x17             	MOVWF	_COGINPPS
                                           ;	.line	113; "main.c"	RB5PPS = 0b01001;		// COG1B -> RPWM
000419   3009     movlw   0x09             	MOVLW	0x09
00041a   003d     movlb   0x1d             	BANKSEL	_RB5PPS
00041b   009d     movwf   0x1d             	MOVWF	_RB5PPS
                                           ;	.line	114; "main.c"	RB6PPS = 0b01000;		// COG1A -> LPWM
00041c   3008     movlw   0x08             	MOVLW	0x08
00041d   009e     movwf   0x1e             	MOVWF	_RB6PPS
                                           ;	.line	116; "main.c"	PPSLOCK = 0x55;
00041e   3055     movlw   0x55             	MOVLW	0x55
00041f   003c     movlb   0x1c             	BANKSEL	_PPSLOCK
000420   008f     movwf   0x0f             	MOVWF	_PPSLOCK
                                           ;	.line	117; "main.c"	PPSLOCK = 0xaa;
000421   30aa     movlw   0xaa             	MOVLW	0xaa
000422   008f     movwf   0x0f             	MOVWF	_PPSLOCK
                                           ;	.line	118; "main.c"	PPSLOCK = 1;		// lock PPS
000423   3001     movlw   0x01             	MOVLW	0x01
000424   008f     movwf   0x0f             	MOVWF	_PPSLOCK
                                           ;	.line	119; "main.c"	}
000425   0008     return                   	RETURN	
                                           ; exit point of _pps_init

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_main___sdcc_gsinit_startup	code
                                           __sdcc_gsinit_startup:
                                           ; 2 exit points
000626   3180     movlp   0x00             	pagesel	_main 
000627   2890     goto    0x0090           	goto	_main 
                                           ;	.line	82; "main.c"	}
000628   0008     return                   	RETURN	
                                           ; exit point of __sdcc_gsinit_startup


                                           ;	code size estimation:
                                           ;	  434+  137 =   571 instructions ( 1416 byte)

                                           	end
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Aug 13 2015
                                           ;  MPASM PIC16F1709 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
