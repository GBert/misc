diff --git a/cangen.c b/cangen.c
index db4c803..8adfcb2 100644
--- a/cangen.c
+++ b/cangen.c
@@ -64,7 +64,7 @@
 #include <linux/can/raw.h>
 #include "lib.h"
 
-#define DEFAULT_GAP 200 /* ms */
+#define DEFAULT_GAP (1000000)
 
 #define MODE_RANDOM	0
 #define MODE_INCREMENT	1
@@ -79,8 +79,8 @@ void print_usage(char *prg)
 {
 	fprintf(stderr, "\n%s: generate CAN frames\n\n", prg);
 	fprintf(stderr, "Usage: %s [options] <CAN interface>\n", prg);
-	fprintf(stderr, "Options: -g <ms>       (gap in milli seconds "
-		"- default: %d ms)\n", DEFAULT_GAP);
+	fprintf(stderr, "Options: -g <us>       (gap in microseconds "
+		"- default: %d us)\n", DEFAULT_GAP);
 	fprintf(stderr, "         -e            (generate extended frame mode "
 		"(EFF) CAN frames)\n");
 	fprintf(stderr, "         -f            (generate CAN FD CAN frames)\n");
@@ -131,7 +131,7 @@ void sigterm(int signo)
 
 int main(int argc, char **argv)
 {
-	double gap = DEFAULT_GAP;
+	unsigned int  gap = DEFAULT_GAP;
 	unsigned long polltimeout = 0;
 	unsigned char ignore_enobufs = 0;
 	unsigned char extended = 0;
@@ -159,7 +159,6 @@ int main(int argc, char **argv)
 	int i;
 	struct ifreq ifr;
 
-	struct timespec ts;
 	struct timeval now;
 
 	/* set seed value for pseudo random numbers */
@@ -178,7 +177,7 @@ int main(int argc, char **argv)
 			break;
 
 		case 'g':
-			gap = strtod(optarg, NULL);
+			gap = strtoul(optarg, NULL, 0);
 			break;
 
 		case 'e':
@@ -268,9 +267,6 @@ int main(int argc, char **argv)
 		return 1;
 	}
 
-	ts.tv_sec = gap / 1000;
-	ts.tv_nsec = (long)(((long long)(gap * 1000000)) % 1000000000ll);
-
 	/* recognize obviously missing commandline option */
 	if (id_mode == MODE_FIX && frame.can_id > 0x7FF && !extended) {
 		printf("The given CAN-ID is greater than 0x7FF and "
@@ -444,9 +440,8 @@ resend:
 			return 1;
 		}
 
-		if (gap) /* gap == 0 => performance test :-] */
-			if (nanosleep(&ts, NULL))
-				return 1;
+		if (gap)
+			usleep(gap);
 		    
 		if (id_mode == MODE_INCREMENT)
 			frame.can_id++;
