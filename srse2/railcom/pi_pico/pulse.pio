;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;

.program pulse

; Repeatedly get one word of data from the TX FIFO, stalling when the FIFO is
; empty. Write the least significant bit to the OUT pin group.

loop:
    out x, 8
    out pins, 1
    out y, 7      [1]
wait_loop1:
    jmp x-- wait_loop1
    out x, 8
    out pins, 1
    out y, 7
wait_loop2:
    jmp x-- wait_loop2
    jmp loop

% c-sdk {
#include "hardware/clocks.h"

static inline void pulse_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = pulse_program_get_default_config(offset);

    // Map the state machine's OUT pin group to one pin, namely the `pin`
    // parameter to this function.
    sm_config_set_out_pins(&c, pin, 1);
    // Set this pin's GPIO function (connect PIO to the pad)
    pio_gpio_init(pio, pin);
    // Set the pin direction to output at the PIO
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);


    float div = (float)clock_get_hz(clk_sys) / 1000000;
    sm_config_set_clkdiv(&c, div);

    sm_config_set_out_shift(&c, true, true, 32);

    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}
%}
